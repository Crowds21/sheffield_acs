{:highlights [{:id #uuid "6277c73d-1fde-4ce0-87b9-9879c596abe3", :page 38, :position {:bounding {:x1 89.4375, :y1 922.515625, :x2 750.22802734375, :y2 974.59375, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.4375, :y1 922.515625, :x2 119.61456298828125, :y2 950.515625, :width 839.9999999999999, :height 1092} {:x1 159.5625, :y1 922.515625, :x2 750.22802734375, :y2 950.515625, :width 839.9999999999999, :height 1092} {:x1 124.625, :y1 926.078125, :x2 750.22802734375, :y2 947.078125, :width 839.9999999999999, :height 1092} {:x1 90, :y1 946.59375, :x2 183.7364501953125, :y2 974.59375, :width 839.9999999999999, :height 1092} {:x1 90, :y1 951.59375, :x2 174.6031494140625, :y2 970.59375, :width 839.9999999999999, :height 1092}), :page 38}, :content {:text "Thevalkeyword comes fromvalue, indicating something that cannot change—it isimmutable. "}, :properties {:color "red"}} {:id #uuid "6277c740-4e03-41a4-91c3-82dfad6b6b22", :page 38, :position {:bounding {:x1 89.4375, :y1 922.515625, :x2 750.22802734375, :y2 974.59375, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.4375, :y1 922.515625, :x2 119.61456298828125, :y2 950.515625, :width 839.9999999999999, :height 1092} {:x1 159.5625, :y1 922.515625, :x2 750.22802734375, :y2 950.515625, :width 839.9999999999999, :height 1092} {:x1 124.625, :y1 926.078125, :x2 750.22802734375, :y2 947.078125, :width 839.9999999999999, :height 1092} {:x1 90, :y1 946.59375, :x2 178.84136962890625, :y2 974.59375, :width 839.9999999999999, :height 1092} {:x1 90, :y1 951.59375, :x2 174.6031494140625, :y2 970.59375, :width 839.9999999999999, :height 1092}), :page 38}, :content {:text "Thevalkeyword comes fromvalue, indicating something that cannot change—it isimmutable."}, :properties {:color "red"}} {:id #uuid "6277c742-48b1-4717-9cb5-b997d06692cd", :page 38, :position {:bounding {:x1 89.4375, :y1 922.515625, :x2 750.22802734375, :y2 974.59375, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.4375, :y1 922.515625, :x2 119.61456298828125, :y2 950.515625, :width 839.9999999999999, :height 1092} {:x1 159.5625, :y1 922.515625, :x2 750.22802734375, :y2 950.515625, :width 839.9999999999999, :height 1092} {:x1 124.625, :y1 926.078125, :x2 750.22802734375, :y2 947.078125, :width 839.9999999999999, :height 1092} {:x1 90, :y1 946.59375, :x2 183.7364501953125, :y2 974.59375, :width 839.9999999999999, :height 1092} {:x1 90, :y1 951.59375, :x2 174.6031494140625, :y2 970.59375, :width 839.9999999999999, :height 1092}), :page 38}, :content {:text "Thevalkeyword comes fromvalue, indicating something that cannot change—it isimmutable. "}, :properties {:color "yellow"}} {:id #uuid "6277c746-9841-477e-92d7-361a3ed62933", :page 38, :position {:bounding {:x1 159.5625, :y1 922.515625, :x2 227.04595947265625, :y2 950.515625, :width 839.9999999999999, :height 1092}, :rects ({:x1 159.5625, :y1 922.515625, :x2 227.04595947265625, :y2 950.515625, :width 839.9999999999999, :height 1092}), :page 38}, :content {:text "keyword"}, :properties {:color "yellow"}} {:id #uuid "6277c74f-cfe3-43d8-ae15-b45eb285d98c", :page 38, :position {:bounding {:x1 89.4375, :y1 922.515625, :x2 750.22802734375, :y2 974.59375, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.4375, :y1 922.515625, :x2 119.61456298828125, :y2 950.515625, :width 839.9999999999999, :height 1092} {:x1 159.5625, :y1 922.515625, :x2 750.22802734375, :y2 950.515625, :width 839.9999999999999, :height 1092} {:x1 124.625, :y1 926.078125, :x2 750.22802734375, :y2 947.078125, :width 839.9999999999999, :height 1092} {:x1 90, :y1 946.59375, :x2 178.84136962890625, :y2 974.59375, :width 839.9999999999999, :height 1092} {:x1 90, :y1 951.59375, :x2 174.6031494140625, :y2 970.59375, :width 839.9999999999999, :height 1092}), :page 38}, :content {:text "Thevalkeyword comes fromvalue, indicating something that cannot change—it isimmutable."}, :properties {:color "yellow"}} {:id #uuid "6277c763-6912-4a25-9252-72c462ca1e19", :page 38, :position {:bounding {:x1 89.4375, :y1 922.515625, :x2 750.22802734375, :y2 974.59375, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.4375, :y1 922.515625, :x2 119.61456298828125, :y2 950.515625, :width 839.9999999999999, :height 1092} {:x1 159.5625, :y1 922.515625, :x2 750.22802734375, :y2 950.515625, :width 839.9999999999999, :height 1092} {:x1 124.625, :y1 926.078125, :x2 750.22802734375, :y2 947.078125, :width 839.9999999999999, :height 1092} {:x1 90, :y1 946.59375, :x2 183.7364501953125, :y2 974.59375, :width 839.9999999999999, :height 1092} {:x1 90, :y1 951.59375, :x2 174.6031494140625, :y2 970.59375, :width 839.9999999999999, :height 1092}), :page 38}, :content {:text "Thevalkeyword comes fromvalue, indicating something that cannot change—it isimmutable. "}, :properties {:color "yellow"}} {:id #uuid "6277c77a-261a-4370-80db-ad3a431d3870", :page 38, :position {:bounding {:x1 68, :y1 918, :x2 756, :y2 1003, :width 839.9999999999999, :height 1092}, :rects (), :page 38}, :content {:text "[:span]", :image 1652017017355}, :properties {:color "yellow"}} {:id #uuid "6278fdb8-dee0-4f4e-a7a1-f83212c2f808", :page 205, :position {:bounding {:x1 90, :y1 314.41405487060547, :x2 750.39111328125, :y2 365.9895706176758, :width 839.9999999999999, :height 1092}, :rects ({:x1 680.0821533203125, :y1 314.41405487060547, :x2 750.39111328125, :y2 341.91405487060547, :width 839.9999999999999, :height 1092} {:x1 90, :y1 338.4895706176758, :x2 749.4011840820312, :y2 365.9895706176758, :width 839.9999999999999, :height 1092}), :page 205}, :content {:text " creatingclasses that primarily hold data still requires a significant amount of repetitive code"}, :properties {:color "blue"}} {:id #uuid "627900c5-a4dc-41a3-a669-d3884eb69a7a", :page 205, :position {:bounding {:x1 89.50520324707031, :y1 445.10416412353516, :x2 750.3629150390625, :y2 496.6796646118164, :width 839.9999999999999, :height 1092}, :rects ({:x1 287.1279296875, :y1 445.10416412353516, :x2 689.9002685546875, :y2 472.60416412353516, :width 839.9999999999999, :height 1092} {:x1 733.6328125, :y1 445.10416412353516, :x2 750.3629150390625, :y2 472.60416412353516, :width 839.9999999999999, :height 1092} {:x1 696.5755004882812, :y1 448.1770706176758, :x2 750.3629150390625, :y2 469.01041412353516, :width 839.9999999999999, :height 1092} {:x1 119.4140625, :y1 469.1796646118164, :x2 123.7890625, :y2 496.6796646118164, :width 839.9999999999999, :height 1092} {:x1 89.50520324707031, :y1 472.25260162353516, :x2 123.7890625, :y2 493.0859146118164, :width 839.9999999999999, :height 1092}), :page 205}, :content {:text " Each constructor parameter must be preceded byvarorval:"}, :properties {:color "blue"}} {:id #uuid "62790107-d826-460d-bf68-53caaef8029c", :page 206, :position {:bounding {:x1 131.51040649414062, :y1 170.32550048828125, :x2 750.5124816894531, :y2 270.05206298828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 214.34295654296875, :y1 170.32550048828125, :x2 750.468505859375, :y2 197.82550048828125, :width 839.9999999999999, :height 1092} {:x1 131.51040649414062, :y1 194.4010009765625, :x2 256.6441955566406, :y2 221.9010009765625, :width 839.9999999999999, :height 1092} {:x1 346.2109375, :y1 194.4010009765625, :x2 537.8094482421875, :y2 221.9010009765625, :width 839.9999999999999, :height 1092} {:x1 587.4609375, :y1 194.4010009765625, :x2 750.1345825195312, :y2 221.9010009765625, :width 839.9999999999999, :height 1092} {:x1 131.51040649414062, :y1 198.56768798828125, :x2 750.1345825195312, :y2 219.4010009765625, :width 839.9999999999999, :height 1092} {:x1 131.51040649414062, :y1 218.4765625, :x2 750.5124816894531, :y2 245.9765625, :width 839.9999999999999, :height 1092} {:x1 131.51040649414062, :y1 222.6431884765625, :x2 750.5124816894531, :y2 241.80987548828125, :width 839.9999999999999, :height 1092} {:x1 131.51040649414062, :y1 242.55206298828125, :x2 318.9158935546875, :y2 270.05206298828125, :width 839.9999999999999, :height 1092}), :page 206}, :content {:text "To achieve that behavior for a regular class, you must define aspecial functionequals()to compare instances. Indataclasses, this functionis automatically generated; it compares the values of all properties specified asconstructor parameters."}, :properties {:color "blue"}} {:id #uuid "6279014d-3da9-44b6-8dcf-41bff335ce39", :page 206, :position {:bounding {:x1 90, :y1 783.5025634765625, :x2 750.1322021484375, :y2 835.078125, :width 839.9999999999999, :height 1092}, :rects ({:x1 161.50230407714844, :y1 783.5025634765625, :x2 187.5838165283203, :y2 811.0025634765625, :width 839.9999999999999, :height 1092} {:x1 265.44268798828125, :y1 783.5025634765625, :x2 497.65234375, :y2 811.0025634765625, :width 839.9999999999999, :height 1092} {:x1 555.5078125, :y1 783.5025634765625, :x2 750.1322021484375, :y2 811.0025634765625, :width 839.9999999999999, :height 1092} {:x1 196.54946899414062, :y1 786.5755004882812, :x2 750.1322021484375, :y2 807.4088134765625, :width 839.9999999999999, :height 1092} {:x1 90, :y1 807.578125, :x2 252.77456665039062, :y2 835.078125, :width 839.9999999999999, :height 1092} {:x1 305.6640625, :y1 807.578125, :x2 416.3212890625, :y2 835.078125, :width 839.9999999999999, :height 1092} {:x1 90, :y1 811.7447509765625, :x2 299.1067810058594, :y2 830.9114379882812, :width 839.9999999999999, :height 1092}), :page 206}, :content {:text "thePersonclass is defined without thedatakeyword, two instancescontaining the samenameare not equal."}, :properties {:color "red"}} {:id #uuid "627c6dde-01a8-43e3-8fd3-26534e1f1b44", :page 59, :position {:bounding {:x1 89.51822471618652, :y1 370.8853759765625, :x2 750.2051601409912, :y2 446.53643798828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 370.8853759765625, :x2 463.44826316833496, :y2 398.3853759765625, :width 839.9999999999999, :height 1092} {:x1 510.14320945739746, :y1 370.8853759765625, :x2 750.1847743988037, :y2 398.3853759765625, :width 839.9999999999999, :height 1092} {:x1 328.51561546325684, :y1 375.05206298828125, :x2 750.1847743988037, :y2 394.21875, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 394.9609375, :x2 207.89652061462402, :y2 422.4609375, :width 839.9999999999999, :height 1092} {:x1 252.44789695739746, :y1 394.9609375, :x2 443.5987148284912, :y2 422.4609375, :width 839.9999999999999, :height 1092} {:x1 462.96874046325684, :y1 394.9609375, :x2 750.2051601409912, :y2 422.4609375, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 399.1275634765625, :x2 750.2051601409912, :y2 419.9609375, :width 839.9999999999999, :height 1092} {:x1 89.51822471618652, :y1 419.03643798828125, :x2 157.1263484954834, :y2 446.53643798828125, :width 839.9999999999999, :height 1092} {:x1 201.91405296325684, :y1 419.03643798828125, :x2 416.71019554138184, :y2 446.53643798828125, :width 839.9999999999999, :height 1092} {:x1 461.39320945739746, :y1 419.03643798828125, :x2 465.76820945739746, :y2 446.53643798828125, :width 839.9999999999999, :height 1092} {:x1 89.51822471618652, :y1 423.203125, :x2 461.39845848083496, :y2 444.03643798828125, :width 839.9999999999999, :height 1092}), :page 59}, :content {:text "Using a numeric literal in both[1]and[2]forcesLongcalculations, and also producesa result of typeLong. The location where theLappears is unimportant. If one of thevalues isLong, the resulting expression isLong."}, :properties {:color "red"}} {:id #uuid "627c6de9-980f-467d-b249-d54ad6f3feea", :page 59, :position {:bounding {:x1 89.99999809265137, :y1 705.2603759765625, :x2 518.0060634613037, :y2 732.7603759765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 234.57030296325684, :y1 705.2603759765625, :x2 396.05324363708496, :y2 732.7603759765625, :width 839.9999999999999, :height 1092} {:x1 445.7552089691162, :y1 705.2603759765625, :x2 518.0060634613037, :y2 732.7603759765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 708.3333129882812, :x2 440.78648948669434, :y2 729.1666259765625, :width 839.9999999999999, :height 1092}), :page 59}, :content {:text "Long.MAX_VALUEis the largest value aLongcan hold."}, :properties {:color "red"}} {:id #uuid "627de945-6bfb-431a-afe1-d39f2c39cf89", :page 53, :position {:bounding {:x1 131.5, :y1 480.484375, :x2 750.1775512695312, :y2 532.5625, :width 839.9999999999999, :height 1092}, :rects ({:x1 427, :y1 480.484375, :x2 750.1775512695312, :y2 508.484375, :width 839.9999999999999, :height 1092} {:x1 161.71875, :y1 484.046875, :x2 750.1775512695312, :y2 505.046875, :width 839.9999999999999, :height 1092} {:x1 131.5, :y1 504.5625, :x2 234.9766845703125, :y2 532.5625, :width 839.9999999999999, :height 1092} {:x1 274.78125, :y1 504.5625, :x2 362.5549621582031, :y2 532.5625, :width 839.9999999999999, :height 1092} {:x1 131.5, :y1 509.5625, :x2 269.8102111816406, :y2 528.5625, :width 839.9999999999999, :height 1092}), :page 53}, :content {:text "if(condition) 'a' else 'b'is evaluated and the result is substitutedfor the entire${}expression."}, :properties {:color "yellow"}} {:id #uuid "627de948-69ef-4c15-a510-ad323e658010", :page 53, :position {:bounding {:x1 126.25, :y1 293.09375, :x2 426.28125, :y2 313.09375, :width 839.9999999999999, :height 1092}, :rects ({:x1 126.25, :y1 293.09375, :x2 426.28125, :y2 313.09375, :width 839.9999999999999, :height 1092}), :page 53}, :content {:text "\"${if (condition) 'a' else 'b'}\")"}, :properties {:color "yellow"}} {:id #uuid "627de952-3f55-47ce-8c34-8500b3f40f45", :page 52, :position {:bounding {:x1 108.125, :y1 446.6875, :x2 335.625, :y2 466.6875, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.125, :y1 446.6875, :x2 335.625, :y2 466.6875, :width 839.9999999999999, :height 1092}), :page 52}, :content {:text "println(\"Found $answer!\")"}, :properties {:color "yellow"}} {:id #uuid "627de97b-1efd-4a4a-b865-050366d90b59", :page 43, :position {:bounding {:x1 90, :y1 465.53125, :x2 606.714111328125, :y2 546.9375, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 465.53125, :x2 606.714111328125, :y2 485.53125, :width 839.9999999999999, :height 1092} {:x1 108.125, :y1 486, :x2 225.97933959960938, :y2 506, :width 839.9999999999999, :height 1092} {:x1 108.125, :y1 506.46875, :x2 225.9844970703125, :y2 526.46875, :width 839.9999999999999, :height 1092} {:x1 90, :y1 526.9375, :x2 99.96875, :y2 546.9375, :width 839.9999999999999, :height 1092}), :page 43}, :content {:text "funfunctionName(p1: Type1, p2: Type2, ...): ReturnType {lines of codereturnresult}"}, :properties {:color "yellow"}} {:id #uuid "627dffef-abf7-4a56-9072-ae151436e4dd", :page 67, :position {:bounding {:x1 73.20796203613281, :y1 276.44061279296875, :x2 613.666015625, :y2 318.9580383300781, :width 687, :height 893.1000000000001}, :rects ({:x1 250.0216827392578, :y1 276.44061279296875, :x2 275.0318298339844, :y2 299.26239013671875, :width 687, :height 893.1000000000001} {:x1 299.16729736328125, :y1 276.44061279296875, :x2 613.666015625, :y2 299.26239013671875, :width 687, :height 893.1000000000001} {:x1 278.853515625, :y1 279.18634033203125, :x2 613.666015625, :y2 296.68304443359375, :width 687, :height 893.1000000000001} {:x1 73.20796203613281, :y1 296.1362609863281, :x2 117.70072937011719, :y2 318.9580383300781, :width 687, :height 893.1000000000001}), :page 67}, :content {:text "Theinkeyword indicates that you are stepping throughvalues:"}, :properties {:color "yellow"}} {:id #uuid "627e0001-da4c-498c-8cee-6f6c6780a845", :page 68, :position {:bounding {:x1 131.3916015625, :y1 323.74822998046875, :x2 520.8184356689453, :y2 346.57000732421875, :width 687, :height 893.1000000000001}, :rects ({:x1 131.3916015625, :y1 323.74822998046875, :x2 168.82135009765625, :y2 346.57000732421875, :width 687, :height 893.1000000000001} {:x1 193.23622131347656, :y1 323.74822998046875, :x2 520.8184356689453, :y2 346.57000732421875, :width 687, :height 893.1000000000001} {:x1 172.8511505126953, :y1 326.49395751953125, :x2 189.1688232421875, :y2 343.99066162109375, :width 687, :height 893.1000000000001}), :page 68}, :content {:text "Using..syntax includes both bounds in the resulting range"}, :properties {:color "yellow"}} {:id #uuid "627e0019-e603-48ce-853e-f0618f327f11", :page 68, :position {:bounding {:x1 131.3916015625, :y1 345.35760498046875, :x2 608.4989013671875, :y2 368.17938232421875, :width 687, :height 893.1000000000001}, :rects ({:x1 176.23875427246094, :y1 345.35760498046875, :x2 436.6291961669922, :y2 368.17938232421875, :width 687, :height 893.1000000000001} {:x1 460.8690490722656, :y1 345.35760498046875, :x2 608.4989013671875, :y2 368.17938232421875, :width 687, :height 893.1000000000001} {:x1 131.3916015625, :y1 348.10333251953125, :x2 456.8016357421875, :y2 365.60003662109375, :width 687, :height 893.1000000000001}), :page 68}, :content {:text "untilexcludes the end. The output shows that10is not part of the range"}, :properties {:color "yellow"}} {:id #uuid "627e007a-940c-4c1c-922e-620879f076af", :page 69, :position {:bounding {:x1 131.3916015625, :y1 558.0636596679688, :x2 370.37835693359375, :y2 580.8854370117188, :width 687, :height 893.1000000000001}, :rects ({:x1 184.39279174804688, :y1 558.0636596679688, :x2 370.37835693359375, :y2 580.8854370117188, :width 687, :height 893.1000000000001} {:x1 131.3916015625, :y1 560.8212890625, :x2 180.34461975097656, :y2 578.3179321289062, :width 687, :height 893.1000000000001}), :page 69}, :content {:text "downToproduces a decreasing range."}, :properties {:color "yellow"}} {:id #uuid "627e0088-3400-43ec-8950-15a21ee6d1e6", :page 69, :position {:bounding {:x1 107.54759979248047, :y1 579.6730346679688, :x2 613.7401123046875, :y2 622.1904296875, :width 687, :height 893.1000000000001}, :rects ({:x1 168.89300537109375, :y1 579.6730346679688, :x2 613.7401123046875, :y2 602.4947509765625, :width 687, :height 893.1000000000001} {:x1 131.7957305908203, :y1 582.4306640625, :x2 613.7401123046875, :y2 599.9273071289062, :width 687, :height 893.1000000000001} {:x1 107.54759979248047, :y1 599.36865234375, :x2 147.89129638671875, :y2 622.1904296875, :width 687, :height 893.1000000000001}), :page 69}, :content {:text "stepchanges the interval. Here, the range steps by a value of two insteadof one"}, :properties {:color "yellow"}} {:id #uuid "627e0148-fc54-4b66-bd12-d5b1b135662c", :page 72, :position {:bounding {:x1 141.88723754882812, :y1 707.3560752868652, :x2 423.2857360839844, :y2 730.1778526306152, :width 687, :height 893.1000000000001}, :rects ({:x1 141.88723754882812, :y1 707.3560752868652, :x2 423.2857360839844, :y2 730.1778526306152, :width 687, :height 893.1000000000001}), :page 72}, :content {:text "is a standard library function, not a keyword"}, :properties {:color "yellow"}} {:id #uuid "62808b50-881a-47a1-bf45-00b275b30b50", :page 77, :position {:bounding {:x1 89.44009971618652, :y1 338.4895706176758, :x2 750.5155391693115, :y2 390.06510162353516, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.44009971618652, :y1 338.4895706176758, :x2 750.5155391693115, :y2 365.9895706176758, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 362.56510162353516, :x2 377.139066696167, :y2 390.06510162353516, :width 839.9999999999999, :height 1092}), :page 77}, :content {:text "There’s a basic difference: a statement has an effect, but produces no result. Anexpression always produces a result."}, :properties {:color "yellow"}} {:id #uuid "62808b60-c25f-483a-9fb6-3527c8877842", :page 77, :position {:bounding {:x1 89.41406059265137, :y1 421.0286331176758, :x2 752.9687099456787, :y2 472.60416412353516, :width 839.9999999999999, :height 1092}, :rects ({:x1 222.19374656677246, :y1 421.0286331176758, :x2 752.9687099456787, :y2 448.5286331176758, :width 839.9999999999999, :height 1092} {:x1 658.9192714691162, :y1 425.1952896118164, :x2 752.9687099456787, :y2 444.36197662353516, :width 839.9999999999999, :height 1092} {:x1 89.41406059265137, :y1 445.10416412353516, :x2 494.60951805114746, :y2 472.60416412353516, :width 839.9999999999999, :height 1092} {:x1 89.41406059265137, :y1 449.2708206176758, :x2 296.2228603363037, :y2 468.4374771118164, :width 839.9999999999999, :height 1092}), :page 77}, :content {:text " Another way to say this is “a statement is called for itsside effects”(that is, what it doesotherthan producing a result)"}, :properties {:color "yellow"}} {:id #uuid "62808b62-11ef-43f4-b04a-07588625a9b2", :page 77, :position {:bounding {:x1 131.51041221618652, :y1 497.7473831176758, :x2 342.2786464691162, :y2 525.2473831176758, :width 839.9999999999999, :height 1092}, :rects ({:x1 131.51041221618652, :y1 497.7473831176758, :x2 342.2786464691162, :y2 525.2473831176758, :width 839.9999999999999, :height 1092}), :page 77}, :content {:text "A statement changes state."}, :properties {:color "yellow"}} {:id #uuid "62808b6b-5993-44e0-b2fe-3a276563e8e2", :page 77, :position {:bounding {:x1 131.51041221618652, :y1 627.1354141235352, :x2 324.75258445739746, :y2 654.6354141235352, :width 839.9999999999999, :height 1092}, :rects ({:x1 131.51041221618652, :y1 627.1354141235352, :x2 324.75258445739746, :y2 654.6354141235352, :width 839.9999999999999, :height 1092}), :page 77}, :content {:text "An expression expresses."}, :properties {:color "yellow"}} {:id #uuid "62808b7b-1dc9-44f9-950b-3d8d390358b8", :page 77, :position {:bounding {:x1 148.97806358337402, :y1 679.7786254882812, :x2 307.9650173187256, :y2 707.2786254882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 148.97806358337402, :y1 679.7786254882812, :x2 307.9650173187256, :y2 707.2786254882812, :width 839.9999999999999, :height 1092}), :page 77}, :content {:text " it produces a result."}, :properties {:color "red"}} {:id #uuid "6285ff62-79cb-400c-ac5c-988818dbb758", :page 70, :position {:bounding {:x1 72.09635418653488, :y1 346.88800048828125, :x2 600.9275309443474, :y2 388.671875, :width 672.9999999999999, :height 874.8999999999999}, :rects ({:x1 252.9296824336052, :y1 346.88800048828125, :x2 463.4322001338005, :y2 369.38800048828125, :width 672.9999999999999, :height 874.8999999999999} {:x1 533.7239176630974, :y1 346.88800048828125, :x2 600.9275309443474, :y2 369.38800048828125, :width 672.9999999999999, :height 874.8999999999999} {:x1 214.4661356806755, :y1 349.01043701171875, :x2 600.9275309443474, :y2 365.67706298828125, :width 672.9999999999999, :height 874.8999999999999} {:x1 163.97135418653488, :y1 366.171875, :x2 370.2008463740349, :y2 388.671875, :width 672.9999999999999, :height 874.8999999999999} {:x1 72.09635418653488, :y1 368.29425048828125, :x2 160.01206463575363, :y2 384.9609375, :width 672.9999999999999, :height 874.8999999999999}), :page 70}, :content {:text "s[0]selects the first character of theString s. Selectings.lastIndexproduces the final index number"}, :properties {:color "yellow"}} {:id #uuid "6285ffae-8169-4b4f-8818-5836ceb27d7e", :page 71, :position {:bounding {:x1 72.09635418653488, :y1 539.9739685058594, :x2 289.7860514521599, :y2 562.4739685058594, :width 672.9999999999999, :height 874.8999999999999}, :rects ({:x1 92.0703074336052, :y1 539.9739685058594, :x2 289.7860514521599, :y2 562.4739685058594, :width 672.9999999999999, :height 874.8999999999999} {:x1 72.09635418653488, :y1 542.0963439941406, :x2 88.0821024775505, :y2 558.7630310058594, :width 672.9999999999999, :height 874.8999999999999}), :page 71}, :content {:text "chreceives each character in turn."}, :properties {:color "yellow"}} {:id #uuid "6285ffc2-fe89-4b3d-ac5c-7511b3fe3bea", :page 72, :position {:bounding {:x1 72.09635418653488, :y1 695.4556884765625, :x2 136.03936260938644, :y2 712.1223754882812, :width 672.9999999999999, :height 874.8999999999999}, :rects ({:x1 72.09635418653488, :y1 695.4556884765625, :x2 136.03936260938644, :y2 712.1223754882812, :width 672.9999999999999, :height 874.8999999999999}), :page 72}, :content {:text "repeat()"}, :properties {:color "red"}} {:id #uuid "628b3905-37e5-4f85-8d31-398be8e7ad30", :page 123, :position {:bounding {:x1 50.88542175292969, :y1 303.4582405090332, :x2 427.12120056152344, :y2 391.4647102355957, :width 478, :height 621.4}, :rects ({:x1 50.88542175292969, :y1 303.4582405090332, :x2 427.12120056152344, :y2 319.4334907531738, :width 478, :height 621.4} {:x1 51.20635223388672, :y1 317.1631965637207, :x2 252.7304916381836, :y2 333.1384468078613, :width 478, :height 621.4} {:x1 51.20635223388672, :y1 320.20610427856445, :x2 252.7304916381836, :y2 330.85625076293945, :width 478, :height 621.4} {:x1 62.62912368774414, :y1 333.2929573059082, :x2 260.3487854003906, :y2 349.2682075500488, :width 478, :height 621.4} {:x1 62.62912368774414, :y1 336.33586502075195, :x2 260.3487854003906, :y2 346.98601150512695, :width 478, :height 621.4} {:x1 62.62912368774414, :y1 347.5446968078613, :x2 427.08282470703125, :y2 363.5199165344238, :width 478, :height 621.4} {:x1 62.62912368774414, :y1 350.58757400512695, :x2 427.08282470703125, :y2 361.2377510070801, :width 478, :height 621.4} {:x1 74.83639526367188, :y1 361.2377510070801, :x2 112.2823257446289, :y2 377.2130012512207, :width 478, :height 621.4} {:x1 74.83639526367188, :y1 364.2806587219238, :x2 112.2823257446289, :y2 374.9308052062988, :width 478, :height 621.4} {:x1 62.62912368774414, :y1 375.4894599914551, :x2 313.09027099609375, :y2 391.4647102355957, :width 478, :height 621.4} {:x1 62.62912368774414, :y1 378.5323677062988, :x2 70.12619018554688, :y2 389.18254470825195, :width 478, :height 621.4}), :page 123}, :content {:text "To simplify your experience while using this book, we created our own tiny testingsystem. The goal is a minimal approach that:1.Shows the expected result of expressions.2.Provides output so you know the program is running, even when all testssucceed.3.Ingrains the concept of testing early in your practice."}, :properties {:color "yellow"}} {:id #uuid "628b3915-61b1-47c5-8fe8-cada9e541d4c", :page 123, :position {:bounding {:x1 51.20635223388672, :y1 391.6192207336426, :x2 429.012451171875, :y2 507.02373123168945, :width 478, :height 621.4}, :rects ({:x1 396.0466003417969, :y1 391.6192207336426, :x2 426.965576171875, :y2 407.5944709777832, :width 478, :height 621.4} {:x1 51.20635223388672, :y1 405.3241767883301, :x2 351.7828903198242, :y2 421.2994270324707, :width 478, :height 621.4} {:x1 51.20635223388672, :y1 408.3670845031738, :x2 351.7828903198242, :y2 419.0172309875488, :width 478, :height 621.4} {:x1 66.1355972290039, :y1 421.44206619262695, :x2 427.0828323364258, :y2 437.41728591918945, :width 478, :height 621.4} {:x1 66.1355972290039, :y1 424.4849739074707, :x2 427.0828323364258, :y2 435.1351203918457, :width 478, :height 621.4} {:x1 74.40848541259766, :y1 435.14702224731445, :x2 137.24896240234375, :y2 451.12224197387695, :width 478, :height 621.4} {:x1 74.40848541259766, :y1 438.1898994445801, :x2 137.24896240234375, :y2 448.8400764465332, :width 478, :height 621.4} {:x1 66.1355972290039, :y1 449.39873123168945, :x2 429.012451171875, :y2 465.3739814758301, :width 478, :height 621.4} {:x1 66.1355972290039, :y1 452.4416389465332, :x2 429.012451171875, :y2 463.0917854309082, :width 478, :height 621.4} {:x1 74.83639526367188, :y1 463.10368728637695, :x2 142.4645538330078, :y2 479.07890701293945, :width 478, :height 621.4} {:x1 74.83639526367188, :y1 466.1465950012207, :x2 142.4645538330078, :y2 476.7967414855957, :width 478, :height 621.4} {:x1 66.1355972290039, :y1 477.35539627075195, :x2 426.85302734375, :y2 493.33061599731445, :width 478, :height 621.4} {:x1 66.1355972290039, :y1 480.3983039855957, :x2 426.85302734375, :y2 491.0484504699707, :width 478, :height 621.4} {:x1 74.52735137939453, :y1 491.0484504699707, :x2 109.42564392089844, :y2 507.02373123168945, :width 478, :height 621.4} {:x1 74.52735137939453, :y1 494.09135818481445, :x2 106.9857177734375, :y2 504.74150466918945, :width 478, :height 621.4}), :page 123}, :content {:text "Othershave toiled long and hard to create such test systems. For example:•JUnit²⁴is one of the most popular Java test frameworks, and is easily used fromwithin Kotlin.•Kotest²⁵is designed specifically for Kotlin, and takes advantage of Kotlin lan-guage features.•TheSpek Framework²⁶produces a different form of testing, calledSpecificationTesting."}, :properties {:color "yellow"}} {:id #uuid "628b8146-138f-4bec-b256-7b951f822592", :page 124, :position {:bounding {:x1 90, :y1 870.5, :x2 632.4569702148438, :y2 898.5, :width 839.9999999999999, :height 1092}, :rects ({:x1 114.78125, :y1 870.5, :x2 144.2246856689453, :y2 898.5, :width 839.9999999999999, :height 1092} {:x1 183.8125, :y1 870.5, :x2 632.4569702148438, :y2 898.5, :width 839.9999999999999, :height 1092} {:x1 90, :y1 874.078125, :x2 178.96646118164062, :y2 895.078125, :width 839.9999999999999, :height 1092}), :page 124}, :content {:text "eqandneqare flexible—almost anything works as a test expression. "}, :properties {:color "yellow"}} {:id #uuid "628b8168-108d-4a0a-87a2-1f41ac041082", :page 125, :position {:bounding {:x1 90, :y1 203.875, :x2 750.349365234375, :y2 280.03125, :width 839.9999999999999, :height 1092}, :rects ({:x1 208.39154052734375, :y1 203.875, :x2 750.349365234375, :y2 231.875, :width 839.9999999999999, :height 1092} {:x1 90, :y1 227.953125, :x2 261.22674560546875, :y2 255.953125, :width 839.9999999999999, :height 1092} {:x1 335.28125, :y1 227.953125, :x2 750.2156372070312, :y2 255.953125, :width 839.9999999999999, :height 1092} {:x1 90, :y1 232.953125, :x2 750.2156372070312, :y2 251.953125, :width 839.9999999999999, :height 1092} {:x1 90, :y1 252.03125, :x2 468.65771484375, :y2 280.03125, :width 839.9999999999999, :height 1092}), :page 125}, :content {:text " If the two values are not equal, Kotlin displays the correspondingmessage starting with[Error]. If you uncomment the last line and run the exampleabove, you will see, after all the successful tests:"}, :properties {:color "yellow"}} {:id #uuid "628b817d-2fb2-4331-a420-113d13df3acf", :page 125, :position {:bounding {:x1 89.296875, :y1 879.859375, :x2 750.2664794921875, :y2 931.921875, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.296875, :y1 879.859375, :x2 230.0166015625, :y2 907.859375, :width 839.9999999999999, :height 1092} {:x1 294.375, :y1 879.859375, :x2 750.2664794921875, :y2 907.859375, :width 839.9999999999999, :height 1092} {:x1 237.234375, :y1 883.421875, :x2 750.2664794921875, :y2 904.421875, :width 839.9999999999999, :height 1092} {:x1 184.703125, :y1 903.921875, :x2 221.07318115234375, :y2 931.921875, :width 839.9999999999999, :height 1092} {:x1 295.828125, :y1 903.921875, :x2 300.203125, :y2 931.921875, :width 839.9999999999999, :height 1092} {:x1 90, :y1 907.5, :x2 295.85308837890625, :y2 928.5, :width 839.9999999999999, :height 1092}), :page 125}, :content {:text "Adding results totracelooks like a function call, so you can effectively replaceprintln()withtrace()."}, :properties {:color "yellow"}} {:id #uuid "628b8184-f758-4b0c-bd9f-35f611227379", :page 125, :position {:bounding {:x1 90, :y1 525.6875, :x2 750.4872436523438, :y2 577.765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 401.4703674316406, :y1 525.6875, :x2 433.6090087890625, :y2 553.6875, :width 839.9999999999999, :height 1092} {:x1 497.609375, :y1 525.6875, :x2 750.4872436523438, :y2 553.6875, :width 839.9999999999999, :height 1092} {:x1 440.671875, :y1 529.265625, :x2 750.4872436523438, :y2 550.265625, :width 839.9999999999999, :height 1092} {:x1 90, :y1 549.765625, :x2 186.48721313476562, :y2 577.765625, :width 839.9999999999999, :height 1092}), :page 125}, :content {:text "Thetraceobject captures output for latercomparison:"}, :properties {:color "yellow"}} {:id #uuid "628b81b6-e182-4e7c-93db-387d81a92457", :page 126, :position {:bounding {:x1 90, :y1 227.953125, :x2 750.3607788085938, :y2 328.1875, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 227.953125, :x2 750.3607788085938, :y2 255.953125, :width 839.9999999999999, :height 1092} {:x1 90, :y1 252.03125, :x2 750.3516235351562, :y2 280.03125, :width 839.9999999999999, :height 1092} {:x1 90, :y1 257.03125, :x2 750.3516235351562, :y2 276.03125, :width 839.9999999999999, :height 1092} {:x1 90, :y1 276.109375, :x2 750.3286743164062, :y2 304.109375, :width 839.9999999999999, :height 1092} {:x1 90, :y1 281.109375, :x2 750.3286743164062, :y2 300.109375, :width 839.9999999999999, :height 1092} {:x1 90, :y1 300.1875, :x2 458.5428466796875, :y2 328.1875, :width 839.9999999999999, :height 1092}), :page 126}, :content {:text "Seeing the benefits of using testing throughout the rest of the book should helpyou incorporate testing into your programming process. You’ll probably start feelinguncomfortable when you see code that doesn’t have tests. You might even decidethat code without tests is broken by definition."}, :properties {:color "blue"}} {:id #uuid "628b81c4-3391-4f7b-b0dc-54dff2030e97", :page 126, :position {:bounding {:x1 90, :y1 734.203125, :x2 750.3511962890625, :y2 810.359375, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 734.203125, :x2 750.3511962890625, :y2 762.203125, :width 839.9999999999999, :height 1092} {:x1 90, :y1 758.28125, :x2 750.3081665039062, :y2 786.28125, :width 839.9999999999999, :height 1092} {:x1 90, :y1 763.28125, :x2 750.3081665039062, :y2 782.28125, :width 839.9999999999999, :height 1092} {:x1 90, :y1 782.359375, :x2 572.9884643554688, :y2 810.359375, :width 839.9999999999999, :height 1092}), :page 126}, :content {:text "Here’s a simplified example using TDD to implement the BMI calculation fromNumber Types. First, we write the tests, along with an initial implementation thatfails (because we haven’t yet implemented the functionality):"}, :properties {:color "yellow"}} {:id #uuid "628b81cc-73be-4123-894f-921026d2d48c", :page 126, :position {:bounding {:x1 90, :y1 496.890625, :x2 752.2265014648438, :y2 548.96875, :width 839.9999999999999, :height 1092}, :rects ({:x1 326.31634521484375, :y1 496.890625, :x2 752.2265014648438, :y2 524.890625, :width 839.9999999999999, :height 1092} {:x1 497.40625, :y1 501.890625, :x2 752.2265014648438, :y2 520.890625, :width 839.9999999999999, :height 1092} {:x1 90, :y1 520.96875, :x2 609.5084228515625, :y2 548.96875, :width 839.9999999999999, :height 1092}), :page 126}, :content {:text "This technique, calledTestDrivenDevelopment(TDD),is a way to ensure that you’re really testing what you think you are. "}, :properties {:color "yellow"}} {:id #uuid "628b82f6-caf2-4a74-9430-95631ce5464c", :page 130, :position {:bounding {:x1 89.4375, :y1 717.09375, :x2 750.310302734375, :y2 769.171875, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.4375, :y1 717.09375, :x2 750.310302734375, :y2 745.09375, :width 839.9999999999999, :height 1092} {:x1 184.703125, :y1 741.171875, :x2 324.4278869628906, :y2 769.171875, :width 839.9999999999999, :height 1092} {:x1 434.03125, :y1 741.171875, :x2 501.744140625, :y2 769.171875, :width 839.9999999999999, :height 1092} {:x1 90, :y1 744.734375, :x2 429.0552978515625, :y2 765.734375, :width 839.9999999999999, :height 1092}), :page 130}, :content {:text "To avoid commenting and uncommenting code to display exceptions, we use thecapture()function from theAtomicTestpackage:"}, :properties {:color "yellow"}} {:id #uuid "628b8a80-bc88-433e-8ef6-6c2415d75849", :page 131, :position {:bounding {:x1 82.81212615966797, :y1 303.6722106933594, :x2 693.5901336669922, :y2 351.6811218261719, :width 773.0000000000001, :height 1004.9000000000003}, :rects ({:x1 82.81212615966797, :y1 303.6722106933594, :x2 124.9202880859375, :y2 329.5368957519531, :width 773.0000000000001, :height 1004.9000000000003} {:x1 213.08641052246094, :y1 303.6722106933594, :x2 693.5901336669922, :y2 329.5368957519531, :width 773.0000000000001, :height 1004.9000000000003} {:x1 130.5120086669922, :y1 306.4773864746094, :x2 693.5901336669922, :y2 325.4955139160156, :width 773.0000000000001, :height 1004.9000000000003} {:x1 82.81212615966797, :y1 325.81646728515625, :x2 118.00834655761719, :y2 351.6811218261719, :width 773.0000000000001, :height 1004.9000000000003}), :page 131}, :content {:text "Usingcapture(), we compare the generated exception to the expected error mes-sage."}, :properties {:color "yellow"}} {:id #uuid "628b8a8a-2919-4e47-981c-24e7f0b27af7", :page 131, :position {:bounding {:x1 82.81212615966797, :y1 325.81646728515625, :x2 693.6192016601562, :y2 395.993408203125, :width 773.0000000000001, :height 1004.9000000000003}, :rects ({:x1 212.0047607421875, :y1 325.81646728515625, :x2 693.6192016601562, :y2 351.6811218261719, :width 773.0000000000001, :height 1004.9000000000003} {:x1 123.68924713134766, :y1 328.6335144042969, :x2 693.6192016601562, :y2 347.65167236328125, :width 773.0000000000001, :height 1004.9000000000003} {:x1 82.81212615966797, :y1 347.97259521484375, :x2 690.6022872924805, :y2 373.8372802734375, :width 773.0000000000001, :height 1004.9000000000003} {:x1 82.81212615966797, :y1 351.7762145996094, :x2 690.6022872924805, :y2 370.03363037109375, :width 773.0000000000001, :height 1004.9000000000003} {:x1 82.81212615966797, :y1 370.12872314453125, :x2 344.1958236694336, :y2 395.993408203125, :width 773.0000000000001, :height 1004.9000000000003}), :page 131}, :content {:text "capture()isn’t very helpful for normal programming—it’s designed specifi-cally for this book, so you can see the exception and know that the output has beenchecked by the book’s build system."}, :properties {:color "green"}} {:id #uuid "628b8aa7-f73c-425f-a92f-c661fbaf4a71", :page 131, :position {:bounding {:x1 82.1702651977539, :y1 401.7820587158203, :x2 690.5990371704102, :y2 449.80287170410156, :width 773.0000000000001, :height 1004.9000000000003}, :rects ({:x1 82.1702651977539, :y1 401.7820587158203, :x2 690.5990371704102, :y2 427.64671325683594, :width 773.0000000000001, :height 1004.9000000000003} {:x1 119.51714324951172, :y1 423.9381866455078, :x2 480.93029022216797, :y2 449.80287170410156, :width 773.0000000000001, :height 1004.9000000000003} {:x1 82.81212615966797, :y1 426.7433624267578, :x2 119.53547668457031, :y2 445.7615203857422, :width 773.0000000000001, :height 1004.9000000000003}), :page 131}, :content {:text "Another strategy when you can’t successfully produce the expected result is to returnnull, which is a special constant denoting “no value.” "}, :properties {:color "yellow"}} {:id #uuid "628b8ab3-f60f-41e0-ac3b-fd7fd15959bb", :page 131, :position {:bounding {:x1 82.30101776123047, :y1 499.8919143676758, :x2 690.2769165039062, :y2 570.0688552856445, :width 773.0000000000001, :height 1004.9000000000003}, :rects ({:x1 82.30101776123047, :y1 499.8919143676758, :x2 351.0888900756836, :y2 525.7565689086914, :width 773.0000000000001, :height 1004.9000000000003} {:x1 545.5592041015625, :y1 499.8919143676758, :x2 690.2769165039062, :y2 525.7565689086914, :width 773.0000000000001, :height 1004.9000000000003} {:x1 356.48321533203125, :y1 502.6970901489258, :x2 690.2769165039062, :y2 521.715217590332, :width 773.0000000000001, :height 1004.9000000000003} {:x1 82.81212615966797, :y1 522.0480422973633, :x2 212.26253509521484, :y2 547.912727355957, :width 773.0000000000001, :height 1004.9000000000003} {:x1 283.822021484375, :y1 522.0480422973633, :x2 595.3568725585938, :y2 547.912727355957, :width 773.0000000000001, :height 1004.9000000000003} {:x1 648.459228515625, :y1 522.0480422973633, :x2 690.2005615234375, :y2 547.912727355957, :width 773.0000000000001, :height 1004.9000000000003} {:x1 82.81212615966797, :y1 525.8516616821289, :x2 690.2005615234375, :y2 544.8697891235352, :width 773.0000000000001, :height 1004.9000000000003} {:x1 82.81212615966797, :y1 544.2041702270508, :x2 273.67256927490234, :y2 570.0688552856445, :width 773.0000000000001, :height 1004.9000000000003} {:x1 314.8334655761719, :y1 544.2041702270508, :x2 564.4513549804688, :y2 570.0688552856445, :width 773.0000000000001, :height 1004.9000000000003} {:x1 82.81212615966797, :y1 548.0078201293945, :x2 310.2755432128906, :y2 567.0259780883789, :width 773.0000000000001, :height 1004.9000000000003}), :page 131}, :content {:text "The Kotlin standard library containsString.toIntOrNull()which performs theconversion if theStringcontains an integer number, or producesnullif theconversion is impossible—nullis a simple way to indicate failure:"}, :properties {:color "red"}} {:id #uuid "628b8ca3-acf9-4e63-855e-47ecf12e1d45", :page 132, :position {:bounding {:x1 82.81212615966797, :y1 866.16943359375, :x2 690.4842529296875, :y2 914.1902465820312, :width 773.0000000000001, :height 1004.9000000000003}, :rects ({:x1 82.81212615966797, :y1 866.16943359375, :x2 252.82067108154297, :y2 892.0341186523438, :width 773.0000000000001, :height 1004.9000000000003} {:x1 294.06805419921875, :y1 866.16943359375, :x2 690.4842529296875, :y2 892.0341186523438, :width 773.0000000000001, :height 1004.9000000000003} {:x1 257.3749084472656, :y1 868.974609375, :x2 690.4842529296875, :y2 887.9927673339844, :width 773.0000000000001, :height 1004.9000000000003} {:x1 82.81212615966797, :y1 888.3255920410156, :x2 348.8463439941406, :y2 914.1902465820312, :width 773.0000000000001, :height 1004.9000000000003} {:x1 82.81212615966797, :y1 892.1292114257812, :x2 339.6752624511719, :y2 910.3866271972656, :width 773.0000000000001, :height 1004.9000000000003}), :page 132}, :content {:text "If a function can returnnull, Kotlin requires that you check the result before usingit (this is covered inNullable Types)."}, :properties {:color "yellow"}} {:id #uuid "628b8cc3-2de2-42c2-bb19-dfb2a114f8f9", :page 133, :position {:bounding {:x1 82.81212615966797, :y1 166.2542266845703, :x2 693.4316940307617, :y2 214.27503967285156, :width 773.0000000000001, :height 1004.9000000000003}, :rects ({:x1 82.81212615966797, :y1 166.2542266845703, :x2 230.59493255615234, :y2 192.11891174316406, :width 773.0000000000001, :height 1004.9000000000003} {:x1 378.4967041015625, :y1 166.2542266845703, :x2 691.0794677734375, :y2 192.11891174316406, :width 773.0000000000001, :height 1004.9000000000003} {:x1 235.68234252929688, :y1 169.0594024658203, :x2 691.0794677734375, :y2 188.0775604248047, :width 773.0000000000001, :height 1004.9000000000003} {:x1 82.81212615966797, :y1 188.4103546142578, :x2 693.4316940307617, :y2 214.27503967285156, :width 773.0000000000001, :height 1004.9000000000003}), :page 133}, :content {:text "Instead of executingaverageIncome()with the wrong arguments, you can throwan exception—escape and force some other part of the program to manage the issue."}, :properties {:color "yellow"}} {:id #uuid "628b8ce8-bea3-4e22-8e46-056742f4b9c2", :page 133, :position {:bounding {:x1 121.01482391357422, :y1 701.6981811523438, :x2 693.4431762695312, :y2 771.8751220703125, :width 773.0000000000001, :height 1004.9000000000003}, :rects ({:x1 147.6045684814453, :y1 701.6981811523438, :x2 390.4806823730469, :y2 727.5628356933594, :width 773.0000000000001, :height 1004.9000000000003} {:x1 444.8819274902344, :y1 701.6981811523438, :x2 693.4431762695312, :y2 727.5628356933594, :width 773.0000000000001, :height 1004.9000000000003} {:x1 394.6621398925781, :y1 704.5033569335938, :x2 693.4431762695312, :y2 723.521484375, :width 773.0000000000001, :height 1004.9000000000003} {:x1 121.01482391357422, :y1 723.8543090820312, :x2 690.5536422729492, :y2 749.718994140625, :width 773.0000000000001, :height 1004.9000000000003} {:x1 121.01482391357422, :y1 727.6579284667969, :x2 690.5536422729492, :y2 745.9153442382812, :width 773.0000000000001, :height 1004.9000000000003} {:x1 121.01482391357422, :y1 746.0104370117188, :x2 297.37023162841797, :y2 771.8751220703125, :width 773.0000000000001, :height 1004.9000000000003} {:x1 522.0361328125, :y1 746.0104370117188, :x2 526.0537109375, :y2 771.8751220703125, :width 773.0000000000001, :height 1004.9000000000003} {:x1 121.01482391357422, :y1 749.8140869140625, :x2 522.1363525390625, :y2 768.0715026855469, :width 773.0000000000001, :height 1004.9000000000003}), :page 133}, :content {:text "When throwing an exception, thethrowkeyword is followed by the excep-tion to be thrown, along with any arguments it might need. Here we use thestandard exception classIllegalArgumentException."}, :properties {:color "yellow"}} {:id #uuid "628c6cc8-f389-4018-ac58-9ebb1adbc2cc", :page 134, :position {:bounding {:x1 154.53123983740807, :y1 815.7942504882812, :x2 546.7462972104549, :y2 842.4609069824219, :width 808, :height 1050.4}, :rects ({:x1 154.53123983740807, :y1 815.7942504882812, :x2 167.55208334326744, :y2 842.4609069824219, :width 808, :height 1050.4} {:x1 215.79427084326744, :y1 815.7942504882812, :x2 546.7462972104549, :y2 842.4609069824219, :width 808, :height 1050.4} {:x1 172.64322409033775, :y1 818.8411254882812, :x2 211.03587850928307, :y2 838.8411254882812, :width 808, :height 1050.4}), :page 134}, :content {:text "AListuses square brackets when displaying itself."}, :properties {:color "yellow"}} {:id #uuid "628c6ce2-da30-47bc-ac2e-abfbbacfd7e8", :page 134, :position {:bounding {:x1 126.02864584326744, :y1 841.2109069824219, :x2 721.5428670346737, :y2 914.1926879882812, :width 808, :height 1050.4}, :rects ({:x1 189.16666159033775, :y1 841.2109069824219, :x2 351.63414511084557, :y2 867.8775634765625, :width 808, :height 1050.4} {:x1 395.2603963315487, :y1 841.2109069824219, :x2 406.49336752295494, :y2 867.8775634765625, :width 808, :height 1050.4} {:x1 551.4192708432674, :y1 841.2109069824219, :x2 600.3578694760799, :y2 867.8775634765625, :width 808, :height 1050.4} {:x1 620.5858968198299, :y1 841.2109069824219, :x2 721.4779256284237, :y2 867.8775634765625, :width 808, :height 1050.4} {:x1 155.06509909033775, :y1 844.2577819824219, :x2 721.4779256284237, :y2 864.2577514648438, :width 808, :height 1050.4} {:x1 126.02864584326744, :y1 864.3619384765625, :x2 186.88216146826744, :y2 891.0286254882812, :width 808, :height 1050.4} {:x1 229.86978659033775, :y1 864.3619384765625, :x2 371.3703816831112, :y2 891.0286254882812, :width 808, :height 1050.4} {:x1 428.52864584326744, :y1 864.3619384765625, :x2 721.5428670346737, :y2 891.0286254882812, :width 808, :height 1050.4} {:x1 126.02864584326744, :y1 868.5286254882812, :x2 721.5428670346737, :y2 888.5286254882812, :width 808, :height 1050.4} {:x1 126.49739584326744, :y1 887.5260009765625, :x2 217.75018820166588, :y2 914.1926879882812, :width 808, :height 1050.4} {:x1 236.86197409033775, :y1 887.5260009765625, :x2 262.4176228940487, :y2 914.1926879882812, :width 808, :height 1050.4} {:x1 300.7682088315487, :y1 887.5260009765625, :x2 411.6028340756893, :y2 914.1926879882812, :width 808, :height 1050.4} {:x1 126.49739584326744, :y1 891.6926879882812, :x2 296.0050557553768, :y2 911.6926879882812, :width 808, :height 1050.4}), :page 134}, :content {:text "forloops work well withLists:for(i in ints)meansireceives eachvalue inints. You don’t declareval ior give its type; Kotlin knows from thecontext thatiis aforloop identifier."}, :properties {:color "yellow"}} {:id #uuid "628c6cf6-439d-4b36-a98d-152b5a169cb6", :page 135, :position {:bounding {:x1 126.49739584326744, :y1 117.35675048828125, :x2 721.7182210385799, :y2 213.5025634765625, :width 808, :height 1050.4}, :rects ({:x1 152.98177084326744, :y1 117.35675048828125, :x2 362.40804037451744, :y2 144.0234375, :width 808, :height 1050.4} {:x1 403.99739584326744, :y1 117.35675048828125, :x2 424.7824910581112, :y2 144.0234375, :width 808, :height 1050.4} {:x1 469.64842733740807, :y1 117.35675048828125, :x2 721.5710042417049, :y2 144.0234375, :width 808, :height 1050.4} {:x1 274.11458334326744, :y1 121.5234375, :x2 721.5710042417049, :y2 140.69009399414062, :width 808, :height 1050.4} {:x1 126.49739584326744, :y1 140.52081298828125, :x2 721.6500447690487, :y2 167.1875, :width 808, :height 1050.4} {:x1 126.49739584326744, :y1 144.6875, :x2 721.6500447690487, :y2 163.8541259765625, :width 808, :height 1050.4} {:x1 126.49739584326744, :y1 163.68487548828125, :x2 721.7182210385799, :y2 190.3515625, :width 808, :height 1050.4} {:x1 126.49739584326744, :y1 167.8515625, :x2 721.7182210385799, :y2 187.0181884765625, :width 808, :height 1050.4} {:x1 126.49739584326744, :y1 186.8359375, :x2 196.279759734869, :y2 213.5025634765625, :width 808, :height 1050.4} {:x1 220.22134909033775, :y1 186.8359375, :x2 357.4235127866268, :y2 213.5025634765625, :width 808, :height 1050.4} {:x1 378.1119588315487, :y1 186.8359375, :x2 520.8948567807674, :y2 213.5025634765625, :width 808, :height 1050.4} {:x1 544.7916463315487, :y1 186.8359375, :x2 548.9973958432674, :y2 213.5025634765625, :width 808, :height 1050.4} {:x1 126.49739584326744, :y1 191.0025634765625, :x2 544.8142293393612, :y2 211.0025634765625, :width 808, :height 1050.4}), :page 135}, :content {:text "Square bracketsindexinto aList. AListkeeps its elements in initializationorder, and you select them individually by number. Like most programminglanguages, Kotlin starts indexing at element zero, which in this case producesthe value99. Thus an index of4produces the value11."}, :properties {:color "yellow"}} {:id #uuid "628c6d32-eab5-4d7c-9084-45e4b002e49f", :page 136, :position {:bounding {:x1 85.67708334326744, :y1 196.9791717529297, :x2 723.7317708432674, :y2 269.96092224121094, :width 808, :height 1050.4}, :rects ({:x1 86.02864584326744, :y1 196.9791717529297, :x2 243.0499471127987, :y2 223.6458282470703, :width 808, :height 1050.4} {:x1 290.2994588315487, :y1 196.9791717529297, :x2 723.7317708432674, :y2 223.6458282470703, :width 808, :height 1050.4} {:x1 251.94009909033775, :y1 200.0260467529297, :x2 723.7317708432674, :y2 220.0260467529297, :width 808, :height 1050.4} {:x1 85.67708334326744, :y1 220.1302032470703, :x2 194.03754171729088, :y2 246.79685974121094, :width 808, :height 1050.4} {:x1 277.90364584326744, :y1 220.1302032470703, :x2 407.3043416440487, :y2 246.79685974121094, :width 808, :height 1050.4} {:x1 452.7994588315487, :y1 220.1302032470703, :x2 721.5474446713924, :y2 246.79685974121094, :width 808, :height 1050.4} {:x1 85.67708334326744, :y1 224.29685974121094, :x2 721.5474446713924, :y2 244.29685974121094, :width 808, :height 1050.4} {:x1 86.5624974668026, :y1 243.2942657470703, :x2 420.3427709043026, :y2 269.96092224121094, :width 808, :height 1050.4} {:x1 465.2603963315487, :y1 243.2942657470703, :x2 509.71272787451744, :y2 269.96092224121094, :width 808, :height 1050.4} {:x1 86.5624974668026, :y1 247.46092224121094, :x2 461.93428549170494, :y2 266.6276092529297, :width 808, :height 1050.4}), :page 136}, :content {:text "This shows some ofList’s operations. Note the name “sorted” instead of “sort.”When you callsorted()itproducesa newListcontaining the same elements as theold, in sorted order—but it leaves the originalListalone."}, :properties {:color "yellow"}} {:id #uuid "628dbea0-6d75-4f7c-80e4-40fe4bc231a6", :page 136, :position {:bounding {:x1 76.19143676757812, :y1 755.5314331054688, :x2 642.0604248046875, :y2 800.4261169433594, :width 717, :height 932.1000000000001}, :rects ({:x1 76.8214111328125, :y1 755.5314331054688, :x2 404.0093994140625, :y2 779.8746337890625, :width 717, :height 932.1000000000001} {:x1 473.3497009277344, :y1 755.5314331054688, :x2 542.6903076171875, :y2 779.8746337890625, :width 717, :height 932.1000000000001} {:x1 586.6978149414062, :y1 755.5314331054688, :x2 600.176513671875, :y2 779.8746337890625, :width 717, :height 932.1000000000001} {:x1 632.091796875, :y1 755.5314331054688, :x2 642.0604248046875, :y2 779.8746337890625, :width 717, :height 932.1000000000001} {:x1 408.7712097167969, :y1 758.2890625, :x2 642.0604248046875, :y2 775.7857360839844, :width 717, :height 932.1000000000001} {:x1 76.19143676757812, :y1 776.0828857421875, :x2 113.78514099121094, :y2 800.4261169433594, :width 717, :height 932.1000000000001} {:x1 181.82533264160156, :y1 776.0828857421875, :x2 250.41738891601562, :y2 800.4261169433594, :width 717, :height 932.1000000000001} {:x1 292.9150695800781, :y1 776.0828857421875, :x2 306.3937683105469, :y2 800.4261169433594, :width 717, :height 932.1000000000001} {:x1 363.08013916015625, :y1 776.0828857421875, :x2 373.0487976074219, :y2 800.4261169433594, :width 717, :height 932.1000000000001} {:x1 76.19143676757812, :y1 779.8865356445312, :x2 363.0855712890625, :y2 797.3832092285156, :width 717, :height 932.1000000000001}), :page 136}, :content {:text "Kotlin uses the initialization values to infer thatnumberscontains aListofInts,whilestringscontains aListofStrings."}, :properties {:color "yellow"}} {:id #uuid "628dbea4-9bb6-467e-a465-7987d1c57159", :page 136, :position {:bounding {:x1 76.19143676757812, :y1 755.5314331054688, :x2 642.0604248046875, :y2 800.4261169433594, :width 717, :height 932.1000000000001}, :rects ({:x1 76.8214111328125, :y1 755.5314331054688, :x2 404.0093994140625, :y2 779.8746337890625, :width 717, :height 932.1000000000001} {:x1 473.3497009277344, :y1 755.5314331054688, :x2 542.6903076171875, :y2 779.8746337890625, :width 717, :height 932.1000000000001} {:x1 586.6978149414062, :y1 755.5314331054688, :x2 600.176513671875, :y2 779.8746337890625, :width 717, :height 932.1000000000001} {:x1 632.091796875, :y1 755.5314331054688, :x2 642.0604248046875, :y2 779.8746337890625, :width 717, :height 932.1000000000001} {:x1 408.7712097167969, :y1 758.2890625, :x2 642.0604248046875, :y2 775.7857360839844, :width 717, :height 932.1000000000001} {:x1 76.19143676757812, :y1 776.0828857421875, :x2 113.78514099121094, :y2 800.4261169433594, :width 717, :height 932.1000000000001} {:x1 181.82533264160156, :y1 776.0828857421875, :x2 250.41738891601562, :y2 800.4261169433594, :width 717, :height 932.1000000000001} {:x1 292.9150695800781, :y1 776.0828857421875, :x2 306.3937683105469, :y2 800.4261169433594, :width 717, :height 932.1000000000001} {:x1 363.08013916015625, :y1 776.0828857421875, :x2 373.0487976074219, :y2 800.4261169433594, :width 717, :height 932.1000000000001} {:x1 76.19143676757812, :y1 779.8865356445312, :x2 363.0855712890625, :y2 797.3832092285156, :width 717, :height 932.1000000000001}), :page 136}, :content {:text "Kotlin uses the initialization values to infer thatnumberscontains aListofInts,whilestringscontains aListofStrings."}, :properties {:color "yellow"}} {:id #uuid "628dbec5-8e5c-4b4f-b6ee-6f6df25d4604", :page 137, :position {:bounding {:x1 293.2511332631111, :y1 113.34814453125, :x2 566.815067589283, :y2 134.64846801757812, :width 649.9999999999999, :height 845}, :rects ({:x1 293.2511332631111, :y1 113.34814453125, :x2 566.815067589283, :y2 134.64846801757812, :width 649.9999999999999, :height 845} {:x1 388.81406050920486, :y1 116.83084106445312, :x2 559.5207560658455, :y2 130.52389526367188, :width 649.9999999999999, :height 845}), :page 137}, :content {:text " We pronounceList<Int>as “ListofInt.”"}, :properties {:color "yellow"}} {:id #uuid "628dbedc-d942-49fc-a1eb-1c9f86e69e41", :page 137, :position {:bounding {:x1 69.64206343889236, :y1 642.3140106201172, :x2 581.8952067494392, :y2 680.2789764404297, :width 649.9999999999999, :height 845}, :rects ({:x1 520.1699870228767, :y1 642.3140106201172, :x2 581.8952067494392, :y2 659.0500030517578, :width 649.9999999999999, :height 845} {:x1 69.64206343889236, :y1 658.9786834716797, :x2 425.94516402482986, :y2 680.2789764404297, :width 649.9999999999999, :height 845} {:x1 69.64206343889236, :y1 662.0215606689453, :x2 233.1205638051033, :y2 677.2360992431641, :width 649.9999999999999, :height 845}), :page 137}, :content {:text "listOf()produces a read-onlyListthat has no mutating functions"}, :properties {:color "yellow"}} {:id #uuid "628dbee7-c083-4361-b896-57fefb2bf218", :page 137, :position {:bounding {:x1 69.64206343889236, :y1 685.5803070068359, :x2 580.600483238697, :y2 725.5183868408203, :width 649.9999999999999, :height 845}, :rects ({:x1 69.64206343889236, :y1 685.5803070068359, :x2 580.600483238697, :y2 706.8806304931641, :width 649.9999999999999, :height 845} {:x1 185.55765181779861, :y1 689.0630035400391, :x2 580.600483238697, :y2 702.7560577392578, :width 649.9999999999999, :height 845} {:x1 69.64206343889236, :y1 704.2180938720703, :x2 255.56149703264236, :y2 725.5183868408203, :width 649.9999999999999, :height 845} {:x1 69.64206343889236, :y1 707.2609710693359, :x2 248.51979476213455, :y2 722.4755096435547, :width 649.9999999999999, :height 845}), :page 137}, :content {:text "If you’re creating aListgradually (that is, you don’t have all the elements at creationtime), usemutableListOf(). "}, :properties {:color "yellow"}} {:id #uuid "628dbef4-b378-4ee7-9e2b-0feacd484b92", :page 138, :position {:bounding {:x1 67.71648055315018, :y1 330.22629165649414, :x2 580.428348839283, :y2 367.5493812561035, :width 649.9999999999999, :height 845}, :rects ({:x1 69.19038039445877, :y1 330.22629165649414, :x2 580.428348839283, :y2 351.52661514282227, :width 649.9999999999999, :height 845} {:x1 229.8461497426033, :y1 333.70898818969727, :x2 580.428348839283, :y2 347.402042388916, :width 649.9999999999999, :height 845} {:x1 67.71648055315018, :y1 350.813419342041, :x2 406.8164561390877, :y2 367.5493812561035, :width 649.9999999999999, :height 845}), :page 138}, :content {:text "You can add elements to aMutableListusingadd()andaddAll(), or the shortcut+=which adds a single element or another collection. "}, :properties {:color "yellow"}} {:id #uuid "628dbeff-65dc-4abe-a774-1e0615b11998", :page 138, :position {:bounding {:x1 83.66794234514236, :y1 161.0480079650879, :x2 301.1469538807869, :y2 176.26253128051758, :width 649.9999999999999, :height 845}, :rects ({:x1 83.66794234514236, :y1 161.0480079650879, :x2 301.1469538807869, :y2 176.26253128051758, :width 649.9999999999999, :height 845}), :page 138}, :content {:text "vallist = mutableListOf<Int>()"}, :properties {:color "red"}} {:id #uuid "628dbf3a-986d-4e2c-b674-9234f72875e2", :page 138, :position {:bounding {:x1 69.0952952504158, :y1 412.08750915527344, :x2 324.06293135881424, :y2 433.38783264160156, :width 649.9999999999999, :height 845}, :rects ({:x1 69.0952952504158, :y1 412.08750915527344, :x2 324.06293135881424, :y2 433.38783264160156, :width 649.9999999999999, :height 845} {:x1 84.19094496965408, :y1 415.57020568847656, :x2 324.06293135881424, :y2 429.2632751464844, :width 649.9999999999999, :height 845}), :page 138}, :content {:text "AMutableListcan be treated as aList"}, :properties {:color "red"}} {:id #uuid "628dbf40-b753-435e-873a-52bc049821a1", :page 138, :position {:bounding {:x1 69.64206343889236, :y1 412.08750915527344, :x2 580.5417521595955, :y2 452.01373291015625, :width 649.9999999999999, :height 845}, :rects ({:x1 554.802616417408, :y1 412.08750915527344, :x2 580.5417521595955, :y2 433.38783264160156, :width 649.9999999999999, :height 845} {:x1 69.64206343889236, :y1 430.7134094238281, :x2 418.9404338002205, :y2 452.01373291015625, :width 649.9999999999999, :height 845} {:x1 69.64206343889236, :y1 433.7563018798828, :x2 418.9404338002205, :y2 448.9708251953125, :width 649.9999999999999, :height 845}), :page 138}, :content {:text "Youcan’t, however, treat a read-onlyListas aMutableList"}, :properties {:color "red"}} {:id #uuid "628dbf61-1f90-4b9b-8b1f-24a72f01eace", :page 139, :position {:bounding {:x1 144.04994612932205, :y1 408.8306579589844, :x2 217.27957564592361, :y2 430.1309814453125, :width 649.9999999999999, :height 845}, :rects ({:x1 144.04994612932205, :y1 408.8306579589844, :x2 217.27957564592361, :y2 430.1309814453125, :width 649.9999999999999, :height 845}), :page 139}, :content {:text " immutable"}, :properties {:color "green"}} {:id #uuid "628dbf71-e29f-4693-9444-bbd0dece15df", :page 140, :position {:bounding {:x1 101.75895339250565, :y1 202.73340606689453, :x2 477.4552500844002, :y2 224.03372955322266, :width 649.9999999999999, :height 845}, :rects ({:x1 101.75895339250565, :y1 202.73340606689453, :x2 477.4552500844002, :y2 224.03372955322266, :width 649.9999999999999, :height 845} {:x1 128.94301253557205, :y1 206.21610260009766, :x2 175.24234420061111, :y2 219.9091567993164, :width 649.9999999999999, :height 845}), :page 140}, :content {:text "Thevarargkeyword produces a flexibly-sized argument list."}, :properties {:color "yellow"}} {:id #uuid "628dbf9e-a21e-45ed-b828-d17c0d9a9c8a", :page 140, :position {:bounding {:x1 69.64206343889236, :y1 422.5118408203125, :x2 580.5918467640877, :y2 462.4499206542969, :width 649.9999999999999, :height 845}, :rects ({:x1 69.64206343889236, :y1 422.5118408203125, :x2 580.5918467640877, :y2 443.8121643066406, :width 649.9999999999999, :height 845} {:x1 135.65878707170486, :y1 425.9945373535156, :x2 580.5918467640877, :y2 439.6875915527344, :width 649.9999999999999, :height 845} {:x1 69.64206343889236, :y1 441.14959716796875, :x2 549.8184245228767, :y2 462.4499206542969, :width 649.9999999999999, :height 845} {:x1 69.64206343889236, :y1 444.1925048828125, :x2 549.8184245228767, :y2 459.40704345703125, :width 649.9999999999999, :height 845}), :page 140}, :content {:text "Using thevarargkeyword, you can define a function that takes any number ofarguments, just likelistOf()does.varargis short forvariable argument list"}, :properties {:color "yellow"}} {:id #uuid "628dbfd8-d4eb-4792-bea5-2e6baf888eac", :page 140, :position {:bounding {:x1 69.0952952504158, :y1 649.0654907226562, :x2 491.2239115834236, :y2 670.3657836914062, :width 649.9999999999999, :height 845}, :rects ({:x1 69.0952952504158, :y1 649.0654907226562, :x2 491.2239115834236, :y2 670.3657836914062, :width 649.9999999999999, :height 845} {:x1 441.41110640764236, :y1 652.5481567382812, :x2 487.7104533314705, :y2 666.2412109375, :width 649.9999999999999, :height 845}), :page 140}, :content {:text "A function definition may specify only one parameter asvararg."}, :properties {:color "red"}} {:id #uuid "628dbff6-de85-488d-88b7-599e8f675b62", :page 140, :position {:bounding {:x1 69.64206343889236, :y1 712.9307556152344, :x2 580.6430094838142, :y2 752.8569946289062, :width 649.9999999999999, :height 845}, :rects ({:x1 494.5843852162361, :y1 712.9307556152344, :x2 580.6430094838142, :y2 734.2310791015625, :width 649.9999999999999, :height 845} {:x1 69.64206343889236, :y1 731.5566711425781, :x2 252.18353682756424, :y2 752.8569946289062, :width 649.9999999999999, :height 845} {:x1 69.64206343889236, :y1 734.5995483398438, :x2 252.18353682756424, :y2 749.8140869140625, :width 649.9999999999999, :height 845}), :page 140}, :content {:text "All argumentsmust be of the specified type."}, :properties {:color "yellow"}} {:id #uuid "628dc002-2e95-488f-8486-de714c2f707a", :page 140, :position {:bounding {:x1 69.64206343889236, :y1 733.5179138183594, :x2 580.8126872181892, :y2 771.4947814941406, :width 649.9999999999999, :height 845}, :rects ({:x1 256.5785258412361, :y1 733.5179138183594, :x2 580.8126872181892, :y2 750.2538757324219, :width 649.9999999999999, :height 845} {:x1 69.64206343889236, :y1 750.1944580078125, :x2 269.1661723256111, :y2 771.4947814941406, :width 649.9999999999999, :height 845} {:x1 69.64206343889236, :y1 753.2373657226562, :x2 265.79376631975174, :y2 768.4518737792969, :width 649.9999999999999, :height 845}), :page 140}, :content {:text "varargarguments are accessed using the parametername, which becomes anArray:"}, :properties {:color "red"}} {:id #uuid "628dc07f-a1ff-49fc-b211-aef50a3470b3", :page 141, :position {:bounding {:x1 69.0952952504158, :y1 381.77734375, :x2 521.4785807728767, :y2 403.0776672363281, :width 649.9999999999999, :height 845}, :rects ({:x1 69.0952952504158, :y1 381.77734375, :x2 521.4785807728767, :y2 403.0776672363281, :width 649.9999999999999, :height 845} {:x1 130.89236861467361, :y1 385.2600402832031, :x2 235.9257395863533, :y2 400.47454833984375, :width 649.9999999999999, :height 845}), :page 141}, :content {:text "AlthoughArrays andLists look similar, they are implemented differently"}, :properties {:color "red"}} {:id #uuid "628dc093-4181-4651-9d94-9b59c81132d3", :page 141, :position {:bounding {:x1 69.64206343889236, :y1 383.73858642578125, :x2 580.406132042408, :y2 440.3413391113281, :width 649.9999999999999, :height 845}, :rects ({:x1 536.1452067494392, :y1 383.73858642578125, :x2 580.3760417103767, :y2 405.0389099121094, :width 649.9999999999999, :height 845} {:x1 536.1452067494392, :y1 385.2600402832031, :x2 580.3760417103767, :y2 398.9530944824219, :width 649.9999999999999, :height 845} {:x1 69.64206343889236, :y1 400.4151306152344, :x2 580.406132042408, :y2 421.7154541015625, :width 649.9999999999999, :height 845} {:x1 69.64206343889236, :y1 403.4580383300781, :x2 580.406132042408, :y2 418.67254638671875, :width 649.9999999999999, :height 845} {:x1 69.64206343889236, :y1 419.041015625, :x2 533.1989787220955, :y2 440.3413391113281, :width 649.9999999999999, :height 845}), :page 141}, :content {:text "Listisa regular library class whileArrayhas special low-level support.Arraycomes fromKotlin’s requirement for compatibility with other languages, especially Java"}, :properties {:color "yellow"}} {:id #uuid "628dc101-1524-4868-9efd-52775a6364c4", :page 142, :position {:bounding {:x1 69.19038039445877, :y1 160.4893798828125, :x2 580.4496501088142, :y2 202.3768310546875, :width 649.9999999999999, :height 845}, :rects ({:x1 69.19038039445877, :y1 160.4893798828125, :x2 580.4496501088142, :y2 181.7896728515625, :width 649.9999999999999, :height 845} {:x1 176.84495955705643, :y1 163.97207641601562, :x2 580.4496501088142, :y2 177.66513061523438, :width 649.9999999999999, :height 845} {:x1 69.24981337785721, :y1 181.07650756835938, :x2 436.60846358537674, :y2 202.3768310546875, :width 649.9999999999999, :height 845} {:x1 69.24981337785721, :y1 182.59796142578125, :x2 436.60846358537674, :y2 197.81246948242188, :width 649.9999999999999, :height 845}), :page 142}, :content {:text "You can pass anArrayof elements wherever avarargis accepted. To create anArray, usearrayOf()in the same way you uselistOf()"}, :properties {:color "yellow"}} {:id #uuid "628dc104-85f5-440d-ac18-158413214c3b", :page 142, :position {:bounding {:x1 69.64206343889236, :y1 179.11526489257812, :x2 580.3760417103767, :y2 219.04147338867188, :width 649.9999999999999, :height 845}, :rects ({:x1 443.66669112443924, :y1 179.11526489257812, :x2 580.3760417103767, :y2 200.41558837890625, :width 649.9999999999999, :height 845} {:x1 527.361210167408, :y1 182.59796142578125, :x2 580.3760417103767, :y2 196.291015625, :width 649.9999999999999, :height 845} {:x1 69.64206343889236, :y1 197.74114990234375, :x2 170.51662093400955, :y2 219.04147338867188, :width 649.9999999999999, :height 845}), :page 142}, :content {:text "Note that anArrayisalways mutable. "}, :properties {:color "red"}} {:id #uuid "628dc119-12c9-4b8d-9a3c-49199c8dd926", :page 142, :position {:bounding {:x1 69.64206343889236, :y1 197.74114990234375, :x2 580.5437052845955, :y2 237.67926025390625, :width 649.9999999999999, :height 845}, :rects ({:x1 170.50519210100174, :y1 197.74114990234375, :x2 580.5437052845955, :y2 219.04147338867188, :width 649.9999999999999, :height 845} {:x1 258.1950724720955, :y1 201.22384643554688, :x2 580.5437052845955, :y2 214.91690063476562, :width 649.9999999999999, :height 845} {:x1 69.64206343889236, :y1 216.37893676757812, :x2 376.92770797014236, :y2 237.67926025390625, :width 649.9999999999999, :height 845} {:x1 69.64206343889236, :y1 219.42184448242188, :x2 364.5659220814705, :y2 234.6363525390625, :width 649.9999999999999, :height 845}), :page 142}, :content {:text "To convert anArrayinto a sequence of arguments (not just a singleelement of typeArray), use thespread operator,*"}, :properties {:color "red"}} {:id #uuid "628dc11c-b388-453f-989f-8cb19ac843c8", :page 142, :position {:bounding {:x1 83.66794234514236, :y1 345.6785171031952, :x2 287.76828414201736, :y2 360.89305567741394, :width 649.9999999999999, :height 845}, :rects ({:x1 83.66794234514236, :y1 345.6785171031952, :x2 287.76828414201736, :y2 360.89305567741394, :width 649.9999999999999, :height 845}), :page 142}, :content {:text "sum(1,2,3, *array,6) eq21"}, :properties {:color "red"}} {:id #uuid "628e283e-8684-46c8-9033-792e86da0631", :page 146, :position {:bounding {:x1 83.19249348342419, :y1 201.17630004882812, :x2 578.9003792256117, :y2 375.18043518066406, :width 635.0000000000001, :height 825.5000000000002}, :rects ({:x1 83.19249348342419, :y1 201.17630004882812, :x2 276.15584187209606, :y2 222.47662353515625, :width 635.0000000000001, :height 825.5000000000002} {:x1 306.1683235615492, :y1 201.17630004882812, :x2 544.6102791279554, :y2 222.47662353515625, :width 635.0000000000001, :height 825.5000000000002} {:x1 99.4054604023695, :y1 204.9799346923828, :x2 544.6102791279554, :y2 219.4337158203125, :width 635.0000000000001, :height 825.5000000000002} {:x1 83.19249348342419, :y1 221.15724182128906, :x2 567.248111769557, :y2 242.45755004882812, :width 635.0000000000001, :height 825.5000000000002} {:x1 83.19249348342419, :y1 224.9608612060547, :x2 567.248111769557, :y2 239.41465759277344, :width 635.0000000000001, :height 825.5000000000002} {:x1 99.4054604023695, :y1 239.355224609375, :x2 189.93262104690075, :y2 260.6555480957031, :width 635.0000000000001, :height 825.5000000000002} {:x1 99.4054604023695, :y1 243.15884399414062, :x2 189.93262104690075, :y2 257.6126403808594, :width 635.0000000000001, :height 825.5000000000002} {:x1 83.19249348342419, :y1 259.33616638183594, :x2 127.85559467971325, :y2 280.636474609375, :width 635.0000000000001, :height 825.5000000000002} {:x1 150.43352131545544, :y1 259.33616638183594, :x2 172.6938362568617, :y2 280.636474609375, :width 635.0000000000001, :height 825.5000000000002} {:x1 255.58008198440075, :y1 259.33616638183594, :x2 378.6045113056898, :y2 280.636474609375, :width 635.0000000000001, :height 825.5000000000002} {:x1 83.19249348342419, :y1 263.13978576660156, :x2 378.6045113056898, :y2 277.5935821533203, :width 635.0000000000001, :height 825.5000000000002} {:x1 83.19249348342419, :y1 279.3052062988281, :x2 568.9335976094007, :y2 300.6055450439453, :width 635.0000000000001, :height 825.5000000000002} {:x1 83.19249348342419, :y1 283.1088409423828, :x2 568.9335976094007, :y2 297.56263732910156, :width 635.0000000000001, :height 825.5000000000002} {:x1 99.4054604023695, :y1 297.50318908691406, :x2 454.1256752461195, :y2 318.8035125732422, :width 635.0000000000001, :height 825.5000000000002} {:x1 574.4905891865492, :y1 297.50318908691406, :x2 578.9003792256117, :y2 318.8035125732422, :width 635.0000000000001, :height 825.5000000000002} {:x1 99.4054604023695, :y1 301.3068389892578, :x2 578.9003792256117, :y2 317.28208923339844, :width 635.0000000000001, :height 825.5000000000002} {:x1 99.4054604023695, :y1 315.70118713378906, :x2 209.25476460158825, :y2 337.0015106201172, :width 635.0000000000001, :height 825.5000000000002} {:x1 352.3943062275648, :y1 315.70118713378906, :x2 448.47883991897106, :y2 337.0015106201172, :width 635.0000000000001, :height 825.5000000000002} {:x1 490.96525959670544, :y1 315.70118713378906, :x2 494.2696724385023, :y2 337.0015106201172, :width 635.0000000000001, :height 825.5000000000002} {:x1 99.4054604023695, :y1 319.5048065185547, :x2 567.0082893818617, :y2 335.4800567626953, :width 635.0000000000001, :height 825.5000000000002} {:x1 99.4054604023695, :y1 333.9110565185547, :x2 121.66577534377575, :y2 355.2113800048828, :width 635.0000000000001, :height 825.5000000000002} {:x1 189.48013691604137, :y1 333.9110565185547, :x2 379.4636116474867, :y2 355.2113800048828, :width 635.0000000000001, :height 825.5000000000002} {:x1 99.4054604023695, :y1 337.7146759033203, :x2 379.4636116474867, :y2 352.16847229003906, :width 635.0000000000001, :height 825.5000000000002} {:x1 83.19249348342419, :y1 353.88011169433594, :x2 354.18684773147106, :y2 375.18043518066406, :width 635.0000000000001, :height 825.5000000000002} {:x1 436.81108479201794, :y1 353.88011169433594, :x2 569.3776131123304, :y2 375.18043518066406, :width 635.0000000000001, :height 825.5000000000002} {:x1 83.19249348342419, :y1 357.68373107910156, :x2 433.16231159865856, :y2 372.1375274658203, :width 635.0000000000001, :height 825.5000000000002}), :page 146}, :content {:text "1.Placing duplicate items into aSetautomatically removes those duplicates.2.Element order is not important for sets. Two sets are equal if they contain thesame elements.3.Bothinandcontains()test for membership.4.You can perform the usual Venn-diagram operations like checking for subset,union, intersection and difference, using either dot notation (set.union(other))or infix notation (set intersect other). The functionsunion,intersectandsubtractcan be used with infix notation.5.Set difference can be expressed with eithersubtract()or the minus operator."}, :properties {:color "yellow"}} {:id #uuid "628e2845-0399-4d2f-9069-5e63c5d7f5dc", :page 147, :position {:bounding {:x1 67.60950092971325, :y1 279.7212333679199, :x2 536.9645271748304, :y2 301.021541595459, :width 635.0000000000001, :height 825.5000000000002}, :rects ({:x1 67.60950092971325, :y1 279.7212333679199, :x2 150.27522663772106, :y2 301.021541595459, :width 635.0000000000001, :height 825.5000000000002} {:x1 172.83926777541637, :y1 279.7212333679199, :x2 195.0995979756117, :y2 301.021541595459, :width 635.0000000000001, :height 825.5000000000002} {:x1 217.6864204853773, :y1 279.7212333679199, :x2 386.11726765334606, :y2 301.021541595459, :width 635.0000000000001, :height 825.5000000000002} {:x1 412.4084358662367, :y1 279.7212333679199, :x2 494.28889851272106, :y2 301.021541595459, :width 635.0000000000001, :height 825.5000000000002} {:x1 528.1338386982679, :y1 279.7212333679199, :x2 536.9645271748304, :y2 301.021541595459, :width 635.0000000000001, :height 825.5000000000002} {:x1 153.9994087666273, :y1 282.4313163757324, :x2 528.1689949482679, :y2 298.406551361084, :width 635.0000000000001, :height 825.5000000000002}), :page 147}, :content {:text "The operators+=and-=add and remove elements toSets, just as withLists."}, :properties {:color "red"}} {:id #uuid "628ee6e6-7527-4623-8e69-1dbd0695e6e4", :page 149, :position {:bounding {:x1 102.2265625, :y1 94.8828125, :x2 583.6347045898438, :y2 172.69528198242188, :width 653.0000000000001, :height 848.9000000000002}, :rects ({:x1 127.01822662353516, :y1 94.8828125, :x2 150.47669982910156, :y2 116.54946899414062, :width 653.0000000000001, :height 848.9000000000002} {:x1 177.9817657470703, :y1 94.8828125, :x2 583.3098907470703, :y2 116.54946899414062, :width 653.0000000000001, :height 848.9000000000002} {:x1 156.47134399414062, :y1 96.9921875, :x2 583.3098907470703, :y2 113.65884399414062, :width 653.0000000000001, :height 848.9000000000002} {:x1 102.2265625, :y1 113.59375, :x2 168.80929565429688, :y2 135.26040649414062, :width 653.0000000000001, :height 848.9000000000002} {:x1 211.8098907470703, :y1 113.59375, :x2 365.39276123046875, :y2 135.26040649414062, :width 653.0000000000001, :height 848.9000000000002} {:x1 417.8125, :y1 113.59375, :x2 471.9374084472656, :y2 135.26040649414062, :width 653.0000000000001, :height 848.9000000000002} {:x1 514.9348754882812, :y1 113.59375, :x2 583.05859375, :y2 135.26040649414062, :width 653.0000000000001, :height 848.9000000000002} {:x1 102.2265625, :y1 116.92709350585938, :x2 583.05859375, :y2 133.59375, :width 653.0000000000001, :height 848.9000000000002} {:x1 129.1145782470703, :y1 132.31771850585938, :x2 253.21571350097656, :y2 153.984375, :width 653.0000000000001, :height 848.9000000000002} {:x1 283.64581298828125, :y1 132.31771850585938, :x2 583.6347045898438, :y2 153.984375, :width 653.0000000000001, :height 848.9000000000002} {:x1 102.2265625, :y1 134.42709350585938, :x2 583.6347045898438, :y2 151.09375, :width 653.0000000000001, :height 848.9000000000002} {:x1 102.2265625, :y1 151.02865600585938, :x2 203.36636352539062, :y2 172.69528198242188, :width 653.0000000000001, :height 848.9000000000002}), :page 149}, :content {:text "The[]operator looks up a value using a key. You can produce all thekeys usingkeysand all the values usingvalues. Callingkeysproduces aSetbecause all keys in aMapmust be unique, otherwise you’d have ambiguityduring a lookup."}, :properties {:color "yellow"}} {:id #uuid "628ee6ea-eced-48da-9c74-247b62dc5140", :page 149, :position {:bounding {:x1 124.8828125, :y1 171.57553100585938, :x2 520.8710327148438, :y2 193.24215698242188, :width 653.0000000000001, :height 848.9000000000002}, :rects ({:x1 124.8828125, :y1 171.57553100585938, :x2 241.43017578125, :y2 193.24215698242188, :width 653.0000000000001, :height 848.9000000000002} {:x1 272.3307189941406, :y1 171.57553100585938, :x2 520.8710327148438, :y2 193.24215698242188, :width 653.0000000000001, :height 848.9000000000002} {:x1 245.2083282470703, :y1 173.68490600585938, :x2 268.4786071777344, :y2 190.35153198242188, :width 653.0000000000001, :height 848.9000000000002}), :page 149}, :content {:text "Iterating through aMapproduces key-value pairs as map entries."}, :properties {:color "yellow"}} {:id #uuid "628ee6f5-63de-40ce-ae8b-faef61c0387a", :page 149, :position {:bounding {:x1 124.8828125, :y1 192.109375, :x2 412.8650207519531, :y2 213.77606201171875, :width 653.0000000000001, :height 848.9000000000002}, :rects ({:x1 124.8828125, :y1 192.109375, :x2 412.8650207519531, :y2 213.77606201171875, :width 653.0000000000001, :height 848.9000000000002}), :page 149}, :content {:text "You can unpack keys and values as you iterate."}, :properties {:color "yellow"}} {:id #uuid "628ee6fd-84c1-45e4-aee5-571a233a3171", :page 149, :position {:bounding {:x1 69.9609375, :y1 524.7656135559082, :x2 583.2520751953125, :y2 565.1432075500488, :width 653.0000000000001, :height 848.9000000000002}, :rects ({:x1 127.20051574707031, :y1 524.7656135559082, :x2 150.09410095214844, :y2 546.4322700500488, :width 653.0000000000001, :height 848.9000000000002} {:x1 264.54425048828125, :y1 524.7656135559082, :x2 583.2520751953125, :y2 546.4322700500488, :width 653.0000000000001, :height 848.9000000000002} {:x1 69.9609375, :y1 526.8749885559082, :x2 583.2520751953125, :y2 543.5416450500488, :width 653.0000000000001, :height 848.9000000000002} {:x1 69.9609375, :y1 543.4765205383301, :x2 89.32145690917969, :y2 565.1432075500488, :width 653.0000000000001, :height 848.9000000000002} {:x1 116.41926574707031, :y1 543.4765205383301, :x2 371.35614013671875, :y2 565.1432075500488, :width 653.0000000000001, :height 848.9000000000002} {:x1 399.5572814941406, :y1 543.4765205383301, :x2 402.9557189941406, :y2 565.1432075500488, :width 653.0000000000001, :height 848.9000000000002} {:x1 69.9609375, :y1 546.8098945617676, :x2 399.58538818359375, :y2 563.4765815734863, :width 653.0000000000001, :height 848.9000000000002}), :page 149}, :content {:text "mapOf()andmutableMapOf()preserve the order in which the elements are put intotheMap. This is not guaranteed for other types ofMap."}, :properties {:color "yellow"}} {:id #uuid "628ee71e-48ac-4132-a0c1-090c775c4ac3", :page 150, :position {:bounding {:x1 69.9609375, :y1 739.5963287353516, :x2 508.6475524902344, :y2 761.2630157470703, :width 653.0000000000001, :height 848.9000000000002}, :rects ({:x1 182.34375, :y1 739.5963287353516, :x2 371.8747863769531, :y2 761.2630157470703, :width 653.0000000000001, :height 848.9000000000002} {:x1 410.46875, :y1 739.5963287353516, :x2 508.6475524902344, :y2 761.2630157470703, :width 653.0000000000001, :height 848.9000000000002} {:x1 69.9609375, :y1 741.7057037353516, :x2 508.6475524902344, :y2 758.3723907470703, :width 653.0000000000001, :height 848.9000000000002}), :page 150}, :content {:text "getOrDefault()is usually a nicer alternative tonullor an exception."}, :properties {:color "yellow"}} {:id #uuid "628ee78f-eed2-491c-b058-c69a48039265", :page 151, :position {:bounding {:x1 69.50520324707031, :y1 94.8828125, :x2 583.0576171875, :y2 135.26040649414062, :width 653.0000000000001, :height 848.9000000000002}, :rects ({:x1 69.50520324707031, :y1 94.8828125, :x2 323.0296630859375, :y2 116.54946899414062, :width 653.0000000000001, :height 848.9000000000002} {:x1 348.9453125, :y1 94.8828125, :x2 526.0855102539062, :y2 116.54946899414062, :width 653.0000000000001, :height 848.9000000000002} {:x1 325.6900939941406, :y1 96.9921875, :x2 583.0576171875, :y2 113.65884399414062, :width 653.0000000000001, :height 848.9000000000002} {:x1 69.9609375, :y1 113.59375, :x2 165.99053955078125, :y2 135.26040649414062, :width 653.0000000000001, :height 848.9000000000002} {:x1 69.9609375, :y1 116.92709350585938, :x2 216.33343505859375, :y2 131.92709350585938, :width 653.0000000000001, :height 848.9000000000002}), :page 151}, :content {:text "You can store class instances as values in aMap. Here’s a map that retrieves aContactusing a numberString"}, :properties {:color "yellow"}} {:id #uuid "628ee7a8-bd90-439f-a616-c465ce67a7f4", :page 151, :position {:bounding {:x1 69.9609375, :y1 513.3853912353516, :x2 583.1943359375, :y2 553.7630157470703, :width 653.0000000000001, :height 848.9000000000002}, :rects ({:x1 69.9609375, :y1 513.3853912353516, :x2 353.3187255859375, :y2 535.0520782470703, :width 653.0000000000001, :height 848.9000000000002} {:x1 380.63800048828125, :y1 513.3853912353516, :x2 583.1943359375, :y2 535.0520782470703, :width 653.0000000000001, :height 848.9000000000002} {:x1 357.3828125, :y1 515.4947662353516, :x2 583.1943359375, :y2 532.1614532470703, :width 653.0000000000001, :height 848.9000000000002} {:x1 69.9609375, :y1 532.0963287353516, :x2 187.21421813964844, :y2 553.7630157470703, :width 653.0000000000001, :height 848.9000000000002}), :page 151}, :content {:text "It’s possible to use class instances as keys in aMap, but that’s trickier so we discussit later in the book."}, :properties {:color "red"}} {:id #uuid "628ee7c7-22f4-4a5d-8747-cccd23fb545e", :page 151, :position {:bounding {:x1 69.9609375, :y1 593.3072662353516, :x2 584.7265625, :y2 633.6848907470703, :width 653.0000000000001, :height 848.9000000000002}, :rects ({:x1 93.21614074707031, :y1 593.3072662353516, :x2 584.7265625, :y2 614.9739532470703, :width 653.0000000000001, :height 848.9000000000002} {:x1 69.9609375, :y1 595.4166412353516, :x2 584.7265625, :y2 612.0833282470703, :width 653.0000000000001, :height 848.9000000000002} {:x1 69.9609375, :y1 612.0182037353516, :x2 321.10302734375, :y2 633.6848907470703, :width 653.0000000000001, :height 848.9000000000002}), :page 151}, :content {:text "Maps look like simple little databases. They are sometimes calledassociative arrays,because they associate keys with values. "}, :properties {:color "yellow"}} {:id #uuid "628f148f-6d71-4a99-95ad-34dff32fc9f9", :page 152, :position {:bounding {:x1 69.51822662353516, :y1 579.0494384765625, :x2 469.6559143066406, :y2 600.7161254882812, :width 653.0000000000001, :height 848.9000000000002}, :rects ({:x1 69.51822662353516, :y1 579.0494384765625, :x2 469.6559143066406, :y2 600.7161254882812, :width 653.0000000000001, :height 848.9000000000002} {:x1 427.43487548828125, :y1 582.3827819824219, :x2 462.8132019042969, :y2 597.3827819824219, :width 653.0000000000001, :height 848.9000000000002}), :page 152}, :content {:text "The accessor used to get the value of a property is called agetter. "}, :properties {:color "yellow"}} {:id #uuid "628f1496-39ff-4b47-b85a-a42abe869935", :page 152, :position {:bounding {:x1 69.9609375, :y1 579.0494384765625, :x2 583.4068603515625, :y2 619.4400634765625, :width 653.0000000000001, :height 848.9000000000002}, :rects ({:x1 469.6435546875, :y1 579.0494384765625, :x2 583.4068603515625, :y2 600.7161254882812, :width 653.0000000000001, :height 848.9000000000002} {:x1 69.9609375, :y1 597.7734069824219, :x2 141.0953826904297, :y2 619.4400634765625, :width 653.0000000000001, :height 848.9000000000002} {:x1 189.32290649414062, :y1 597.7734069824219, :x2 454.1151428222656, :y2 619.4400634765625, :width 653.0000000000001, :height 848.9000000000002} {:x1 69.9609375, :y1 601.1067504882812, :x2 184.58322143554688, :y2 616.1067504882812, :width 653.0000000000001, :height 848.9000000000002}), :page 152}, :content {:text "You create a getterby definingget()immediately after the property definition. "}, :properties {:color "yellow"}} {:id #uuid "628f1498-36e6-4984-a16b-26fd9fee1549", :page 152, :position {:bounding {:x1 69.9609375, :y1 597.7734069824219, :x2 584.5962524414062, :y2 656.8619384765625, :width 653.0000000000001, :height 848.9000000000002}, :rects ({:x1 454.10211181640625, :y1 597.7734069824219, :x2 583.3084716796875, :y2 619.4400634765625, :width 653.0000000000001, :height 848.9000000000002} {:x1 69.9609375, :y1 616.4843444824219, :x2 541.3316040039062, :y2 638.1510009765625, :width 653.0000000000001, :height 848.9000000000002} {:x1 69.9609375, :y1 619.8176879882812, :x2 584.5962524414062, :y2 634.8176879882812, :width 653.0000000000001, :height 848.9000000000002} {:x1 69.9609375, :y1 635.1952819824219, :x2 326.7173767089844, :y2 656.8619384765625, :width 653.0000000000001, :height 848.9000000000002}), :page 152}, :content {:text "The accessor used tomodify a mutable property is called asetter. You create a setter by definingset()immediately after the property definition."}, :properties {:color "red"}} {:id #uuid "628f1644-bbe5-4a86-8eb1-5be17c48faa5", :page 154, :position {:bounding {:x1 84.04947662353516, :y1 177.56509399414062, :x2 324.3359375, :y2 256.1979064941406, :width 653.0000000000001, :height 848.9000000000002}, :rects ({:x1 84.04947662353516, :y1 177.56509399414062, :x2 183.3984375, :y2 192.56509399414062, :width 653.0000000000001, :height 848.9000000000002} {:x1 98.13801574707031, :y1 193.4765625, :x2 182.70333862304688, :y2 208.4765625, :width 653.0000000000001, :height 848.9000000000002} {:x1 112.23957824707031, :y1 209.38800048828125, :x2 324.3359375, :y2 224.38800048828125, :width 653.0000000000001, :height 848.9000000000002} {:x1 112.23957824707031, :y1 225.29946899414062, :x2 203.84860229492188, :y2 240.29946899414062, :width 653.0000000000001, :height 848.9000000000002} {:x1 98.13801574707031, :y1 241.19790649414062, :x2 105.88541412353516, :y2 256.1979064941406, :width 653.0000000000001, :height 848.9000000000002}), :page 154}, :content {:text "varn: Int =0set(value) {trace(\"$field becomes $value\")field = value}"}, :properties {:color "blue"}} {:id #uuid "628f16a9-f0d4-4aea-a3a0-2a624ed04aea", :page 154, :position {:bounding {:x1 69.9609375, :y1 415.4947814941406, :x2 583.5410766601562, :y2 474.5963439941406, :width 653.0000000000001, :height 848.9000000000002}, :rects ({:x1 69.9609375, :y1 415.4947814941406, :x2 233.989990234375, :y2 437.16143798828125, :width 653.0000000000001, :height 848.9000000000002} {:x1 292.31768798828125, :y1 415.4947814941406, :x2 439.632568359375, :y2 437.16143798828125, :width 653.0000000000001, :height 848.9000000000002} {:x1 497.9557189941406, :y1 415.4947814941406, :x2 583.0956420898438, :y2 437.16143798828125, :width 653.0000000000001, :height 848.9000000000002} {:x1 238.0598907470703, :y1 417.6041564941406, :x2 583.0956420898438, :y2 434.27081298828125, :width 653.0000000000001, :height 848.9000000000002} {:x1 69.9609375, :y1 434.2057189941406, :x2 166.83251953125, :y2 455.87237548828125, :width 653.0000000000001, :height 848.9000000000002} {:x1 231.875, :y1 434.2057189941406, :x2 320.2556457519531, :y2 455.87237548828125, :width 653.0000000000001, :height 848.9000000000002} {:x1 372.109375, :y1 434.2057189941406, :x2 583.5410766601562, :y2 455.87237548828125, :width 653.0000000000001, :height 848.9000000000002} {:x1 69.9609375, :y1 437.5390625, :x2 583.5410766601562, :y2 454.2057189941406, :width 653.0000000000001, :height 848.9000000000002} {:x1 69.9609375, :y1 452.9296875, :x2 428.0527038574219, :y2 474.5963439941406, :width 653.0000000000001, :height 848.9000000000002}), :page 154}, :content {:text "If you define a property asprivate, both accessors becomeprivate. You can alsomake the setterprivateand the getterpublic. Then you can read the propertyoutside the class, but only change its value inside the class"}, :properties {:color "red"}} {:id #uuid "628f16b9-6e0f-4101-b91c-cb8c638ede48", :page 153, :position {:bounding {:x1 69.9609375, :y1 161.6536407470703, :x2 288.4030456542969, :y2 335.7552032470703, :width 653.0000000000001, :height 848.9000000000002}, :rects ({:x1 69.9609375, :y1 161.6536407470703, :x2 176.35415649414062, :y2 176.6536407470703, :width 653.0000000000001, :height 848.9000000000002} {:x1 84.04947662353516, :y1 177.5651092529297, :x2 183.3984375, :y2 192.5651092529297, :width 653.0000000000001, :height 848.9000000000002} {:x1 98.13801574707031, :y1 193.47654724121094, :x2 147.47232055664062, :y2 208.47654724121094, :width 653.0000000000001, :height 848.9000000000002} {:x1 112.23957824707031, :y1 209.3880157470703, :x2 211.58853149414062, :y2 224.3880157470703, :width 653.0000000000001, :height 848.9000000000002} {:x1 112.23957824707031, :y1 225.2994842529297, :x2 196.80535888671875, :y2 240.2994842529297, :width 653.0000000000001, :height 848.9000000000002} {:x1 246.11978149414062, :y1 225.2994842529297, :x2 288.4030456542969, :y2 240.2994842529297, :width 653.0000000000001, :height 848.9000000000002} {:x1 98.13801574707031, :y1 241.1979217529297, :x2 105.88541412353516, :y2 256.1979217529297, :width 653.0000000000001, :height 848.9000000000002} {:x1 98.13801574707031, :y1 257.10935974121094, :x2 182.70333862304688, :y2 272.10935974121094, :width 653.0000000000001, :height 848.9000000000002} {:x1 112.23957824707031, :y1 273.0208282470703, :x2 253.8671875, :y2 288.0208282470703, :width 653.0000000000001, :height 848.9000000000002} {:x1 112.23957824707031, :y1 288.9322967529297, :x2 203.84860229492188, :y2 303.9322967529297, :width 653.0000000000001, :height 848.9000000000002} {:x1 246.11978149414062, :y1 288.9322967529297, :x2 288.4030456542969, :y2 303.9322967529297, :width 653.0000000000001, :height 848.9000000000002} {:x1 98.13801574707031, :y1 304.84373474121094, :x2 105.88541412353516, :y2 319.84373474121094, :width 653.0000000000001, :height 848.9000000000002} {:x1 69.9609375, :y1 320.7552032470703, :x2 77.70832824707031, :y2 335.7552032470703, :width 653.0000000000001, :height 848.9000000000002}), :page 153}, :content {:text "classDefault{vari: Int =0get() {trace(\"get()\")returnfield// [1]}set(value) {trace(\"set($value)\")field = value// [2]}}"}, :properties {:color "blue"}} {:id #uuid "628f16d7-0fcd-4468-8edc-ae309a08546e", :page 155, :position {:bounding {:x1 69.9609375, :y1 140.32550048828125, :x2 583.3878784179688, :y2 180.71612548828125, :width 653.0000000000001, :height 848.9000000000002}, :rects ({:x1 69.9609375, :y1 140.32550048828125, :x2 583.3878784179688, :y2 161.9921875, :width 653.0000000000001, :height 848.9000000000002} {:x1 69.9609375, :y1 159.04946899414062, :x2 193.07664489746094, :y2 180.71612548828125, :width 653.0000000000001, :height 848.9000000000002}), :page 155}, :content {:text "Normal properties store their data in a field. You can also create a property thatdoesn’t have a field:"}, :properties {:color "yellow"}} {:id #uuid "628f16e8-e95b-4616-9360-b9486f6bae22", :page 155, :position {:bounding {:x1 84.04947662353516, :y1 336.80987548828125, :x2 344.79911041259766, :y2 367.7213439941406, :width 653.0000000000001, :height 848.9000000000002}, :rects ({:x1 84.04947662353516, :y1 336.80987548828125, :x2 203.84860229492188, :y2 351.80987548828125, :width 653.0000000000001, :height 848.9000000000002} {:x1 98.13801574707031, :y1 352.7213439941406, :x2 344.79911041259766, :y2 367.7213439941406, :width 653.0000000000001, :height 848.9000000000002}), :page 155}, :content {:text "valcapacity: Intget() = maxCapacity - hamsters.size"}, :properties {:color "blue"}} {:id #uuid "628f16ed-032b-4032-9576-f7df02c99297", :page 155, :position {:bounding {:x1 84.04947662353516, :y1 368.6328125, :x2 351.85245513916016, :y2 399.53125, :width 653.0000000000001, :height 848.9000000000002}, :rects ({:x1 84.04947662353516, :y1 368.6328125, :x2 203.84860229492188, :y2 383.6328125, :width 653.0000000000001, :height 848.9000000000002} {:x1 98.13801574707031, :y1 384.53125, :x2 351.85245513916016, :y2 399.53125, :width 653.0000000000001, :height 848.9000000000002}), :page 155}, :content {:text "valfull: Booleanget() = hamsters.size == maxCapacity"}, :properties {:color "blue"}} {:id #uuid "628f1727-426a-477b-b87c-eecb713afc43", :page 156, :position {:bounding {:x1 69.51822662353516, :y1 94.8828125, :x2 583.2196655273438, :y2 135.26043701171875, :width 653.0000000000001, :height 848.9000000000002}, :rects ({:x1 69.51822662353516, :y1 94.8828125, :x2 158.11021423339844, :y2 116.54949951171875, :width 653.0000000000001, :height 848.9000000000002} {:x1 227.4348907470703, :y1 94.8828125, :x2 250.3284912109375, :y2 116.54949951171875, :width 653.0000000000001, :height 848.9000000000002} {:x1 288.68487548828125, :y1 94.8828125, :x2 583.2196655273438, :y2 116.54949951171875, :width 653.0000000000001, :height 848.9000000000002} {:x1 161.74478149414062, :y1 96.9921875, :x2 583.2196655273438, :y2 113.65887451171875, :width 653.0000000000001, :height 848.9000000000002} {:x1 69.9609375, :y1 113.59375, :x2 225.57366943359375, :y2 135.26043701171875, :width 653.0000000000001, :height 848.9000000000002}), :page 156}, :content {:text "The propertiescapacityandfullcontain no underlying state—they are computedat the time of each access."}, :properties {:color "yellow"}} {:id #uuid "628f1733-726a-4814-8b5d-0c80e8b2a489", :page 155, :position {:bounding {:x1 69.9609375, :y1 94.8828125, :x2 583.1859741210938, :y2 135.26040649414062, :width 653.0000000000001, :height 848.9000000000002}, :rects ({:x1 69.9609375, :y1 94.8828125, :x2 105.53895568847656, :y2 116.54946899414062, :width 653.0000000000001, :height 848.9000000000002} {:x1 195.3125, :y1 94.8828125, :x2 293.32281494140625, :y2 116.54946899414062, :width 653.0000000000001, :height 848.9000000000002} {:x1 341.1197814941406, :y1 94.8828125, :x2 583.1859741210938, :y2 116.54946899414062, :width 653.0000000000001, :height 848.9000000000002} {:x1 110.05207824707031, :y1 96.9921875, :x2 583.1859741210938, :y2 113.65884399414062, :width 653.0000000000001, :height 848.9000000000002} {:x1 69.9609375, :y1 113.59375, :x2 114.62118530273438, :y2 135.26040649414062, :width 653.0000000000001, :height 848.9000000000002}), :page 155}, :content {:text "Usingprivate set, we control thevalueproperty so it can only be incrementedby one."}, :properties {:color "yellow"}} {:id #uuid "628f17b7-0515-4483-b720-0734f5c26d13", :page 156, :position {:bounding {:x1 69.9609375, :y1 357.0963544845581, :x2 585.1168823242188, :y2 416.1979169845581, :width 653.0000000000001, :height 848.9000000000002}, :rects ({:x1 69.9609375, :y1 357.0963544845581, :x2 583.4439697265625, :y2 378.76301097869873, :width 653.0000000000001, :height 848.9000000000002} {:x1 69.9609375, :y1 375.82029247283936, :x2 585.1168823242188, :y2 397.4869794845581, :width 653.0000000000001, :height 848.9000000000002} {:x1 69.9609375, :y1 379.15363597869873, :x2 585.1168823242188, :y2 394.15363597869873, :width 653.0000000000001, :height 848.9000000000002} {:x1 69.9609375, :y1 394.53122997283936, :x2 213.4999542236328, :y2 416.1979169845581, :width 653.0000000000001, :height 848.9000000000002}), :page 156}, :content {:text "In this case, using properties improves readability because capacity and fullness areproperties of the cage. However, don’t just convert all your functions to properties—first, see how they read"}, :properties {:color "red"}} {:id #uuid "628f1b1d-432a-4fe0-9f65-0ecc95a76d87", :page 153, :position {:bounding {:x1 69.51822662353516, :y1 655.1822814941406, :x2 463.14774322509766, :y2 676.8489379882812, :width 653.0000000000001, :height 848.9000000000002}, :rects ({:x1 69.51822662353516, :y1 655.1822814941406, :x2 463.14774322509766, :y2 676.8489379882812, :width 653.0000000000001, :height 848.9000000000002}), :page 153}, :content {:text "This next example uses the default implementation of the getter "}, :properties {:color "red"}} {:id #uuid "628f1b4d-4909-4e27-be85-ff30ece69ee5", :page 153, :position {:bounding {:x1 69.9609375, :y1 591.0156097412109, :x2 583.2261962890625, :y2 650.1171722412109, :width 653.0000000000001, :height 848.9000000000002}, :rects ({:x1 324.22711181640625, :y1 591.0156097412109, :x2 583.2169799804688, :y2 612.6822662353516, :width 653.0000000000001, :height 848.9000000000002} {:x1 69.9609375, :y1 609.7395782470703, :x2 284.3213806152344, :y2 631.4062347412109, :width 653.0000000000001, :height 848.9000000000002} {:x1 330.63800048828125, :y1 609.7395782470703, :x2 583.2261962890625, :y2 631.4062347412109, :width 653.0000000000001, :height 848.9000000000002} {:x1 69.9609375, :y1 613.0728912353516, :x2 583.2261962890625, :y2 628.0728912353516, :width 653.0000000000001, :height 848.9000000000002} {:x1 69.9609375, :y1 628.4505157470703, :x2 193.65745544433594, :y2 650.1171722412109, :width 653.0000000000001, :height 848.9000000000002}), :page 153}, :content {:text "Inside the getter and setter, the stored valueis manipulated indirectly using thefieldkeyword, which is only accessible withinthese two functions."}, :properties {:color "yellow"}} {:id #uuid "62934f8c-3033-4b34-9f2c-7502b1cbc895", :page 182, :position {:bounding {:x1 88.60552978515625, :y1 437.7501220703125, :x2 738.6143798828125, :y2 488.84234619140625, :width 827, :height 1075.1000000000001}, :rects ({:x1 708.7822875976562, :y1 437.7501220703125, :x2 738.6143798828125, :y2 465.13623046875, :width 827, :height 1075.1000000000001} {:x1 88.60552978515625, :y1 461.45623779296875, :x2 377.70709228515625, :y2 488.84234619140625, :width 827, :height 1075.1000000000001} {:x1 88.60552978515625, :y1 466.02056884765625, :x2 377.70709228515625, :y2 485.19085693359375, :width 827, :height 1075.1000000000001}), :page 182}, :content {:text "Thetype you extend is called thereceiver"}, :properties {:color "yellow"}} {:id #uuid "62934f94-8c75-4c22-a98b-7367d59bf71f", :page 182, :position {:bounding {:x1 88.60552978515625, :y1 461.45623779296875, :x2 738.5300903320312, :y2 512.5484619140625, :width 827, :height 1075.1000000000001}, :rects ({:x1 386.7143859863281, :y1 461.45623779296875, :x2 738.5300903320312, :y2 488.84234619140625, :width 827, :height 1075.1000000000001} {:x1 88.60552978515625, :y1 485.162353515625, :x2 407.15142822265625, :y2 512.5484619140625, :width 827, :height 1075.1000000000001}), :page 182}, :content {:text "To define an extension function, you precedethe function name with the receiver type"}, :properties {:color "yellow"}} {:id #uuid "62934f97-a9bb-42d1-bb9e-8d72df438323", :page 182, :position {:bounding {:x1 88.60552978515625, :y1 529.5934753417969, :x2 481.3027038574219, :y2 547.8508911132812, :width 827, :height 1075.1000000000001}, :rects ({:x1 88.60552978515625, :y1 529.5934753417969, :x2 481.3027038574219, :y2 547.8508911132812, :width 827, :height 1075.1000000000001}), :page 182}, :content {:text "funReceiverType.extensionFunction() { ... }"}, :properties {:color "red"}} {:id #uuid "62935033-5c42-4ad3-acc6-42d05d6f765b", :page 182, :position {:bounding {:x1 88.04924774169922, :y1 886.8968505859375, :x2 588.1931076049805, :y2 914.282958984375, :width 827, :height 1075.1000000000001}, :rects ({:x1 88.04924774169922, :y1 886.8968505859375, :x2 588.1931076049805, :y2 914.282958984375, :width 827, :height 1075.1000000000001}), :page 182}, :content {:text "To use extensions from another package, you must import them:"}, :properties {:color "yellow"}} {:id #uuid "62935049-137b-4c1b-94c5-f53a5618adf0", :page 183, :position {:bounding {:x1 88.03498840332031, :y1 344.5374526977539, :x2 694.817626953125, :y2 371.9235610961914, :width 827, :height 1075.1000000000001}, :rects ({:x1 88.03498840332031, :y1 344.5374526977539, :x2 574.5356597900391, :y2 371.9235610961914, :width 827, :height 1075.1000000000001} {:x1 622.2783813476562, :y1 344.5374526977539, :x2 694.817626953125, :y2 371.9235610961914, :width 827, :height 1075.1000000000001} {:x1 578.6602783203125, :y1 347.8323440551758, :x2 694.817626953125, :y2 368.82837677001953, :width 827, :height 1075.1000000000001}), :page 183}, :content {:text "You can access member functions or other extensions using thethiskeyword."}, :properties {:color "red"}} {:id #uuid "62935099-2789-45de-8b66-9ffb7963a98d", :page 183, :position {:bounding {:x1 158.1691436767578, :y1 762.1188278198242, :x2 429.6729431152344, :y2 789.5049362182617, :width 827, :height 1075.1000000000001}, :rects ({:x1 202.3292694091797, :y1 762.1188278198242, :x2 295.8958435058594, :y2 789.5049362182617, :width 827, :height 1075.1000000000001} {:x1 364.56353759765625, :y1 762.1188278198242, :x2 429.6729431152344, :y2 789.5049362182617, :width 827, :height 1075.1000000000001} {:x1 158.1691436767578, :y1 765.413688659668, :x2 359.6632080078125, :y2 786.4097213745117, :width 827, :height 1075.1000000000001}), :page 183}, :content {:text "thisrefers to theStringreceiver."}, :properties {:color "red"}} {:id #uuid "629350bb-819f-4928-bed7-620627369581", :page 184, :position {:bounding {:x1 267.0958557128906, :y1 404.9723320007324, :x2 733.5979614257812, :y2 432.35847091674805, :width 827, :height 1075.1000000000001}, :rects ({:x1 267.0958557128906, :y1 404.9723320007324, :x2 372.05419921875, :y2 432.35847091674805, :width 827, :height 1075.1000000000001} {:x1 430.8893127441406, :y1 404.9723320007324, :x2 733.5979614257812, :y2 432.35847091674805, :width 827, :height 1075.1000000000001} {:x1 376.9015808105469, :y1 408.2815055847168, :x2 425.9898681640625, :y2 429.27753829956055, :width 827, :height 1075.1000000000001}), :page 184}, :content {:text "we access thetitleproperty without explicit qualification."}, :properties {:color "yellow"}} {:id #uuid "629350cd-169a-4b90-8ef5-5323527ef85c", :page 184, :position {:bounding {:x1 106.44930267333984, :y1 265.45999908447266, :x2 481.2628173828125, :y2 283.71741485595703, :width 827, :height 1075.1000000000001}, :rects ({:x1 106.44930267333984, :y1 265.45999908447266, :x2 481.2628173828125, :y2 283.71741485595703, :width 827, :height 1075.1000000000001}), :page 184}, :content {:text "\"\"\"title: \"$title\", category: $category\"\"\""}, :properties {:color "yellow"}} {:id #uuid "629350f8-402a-4b3b-afc0-2b0be7514d2b", :page 184, :position {:bounding {:x1 88.60552978515625, :y1 529.8930130004883, :x2 738.6654052734375, :y2 604.6913833618164, :width 827, :height 1075.1000000000001}, :rects ({:x1 708.82080078125, :y1 529.8930130004883, :x2 738.3887939453125, :y2 557.2791519165039, :width 827, :height 1075.1000000000001} {:x1 88.60552978515625, :y1 553.5991287231445, :x2 738.6654052734375, :y2 580.9852676391602, :width 827, :height 1075.1000000000001} {:x1 88.60552978515625, :y1 558.1634902954102, :x2 738.6654052734375, :y2 577.3337783813477, :width 827, :height 1075.1000000000001} {:x1 88.60552978515625, :y1 577.3052749633789, :x2 168.63088989257812, :y2 604.6913833618164, :width 827, :height 1075.1000000000001}), :page 184}, :content {:text "Theonly reason for using an extension function is the syntax, but this syntax sugar ispowerful. "}, :properties {:color "yellow"}} {:id #uuid "62935445-e77c-43cc-8db6-a04830a175d5", :page 185, :position {:bounding {:x1 129.47076416015625, :y1 257.24416732788086, :x2 567.56982421875, :y2 284.63027572631836, :width 827, :height 1075.1000000000001}, :rects ({:x1 129.47076416015625, :y1 257.24416732788086, :x2 567.56982421875, :y2 284.63027572631836, :width 827, :height 1075.1000000000001}), :page 185}, :content {:text "You can provide argument names during a function call."}, :properties {:color "yellow"}} {:id #uuid "62935461-be66-4a85-9770-6dae2172d1ca", :page 185, :position {:bounding {:x1 158.1691436767578, :y1 850.5389099121094, :x2 472.17848205566406, :y2 877.925048828125, :width 827, :height 1075.1000000000001}, :rects ({:x1 158.1691436767578, :y1 850.5389099121094, :x2 472.17848205566406, :y2 877.925048828125, :width 827, :height 1075.1000000000001}), :page 185}, :content {:text "The meaning of every argument is clear."}, :properties {:color "yellow"}} {:id #uuid "62935465-fd1f-4c56-bd32-1e4626f87ed3", :page 185, :position {:bounding {:x1 106.44930267333984, :y1 616.1022644042969, :x2 445.5621032714844, :y2 714.9633178710938, :width 827, :height 1075.1000000000001}, :rects ({:x1 106.44930267333984, :y1 616.1022644042969, :x2 160.00677490234375, :y2 634.3596801757812, :width 827, :height 1075.1000000000001} {:x1 124.29307556152344, :y1 636.2567443847656, :x2 205.49578857421875, :y2 654.51416015625, :width 827, :height 1075.1000000000001} {:x1 392.02099609375, :y1 636.2567443847656, :x2 445.5621032714844, :y2 654.51416015625, :width 827, :height 1075.1000000000001} {:x1 124.29307556152344, :y1 656.3969573974609, :x2 223.3538360595703, :y2 674.6543731689453, :width 827, :height 1075.1000000000001} {:x1 124.29307556152344, :y1 676.5514373779297, :x2 196.58103942871094, :y2 694.808837890625, :width 827, :height 1075.1000000000001} {:x1 106.44930267333984, :y1 696.7059020996094, :x2 267.0971984863281, :y2 714.9633178710938, :width 827, :height 1075.1000000000001}), :page 185}, :content {:text "color(red =76,// [2]green =89,blue =0) eq\"(76, 89, 0)\""}, :properties {:color "yellow"}} {:id #uuid "62936741-d731-46a9-b8e8-4f7faa04ee36", :page 195, :position {:bounding {:x1 88.60552978515625, :y1 432.7578582763672, :x2 738.7265625, :y2 483.85011291503906, :width 827, :height 1075.1000000000001}, :rects ({:x1 602.457763671875, :y1 432.7578582763672, :x2 738.7265625, :y2 460.1439971923828, :width 827, :height 1075.1000000000001} {:x1 88.60552978515625, :y1 456.46397399902344, :x2 376.68292236328125, :y2 483.85011291503906, :width 827, :height 1075.1000000000001} {:x1 88.60552978515625, :y1 461.02833557128906, :x2 401.3463134765625, :y2 480.19862365722656, :width 827, :height 1075.1000000000001}), :page 195}, :content {:text "Each match is anexpression followed by a right arrow->"}, :properties {:color "red"}} {:id #uuid "62936831-3fb2-4beb-8b82-d5d054affaa6", :page 195, :position {:bounding {:x1 124.29307556152344, :y1 775.4838256835938, :x2 142.14556884765625, :y2 793.7412414550781, :width 827, :height 1075.1000000000001}, :rects ({:x1 124.29307556152344, :y1 775.4838256835938, :x2 142.14556884765625, :y2 793.7412414550781, :width 827, :height 1075.1000000000001}), :page 195}, :content {:text "to"}, :properties {:color "red"}} {:id #uuid "62936835-b45e-4ba9-9186-b8754cf9a735", :page 196, :position {:bounding {:x1 142.15110778808594, :y1 164.73040771484375, :x2 160.00360107421875, :y2 182.98785400390625, :width 827, :height 1075.1000000000001}, :rects ({:x1 142.15110778808594, :y1 164.73040771484375, :x2 160.00360107421875, :y2 182.98785400390625, :width 827, :height 1075.1000000000001}), :page 196}, :content {:text "->"}, :properties {:color "red"}} {:id #uuid "6293685e-38ad-4918-bd34-b77c4ab63355", :page 195, :position {:bounding {:x1 88.60552978515625, :y1 480.1558074951172, :x2 738.6309814453125, :y2 554.9541625976562, :width 827, :height 1075.1000000000001}, :rects ({:x1 410.1042785644531, :y1 480.1558074951172, :x2 738.6309814453125, :y2 507.54193115234375, :width 827, :height 1075.1000000000001} {:x1 88.60552978515625, :y1 503.86192321777344, :x2 608.0001831054688, :y2 531.248046875, :width 827, :height 1075.1000000000001} {:x1 638.5531616210938, :y1 503.86192321777344, :x2 738.4243774414062, :y2 531.248046875, :width 827, :height 1075.1000000000001} {:x1 88.60552978515625, :y1 508.42628479003906, :x2 738.4243774414062, :y2 527.5965576171875, :width 827, :height 1075.1000000000001} {:x1 88.60552978515625, :y1 527.5680541992188, :x2 182.03651428222656, :y2 554.9541625976562, :width 827, :height 1075.1000000000001} {:x1 231.05618286132812, :y1 527.5680541992188, :x2 313.23126220703125, :y2 554.9541625976562, :width 827, :height 1075.1000000000001} {:x1 88.60552978515625, :y1 532.1323852539062, :x2 226.1446533203125, :y2 551.3026733398438, :width 827, :height 1075.1000000000001}), :page 195}, :content {:text "The expression is evaluated and comparedto the target value. If it matches, the expression to the right of the->produces theresult of thewhenexpression"}, :properties {:color "yellow"}} {:id #uuid "6293690c-c72f-48dc-b1bb-7b18ee9b8d13", :page 196, :position {:bounding {:x1 121.35477447509766, :y1 450.1737289428711, :x2 706.636962890625, :y2 477.5598373413086, :width 827, :height 1075.1000000000001}, :rects ({:x1 121.35477447509766, :y1 450.1737289428711, :x2 187.8795623779297, :y2 477.5598373413086, :width 827, :height 1075.1000000000001} {:x1 236.91851806640625, :y1 450.1737289428711, :x2 397.8951110839844, :y2 477.5598373413086, :width 827, :height 1075.1000000000001} {:x1 417.4244689941406, :y1 450.1737289428711, :x2 706.636962890625, :y2 477.5598373413086, :width 827, :height 1075.1000000000001} {:x1 129.47076416015625, :y1 454.7380599975586, :x2 413.5019836425781, :y2 473.9083480834961, :width 827, :height 1075.1000000000001}), :page 196}, :content {:text "[1]Thewhenexpression comparesito the match expressions in the body."}, :properties {:color "yellow"}} {:id #uuid "62936913-ef19-4dc0-9cdc-4ee9e73fbe73", :page 196, :position {:bounding {:x1 121.35477447509766, :y1 476.19054412841797, :x2 740.624755859375, :y2 527.2827987670898, :width 827, :height 1075.1000000000001}, :rects ({:x1 121.35477447509766, :y1 476.19054412841797, :x2 560.2381744384766, :y2 503.5766830444336, :width 827, :height 1075.1000000000001} {:x1 606.0321655273438, :y1 476.19054412841797, :x2 740.624755859375, :y2 503.5766830444336, :width 827, :height 1075.1000000000001} {:x1 129.47076416015625, :y1 480.7549057006836, :x2 740.624755859375, :y2 499.9251937866211, :width 827, :height 1075.1000000000001} {:x1 129.47076416015625, :y1 499.8966293334961, :x2 139.35545349121094, :y2 527.2827987670898, :width 827, :height 1075.1000000000001} {:x1 207.02200317382812, :y1 499.8966293334961, :x2 571.8720703125, :y2 527.2827987670898, :width 827, :height 1075.1000000000001} {:x1 666.56689453125, :y1 499.8966293334961, :x2 670.87451171875, :y2 527.2827987670898, :width 827, :height 1075.1000000000001} {:x1 129.47076416015625, :y1 504.46102142333984, :x2 666.5563354492188, :y2 525.4570541381836, :width 827, :height 1075.1000000000001}), :page 196}, :content {:text "[2]The first successful match completes execution of thewhenexpression—here,aStringis produced which becomes the return value ofordinal()."}, :properties {:color "yellow"}} {:id #uuid "6293693b-4a2e-4516-9764-1f8a1f07e34c", :page 196, :position {:bounding {:x1 128.91448974609375, :y1 525.9134750366211, :x2 741.5892333984375, :y2 600.6975936889648, :width 827, :height 1075.1000000000001}, :rects ({:x1 129.47076416015625, :y1 525.9134750366211, :x2 189.5626678466797, :y2 553.2995834350586, :width 827, :height 1075.1000000000001} {:x1 241.96783447265625, :y1 525.9134750366211, :x2 741.5892333984375, :y2 553.2995834350586, :width 827, :height 1075.1000000000001} {:x1 159.8522491455078, :y1 530.4778060913086, :x2 741.5892333984375, :y2 549.6480941772461, :width 827, :height 1075.1000000000001} {:x1 128.91448974609375, :y1 549.6195907592773, :x2 158.62489318847656, :y2 577.0056991577148, :width 827, :height 1075.1000000000001} {:x1 207.59254455566406, :y1 549.6195907592773, :x2 703.6537017822266, :y2 577.0056991577148, :width 827, :height 1075.1000000000001} {:x1 718.0585327148438, :y1 549.6195907592773, :x2 738.380615234375, :y2 577.0056991577148, :width 827, :height 1075.1000000000001} {:x1 128.91448974609375, :y1 554.1839218139648, :x2 738.380615234375, :y2 575.1799545288086, :width 827, :height 1075.1000000000001} {:x1 129.47076416015625, :y1 573.3114242553711, :x2 563.7066040039062, :y2 600.6975936889648, :width 827, :height 1075.1000000000001} {:x1 612.607666015625, :y1 573.3114242553711, :x2 649.2991943359375, :y2 600.6975936889648, :width 827, :height 1075.1000000000001} {:x1 129.47076416015625, :y1 577.8758163452148, :x2 607.7103881835938, :y2 597.0461044311523, :width 827, :height 1075.1000000000001}), :page 196}, :content {:text "[3]Theelsekeyword provides a “fall through” when there are no matches.Theelsecase always appears last in the match list. When we test against2, itdoesn’t match 1, 3, 7, 8 or 20, and so falls through to theelsecase."}, :properties {:color "red"}} {:id #uuid "62936c47-b4dd-4471-a307-a4d9505ff85a", :page 196, :position {:bounding {:x1 88.60552978515625, :y1 612.0799102783203, :x2 740.5204467773438, :y2 663.1579132080078, :width 827, :height 1075.1000000000001}, :rects ({:x1 88.60552978515625, :y1 612.0799102783203, :x2 212.58055114746094, :y2 639.4660797119141, :width 827, :height 1075.1000000000001} {:x1 259.9970397949219, :y1 612.0799102783203, :x2 740.5204467773438, :y2 639.4660797119141, :width 827, :height 1075.1000000000001} {:x1 216.6214141845703, :y1 615.3748321533203, :x2 740.5204467773438, :y2 636.3708648681641, :width 827, :height 1075.1000000000001} {:x1 88.60552978515625, :y1 635.7718048095703, :x2 576.937744140625, :y2 663.1579132080078, :width 827, :height 1075.1000000000001} {:x1 88.60552978515625, :y1 640.3361358642578, :x2 567.1884765625, :y2 659.5064239501953, :width 827, :height 1075.1000000000001}), :page 196}, :content {:text "If you forget theelsebranch in the example above, the compile-time error is:‘when’expression must be exhaustive, add necessary ‘else’ branch. "}, :properties {:color "red"}} {:id #uuid "62936c72-c5b1-487a-a70f-d23b80d2adfa", :page 196, :position {:bounding {:x1 88.60552978515625, :y1 717.0315551757812, :x2 738.5231323242188, :y2 768.1238098144531, :width 827, :height 1075.1000000000001}, :rects ({:x1 88.60552978515625, :y1 717.0315551757812, :x2 298.9713439941406, :y2 744.4176940917969, :width 827, :height 1075.1000000000001} {:x1 424.3423156738281, :y1 717.0315551757812, :x2 738.5231323242188, :y2 744.4176940917969, :width 827, :height 1075.1000000000001} {:x1 307.60894775390625, :y1 720.3407287597656, :x2 738.5231323242188, :y2 741.3367614746094, :width 827, :height 1075.1000000000001} {:x1 88.60552978515625, :y1 740.7376708984375, :x2 275.9663391113281, :y2 768.1238098144531, :width 827, :height 1075.1000000000001} {:x1 325.0248107910156, :y1 740.7376708984375, :x2 607.5631713867188, :y2 768.1238098144531, :width 827, :height 1075.1000000000001} {:x1 671.2168579101562, :y1 740.7376708984375, :x2 675.5244750976562, :y2 768.1238098144531, :width 827, :height 1075.1000000000001} {:x1 88.60552978515625, :y1 745.3020324707031, :x2 671.2232055664062, :y2 764.4723205566406, :width 827, :height 1075.1000000000001}), :page 196}, :content {:text "In the following example,Coordinatesreports changes to its properties usingProperty Accessors. Thewhenexpression processes each item frominputs:"}, :properties {:color "red"}} {:id #uuid "62936ce2-52f5-4f49-a5d2-44380b7398b6", :page 198, :position {:bounding {:x1 129.47076416015625, :y1 242.9092254638672, :x2 524.4974822998047, :y2 270.2953643798828, :width 827, :height 1075.1000000000001}, :rects ({:x1 129.47076416015625, :y1 242.9092254638672, :x2 153.26683044433594, :y2 270.2953643798828, :width 827, :height 1075.1000000000001} {:x1 212.1569061279297, :y1 242.9092254638672, :x2 524.4974822998047, :y2 270.2953643798828, :width 827, :height 1075.1000000000001} {:x1 158.1691436767578, :y1 246.2041473388672, :x2 207.25746154785156, :y2 267.2001495361328, :width 827, :height 1075.1000000000001}), :page 198}, :content {:text "[1]inputis matched against the different options."}, :properties {:color "yellow"}} {:id #uuid "62936ced-ceaf-42d7-a564-026d99179dc7", :page 198, :position {:bounding {:x1 129.47076416015625, :y1 268.51239013671875, :x2 738.9745941162109, :y2 319.60467529296875, :width 827, :height 1075.1000000000001}, :rects ({:x1 129.47076416015625, :y1 268.51239013671875, :x2 738.9745941162109, :y2 295.8985595703125, :width 827, :height 1075.1000000000001} {:x1 159.2246551513672, :y1 273.0767822265625, :x2 738.9745941162109, :y2 292.2470703125, :width 827, :height 1075.1000000000001} {:x1 129.47076416015625, :y1 292.218505859375, :x2 543.7284545898438, :y2 319.60467529296875, :width 827, :height 1075.1000000000001}), :page 198}, :content {:text "[2]You can list several values in one branch using commas. Here, if the userenters either “up” or “u” we interpret it as a move up."}, :properties {:color "red"}} {:id #uuid "62936cf9-081c-4b52-a5f3-433f27de540c", :page 198, :position {:bounding {:x1 129.47076416015625, :y1 317.8074035644531, :x2 607.3064727783203, :y2 345.1935729980469, :width 827, :height 1075.1000000000001}, :rects ({:x1 129.47076416015625, :y1 317.8074035644531, :x2 607.3064727783203, :y2 345.1935729980469, :width 827, :height 1075.1000000000001}), :page 198}, :content {:text "[3]Multiple actions within a branch must be in a block body."}, :properties {:color "yellow"}} {:id #uuid "62936e17-d7f7-4a33-b0e6-99ed196ab275", :page 198, :position {:bounding {:x1 129.47076416015625, :y1 343.41058349609375, :x2 554.1658477783203, :y2 370.7967529296875, :width 827, :height 1075.1000000000001}, :rects ({:x1 129.47076416015625, :y1 343.41058349609375, :x2 554.1658477783203, :y2 370.7967529296875, :width 827, :height 1075.1000000000001}), :page 198}, :content {:text "[4]“Doing nothing” is expressed with an empty block."}, :properties {:color "yellow"}} {:id #uuid "62936e1d-5edb-4206-b868-6983bdc709f9", :page 197, :position {:bounding {:x1 142.15110778808594, :y1 708.7301025390625, :x2 472.33489990234375, :y2 726.987548828125, :width 827, :height 1075.1000000000001}, :rects ({:x1 142.15110778808594, :y1 708.7301025390625, :x2 276.0055847167969, :y2 726.987548828125, :width 827, :height 1075.1000000000001} {:x1 418.7937927246094, :y1 708.7301025390625, :x2 472.33489990234375, :y2 726.987548828125, :width 827, :height 1075.1000000000001}), :page 197}, :content {:text "\"nowhere\"-> {}// [4]"}, :properties {:color "yellow"}} {:id #uuid "62936e25-2f53-4f75-b9cb-b68791baa046", :page 198, :position {:bounding {:x1 129.47076416015625, :y1 369.01377868652344, :x2 738.6460113525391, :y2 420.1060028076172, :width 827, :height 1075.1000000000001}, :rects ({:x1 129.47076416015625, :y1 369.01377868652344, :x2 738.6460113525391, :y2 396.39991760253906, :width 827, :height 1075.1000000000001} {:x1 158.12635803222656, :y1 373.57814025878906, :x2 738.6460113525391, :y2 392.74842834472656, :width 827, :height 1075.1000000000001} {:x1 129.47076416015625, :y1 392.7198944091797, :x2 195.5380859375, :y2 420.1060028076172, :width 827, :height 1075.1000000000001} {:x1 264.2048034667969, :y1 392.7198944091797, :x2 428.47589111328125, :y2 420.1060028076172, :width 827, :height 1075.1000000000001} {:x1 580.5430908203125, :y1 392.7198944091797, :x2 584.8507080078125, :y2 420.1060028076172, :width 827, :height 1075.1000000000001} {:x1 129.47076416015625, :y1 397.28428649902344, :x2 580.5388793945312, :y2 418.2803497314453, :width 827, :height 1075.1000000000001}), :page 198}, :content {:text "[5]Returning from the outer function is a valid action within a branch. In thiscase, thereturnterminates the call toprocessInputs()."}, :properties {:color "yellow"}} {:id #uuid "62936e68-cbbf-45b7-bb1d-49c12a6abcd9", :page 199, :position {:bounding {:x1 88.12056732177734, :y1 119.81430053710938, :x2 738.4208374023438, :y2 170.90655517578125, :width 827, :height 1075.1000000000001}, :rects ({:x1 135.54705810546875, :y1 119.81430053710938, :x2 491.18621826171875, :y2 147.200439453125, :width 827, :height 1075.1000000000001} {:x1 528.5950317382812, :y1 119.81430053710938, :x2 622.1827392578125, :y2 147.200439453125, :width 827, :height 1075.1000000000001} {:x1 677.7495727539062, :y1 119.81430053710938, :x2 738.4208374023438, :y2 147.200439453125, :width 827, :height 1075.1000000000001} {:x1 88.12056732177734, :y1 123.12347412109375, :x2 738.4208374023438, :y2 144.1195068359375, :width 827, :height 1075.1000000000001} {:x1 88.60552978515625, :y1 143.52041625976562, :x2 278.6598815917969, :y2 170.90655517578125, :width 827, :height 1075.1000000000001} {:x1 308.0083312988281, :y1 143.52041625976562, :x2 480.2819519042969, :y2 170.90655517578125, :width 827, :height 1075.1000000000001} {:x1 88.60552978515625, :y1 148.08477783203125, :x2 303.0986022949219, :y2 167.25506591796875, :width 827, :height 1075.1000000000001}), :page 199}, :content {:text "whenexpressions can overlap the functionality ofifexpressions.whenis moreflexible, so prefer it overifwhen there’s a choice."}, :properties {:color "yellow"}} {:id #uuid "62942662-72a1-4610-9ad3-9216f49f0ee9", :page 195, :position {:bounding {:x1 71.35416412353516, :y1 608.0859222412109, :x2 215.07229614257812, :y2 623.0858917236328, :width 666, :height 865.8000000000001}, :rects ({:x1 71.35416412353516, :y1 608.0859222412109, :x2 215.07229614257812, :y2 623.0858917236328, :width 666, :height 865.8000000000001}), :page 195}, :content {:text "valnumbers = mapOf("}, :properties {:color "red"}} {:id #uuid "629426ad-0bd1-446c-8c22-e5ea36d4d8f9", :page 199, :position {:bounding {:x1 100.09114074707031, :y1 275.78125, :x2 344.46173095703125, :y2 323.2291564941406, :width 666, :height 865.8000000000001}, :rects ({:x1 100.09114074707031, :y1 275.78125, :x2 330.0812072753906, :y2 290.78125, :width 666, :height 865.8000000000001} {:x1 100.09114074707031, :y1 292.00518798828125, :x2 344.4562072753906, :y2 307.00518798828125, :width 666, :height 865.8000000000001} {:x1 100.09114074707031, :y1 308.2291564941406, :x2 344.46173095703125, :y2 323.2291564941406, :width 666, :height 865.8000000000001}), :page 199}, :content {:text "setOf(\"red\",\"blue\") ->\"purple\"setOf(\"red\",\"yellow\") ->\"orange\"setOf(\"blue\",\"yellow\") ->\"green\""}, :properties {:color "yellow"}} {:id #uuid "629426b1-fb2b-4947-a2f9-801a76e8497e", :page 199, :position {:bounding {:x1 85.72916412353516, :y1 259.5572814941406, :x2 294.1379089355469, :y2 274.5572814941406, :width 666, :height 865.8000000000001}, :rects ({:x1 85.72916412353516, :y1 259.5572814941406, :x2 294.1379089355469, :y2 274.5572814941406, :width 666, :height 865.8000000000001}), :page 199}, :content {:text "when(setOf(first, second)) {"}, :properties {:color "yellow"}} {:id #uuid "629426c1-a7c9-4677-b26a-df29b21977c4", :page 199, :position {:bounding {:x1 70.96353912353516, :y1 535.2473754882812, :x2 380.1007385253906, :y2 556.9140625, :width 666, :height 865.8000000000001}, :rects ({:x1 106.953125, :y1 535.2473754882812, :x2 380.1007385253906, :y2 556.9140625, :width 666, :height 865.8000000000001} {:x1 70.96353912353516, :y1 537.3567504882812, :x2 102.58663940429688, :y2 554.0234375, :width 666, :height 865.8000000000001}), :page 199}, :content {:text "whenhas a special form that takes no argument. "}, :properties {:color "red"}} {:id #uuid "629426d8-7aa9-437d-befb-60256b1b2e45", :page 199, :position {:bounding {:x1 71.35416412353516, :y1 573.4244689941406, :x2 594.6815185546875, :y2 614.1796875, :width 666, :height 865.8000000000001}, :rects ({:x1 247.5692901611328, :y1 573.4244689941406, :x2 414.4052429199219, :y2 595.0911254882812, :width 666, :height 865.8000000000001} {:x1 509.8828125, :y1 573.4244689941406, :x2 594.6815185546875, :y2 595.0911254882812, :width 666, :height 865.8000000000001} {:x1 418.56768798828125, :y1 575.5338439941406, :x2 594.6815185546875, :y2 592.2005004882812, :width 666, :height 865.8000000000001} {:x1 71.35416412353516, :y1 592.5130004882812, :x2 457.90545654296875, :y2 614.1796875, :width 666, :height 865.8000000000001} {:x1 497.2135314941406, :y1 592.5130004882812, :x2 558.6060180664062, :y2 614.1796875, :width 666, :height 865.8000000000001} {:x1 579.609375, :y1 592.5130004882812, :x2 583.0728759765625, :y2 614.1796875, :width 666, :height 865.8000000000001} {:x1 71.35416412353516, :y1 595.8463439941406, :x2 579.6195068359375, :y2 610.8463439941406, :width 666, :height 865.8000000000001}), :page 199}, :content {:text "As an example, we rewritebmiMetric()introduced inNumber Types, first showing the original solution, then usingwheninstead ofif:"}, :properties {:color "yellow"}} {:id #uuid "62942e8f-6366-4c08-bb39-8ddf8828a750", :page 201, :position {:bounding {:x1 85.703125, :y1 406.65625, :x2 396.5193176269531, :y2 463.640625, :width 800, :height 1040}, :rects ({:x1 85.703125, :y1 406.65625, :x2 241.96875, :y2 424.65625, :width 800, :height 1040} {:x1 102.96875, :y1 426.15625, :x2 396.5193176269531, :y2 444.15625, :width 800, :height 1040} {:x1 85.703125, :y1 445.640625, :x2 95.203125, :y2 463.640625, :width 800, :height 1040}), :page 201}, :content {:text "enumclassLevel{Overflow, High, Medium, Low, Empty}"}, :properties {:color "yellow"}} {:id #uuid "629464e4-05e6-41d3-b052-a691390c42c4", :page 201, :position {:bounding {:x1 117.390625, :y1 869.203125, :x2 714.299560546875, :y2 918.125, :width 800, :height 1040}, :rects ({:x1 117.390625, :y1 869.203125, :x2 183.1946563720703, :y2 895.203125, :width 800, :height 1040} {:x1 205.0625, :y1 869.203125, :x2 452.8387145996094, :y2 895.203125, :width 800, :height 1040} {:x1 512.59375, :y1 869.203125, :x2 714.299560546875, :y2 895.203125, :width 800, :height 1040} {:x1 125.234375, :y1 873.203125, :x2 714.299560546875, :y2 891.203125, :width 800, :height 1040} {:x1 125.234375, :y1 892.125, :x2 250.8527069091797, :y2 918.125, :width 800, :height 1040} {:x1 303.03125, :y1 892.125, :x2 307.1875, :y2 918.125, :width 800, :height 1040} {:x1 125.234375, :y1 896.125, :x2 303.04412841796875, :y2 914.125, :width 800, :height 1040}), :page 201}, :content {:text "[1]The*imports all the names inside theLevelenumeration, but doesnotimport the nameLevel."}, :properties {:color "yellow"}} {:id #uuid "629464ec-e49c-4437-b7d2-2a31678cced7", :page 202, :position {:bounding {:x1 125.234375, :y1 470.078125, :x2 717.3400268554688, :y2 496.078125, :width 800, :height 1040}, :rects ({:x1 125.234375, :y1 470.078125, :x2 332.0501708984375, :y2 496.078125, :width 800, :height 1040} {:x1 380.171875, :y1 470.078125, :x2 455.42596435546875, :y2 496.078125, :width 800, :height 1040} {:x1 502.0625, :y1 470.078125, :x2 717.3400268554688, :y2 496.078125, :width 800, :height 1040} {:x1 152.609375, :y1 474.078125, :x2 497.732177734375, :y2 494.078125, :width 800, :height 1040}), :page 202}, :content {:text "[1]We import the values ofSizebefore theSizedefinition appears in the file."}, :properties {:color "yellow"}} {:id #uuid "629464f2-5c9b-4627-9cf9-49bf67510de2", :page 202, :position {:bounding {:x1 125.234375, :y1 494.90625, :x2 714.4842529296875, :y2 543.828125, :width 800, :height 1040}, :rects ({:x1 125.234375, :y1 494.90625, :x2 222.0375213623047, :y2 520.90625, :width 800, :height 1040} {:x1 284.203125, :y1 494.90625, :x2 714.4842529296875, :y2 520.90625, :width 800, :height 1040} {:x1 153.5, :y1 498.90625, :x2 714.4842529296875, :y2 516.90625, :width 800, :height 1040} {:x1 125.234375, :y1 517.828125, :x2 177.78125, :y2 543.828125, :width 800, :height 1040}), :page 202}, :content {:text "[2]After theimport, we no longer need to qualify access to the enumerationnames."}, :properties {:color "yellow"}} {:id #uuid "629464fc-ddfd-4fb1-bb96-93488c9bd6cd", :page 202, :position {:bounding {:x1 117.390625, :y1 542.65625, :x2 716.19873046875, :y2 591.578125, :width 800, :height 1040}, :rects ({:x1 117.390625, :y1 542.65625, :x2 552.3212890625, :y2 568.65625, :width 800, :height 1040} {:x1 632.046875, :y1 542.65625, :x2 636.203125, :y2 568.65625, :width 800, :height 1040} {:x1 125.234375, :y1 546.65625, :x2 716.19873046875, :y2 564.65625, :width 800, :height 1040} {:x1 125.234375, :y1 565.578125, :x2 202.40106201171875, :y2 591.578125, :width 800, :height 1040} {:x1 254.59375, :y1 565.578125, :x2 337.4107360839844, :y2 591.578125, :width 800, :height 1040} {:x1 422.828125, :y1 565.578125, :x2 547.7252807617188, :y2 591.578125, :width 800, :height 1040} {:x1 590.375, :y1 565.578125, :x2 594.53125, :y2 591.578125, :width 800, :height 1040} {:x1 125.234375, :y1 569.578125, :x2 590.388427734375, :y2 589.578125, :width 800, :height 1040}), :page 202}, :content {:text "[3]You can iterate through the enumeration names usingvalues().values()returns anArray, so we calltoList()to convert it to aList."}, :properties {:color "red"}} {:id #uuid "62946512-eae2-4bce-ae4b-bc51164b2799", :page 202, :position {:bounding {:x1 125.234375, :y1 590.40625, :x2 714.3566284179688, :y2 639.328125, :width 800, :height 1040}, :rects ({:x1 125.234375, :y1 590.40625, :x2 398.1355895996094, :y2 616.40625, :width 800, :height 1040} {:x1 445.953125, :y1 590.40625, :x2 494.7940368652344, :y2 616.40625, :width 800, :height 1040} {:x1 571.1875, :y1 590.40625, :x2 714.3566284179688, :y2 616.40625, :width 800, :height 1040} {:x1 153.234375, :y1 594.40625, :x2 714.3566284179688, :y2 614.40625, :width 800, :height 1040} {:x1 125.234375, :y1 613.328125, :x2 515.6880493164062, :y2 639.328125, :width 800, :height 1040}), :page 202}, :content {:text "[4]The first declared constant of anenumhas anordinalvalue of zero. Eachsubsequent constant receives the next integer value."}, :properties {:color "yellow"}} {:id #uuid "62946612-a055-4e80-baec-23d6b0fa4662", :page 203, :position {:bounding {:x1 89.98909759521484, :y1 389.01136779785156, :x2 753.6146087646484, :y2 440.4744415283203, :width 839.9999999999999, :height 1092}, :rects ({:x1 652.2129974365234, :y1 389.01136779785156, :x2 753.6146087646484, :y2 416.39747619628906, :width 839.9999999999999, :height 1092} {:x1 89.98909759521484, :y1 413.0883331298828, :x2 235.10887908935547, :y2 440.4744415283203, :width 839.9999999999999, :height 1092} {:x1 284.8870391845703, :y1 413.0883331298828, :x2 489.9492645263672, :y2 440.4744415283203, :width 839.9999999999999, :height 1092} {:x1 89.98909759521484, :y1 417.65272521972656, :x2 279.9053497314453, :y2 436.82301330566406, :width 839.9999999999999, :height 1092}), :page 203}, :content {:text "while behav-ing ordinarily (theelsecase) for all other options."}, :properties {:color "yellow"}} {:id #uuid "62946642-83d7-45f6-aa13-419cdf610528", :page 203, :position {:bounding {:x1 89.98909759521484, :y1 495.3608283996582, :x2 752.4636077880859, :y2 546.823902130127, :width 839.9999999999999, :height 1092}, :rects ({:x1 479.4381866455078, :y1 495.3608283996582, :x2 752.4636077880859, :y2 522.7469367980957, :width 839.9999999999999, :height 1092} {:x1 89.98909759521484, :y1 519.4377937316895, :x2 558.722770690918, :y2 546.823902130127, :width 839.9999999999999, :height 1092}), :page 203}, :content {:text "If you include additional elements,you must add a semicolon after the last enumeration value:"}, :properties {:color "yellow"}} {:id #uuid "62946652-0ac9-4c59-9d26-f795cc4ea563", :page 203, :position {:bounding {:x1 298.4586639404297, :y1 705.8346252441406, :x2 506.92137145996094, :y2 725.0049133300781, :width 839.9999999999999, :height 1092}, :rects ({:x1 298.4586639404297, :y1 705.8346252441406, :x2 298.4716339111328, :y2 725.0049133300781, :width 839.9999999999999, :height 1092} {:x1 316.5950469970703, :y1 705.8346252441406, :x2 506.92137145996094, :y2 725.0049133300781, :width 839.9999999999999, :height 1092}), :page 203}, :content {:text "// Semicolon required"}, :properties {:color "blue"}} {:id #uuid "62946654-ea72-4669-81f4-1155e1ad75fd", :page 203, :position {:bounding {:x1 289.39781188964844, :y1 705.8346252441406, :x2 298.4716339111328, :y2 725.0049133300781, :width 839.9999999999999, :height 1092}, :rects ({:x1 289.39781188964844, :y1 705.8346252441406, :x2 298.4716339111328, :y2 725.0049133300781, :width 839.9999999999999, :height 1092}), :page 203}, :content {:text ";"}, :properties {:color "red"}} {:id #uuid "6294668e-1303-437a-8657-f6b4fb7f8d58", :page 204, :position {:bounding {:x1 89.98909759521484, :y1 327.292724609375, :x2 750.1702117919922, :y2 378.755859375, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98909759521484, :y1 327.292724609375, :x2 176.84815979003906, :y2 354.67889404296875, :width 839.9999999999999, :height 1092} {:x1 224.42359924316406, :y1 327.292724609375, :x2 365.59568786621094, :y2 354.67889404296875, :width 839.9999999999999, :height 1092} {:x1 413.14540100097656, :y1 327.292724609375, :x2 750.1702117919922, :y2 354.67889404296875, :width 839.9999999999999, :height 1092} {:x1 180.66285705566406, :y1 330.6019287109375, :x2 750.1702117919922, :y2 351.597900390625, :width 839.9999999999999, :height 1092} {:x1 134.86241149902344, :y1 351.36968994140625, :x2 288.3292694091797, :y2 378.755859375, :width 839.9999999999999, :height 1092} {:x1 89.98909759521484, :y1 354.67889404296875, :x2 129.88072204589844, :y2 375.6749267578125, :width 839.9999999999999, :height 1092}), :page 204}, :content {:text "Notice thatwhendoesn’t require anelsebranch in this example, because all possibleenumentries are covered."}, :properties {:color "red"}} {:id #uuid "6296d443-4ef9-4d2d-b6df-638d5dbea031", :page 209, :position {:bounding {:x1 121.015625, :y1 240.71875, :x2 652.213623046875, :y2 287.875, :width 772.9999999999999, :height 1004.9}, :rects ({:x1 121.015625, :y1 240.71875, :x2 652.213623046875, :y2 265.71875, :width 772.9999999999999, :height 1004.9} {:x1 121.015625, :y1 262.875, :x2 520.1192016601562, :y2 287.875, :width 772.9999999999999, :height 1004.9}), :page 209}, :content {:text "Suppose you want to return more than one item from a function, such asa result along with some information about that result."}, :properties {:color "red"}} {:id #uuid "6296d455-80aa-4ff0-a34b-cc3636b1b478", :page 209, :position {:bounding {:x1 82.296875, :y1 311.328125, :x2 688.5957641601562, :y2 336.328125, :width 772.9999999999999, :height 1004.9}, :rects ({:x1 82.296875, :y1 311.328125, :x2 110.06450653076172, :y2 336.328125, :width 772.9999999999999, :height 1004.9} {:x1 154.28125, :y1 311.328125, :x2 688.5957641601562, :y2 336.328125, :width 772.9999999999999, :height 1004.9} {:x1 113.8125, :y1 313.84375, :x2 150.5229949951172, :y2 333.84375, :width 772.9999999999999, :height 1004.9}), :page 209}, :content {:text "ThePairclass, which is part of the standard library, allows you to return two values"}, :properties {:color "red"}} {:id #uuid "6296d567-e7f8-4aa4-897e-63e5d93ce8b2", :page 209, :position {:bounding {:x1 82.8125, :y1 744.203125, :x2 690.9495849609375, :y2 791.359375, :width 772.9999999999999, :height 1004.9}, :rects ({:x1 82.8125, :y1 744.203125, :x2 690.9495849609375, :y2 769.203125, :width 772.9999999999999, :height 1004.9} {:x1 82.8125, :y1 766.359375, :x2 163.74327087402344, :y2 791.359375, :width 772.9999999999999, :height 1004.9}), :page 209}, :content {:text "Returning multiple values is helpful, but we’d also like a convenient way to unpackthe results. "}, :properties {:color "yellow"}} {:id #uuid "6296d574-54c7-4fe6-bbbc-4fd77fe0cfd1", :page 209, :position {:bounding {:x1 82.8125, :y1 788.515625, :x2 690.4420776367188, :y2 835.671875, :width 772.9999999999999, :height 1004.9}, :rects ({:x1 259.48736572265625, :y1 788.515625, :x2 690.4420776367188, :y2 813.515625, :width 772.9999999999999, :height 1004.9} {:x1 82.8125, :y1 810.671875, :x2 442.640625, :y2 835.671875, :width 772.9999999999999, :height 1004.9} {:x1 82.8125, :y1 814.671875, :x2 438.5957946777344, :y2 832.671875, :width 772.9999999999999, :height 1004.9}), :page 209}, :content {:text " but you can also declare and initialize several identifierssimultaneously using adestructuring declaration:"}, :properties {:color "red"}} {:id #uuid "6296d577-2758-4a19-80ca-5ee4247aa7b9", :page 209, :position {:bounding {:x1 82.8125, :y1 851.640625, :x2 324.7413635253906, :y2 869.640625, :width 772.9999999999999, :height 1004.9}, :rects ({:x1 82.8125, :y1 851.640625, :x2 324.7413635253906, :y2 869.640625, :width 772.9999999999999, :height 1004.9}), :page 209}, :content {:text "val(a, b, c) = composedValue"}, :properties {:color "red"}} {:id #uuid "6296d595-3b64-4dbb-9f7a-04b71e85d310", :page 210, :position {:bounding {:x1 82.8125, :y1 492.59375, :x2 525.0955810546875, :y2 517.59375, :width 772.9999999999999, :height 1004.9}, :rects ({:x1 124.09375, :y1 492.59375, :x2 525.0955810546875, :y2 517.59375, :width 772.9999999999999, :height 1004.9} {:x1 82.8125, :y1 495.125, :x2 176.90223693847656, :y2 515.125, :width 772.9999999999999, :height 1004.9}), :page 210}, :content {:text "dataClassesautomatically allow destructuring declarations:"}, :properties {:color "red"}} {:id #uuid "6296d5a5-3224-41e9-8b06-563fe3f64712", :page 210, :position {:bounding {:x1 82.8125, :y1 438.796875, :x2 692.1990966796875, :y2 485.953125, :width 772.9999999999999, :height 1004.9}, :rects ({:x1 82.8125, :y1 438.796875, :x2 558.0467529296875, :y2 463.796875, :width 772.9999999999999, :height 1004.9} {:x1 597.78125, :y1 438.796875, :x2 623.1411743164062, :y2 463.796875, :width 772.9999999999999, :height 1004.9} {:x1 681.453125, :y1 438.796875, :x2 692.1990966796875, :y2 463.796875, :width 772.9999999999999, :height 1004.9} {:x1 561.078125, :y1 441.328125, :x2 692.1990966796875, :y2 461.328125, :width 772.9999999999999, :height 1004.9} {:x1 82.8125, :y1 460.953125, :x2 375.5406494140625, :y2 485.953125, :width 772.9999999999999, :height 1004.9}), :page 210}, :content {:text "if you need to store more values, or if you find yourself using manyPairs orTriples,consider creating special classes instead."}, :properties {:color "yellow"}} {:id #uuid "6296d5bb-8bcf-4bbf-ac2f-a3accc5fe3b4", :page 211, :position {:bounding {:x1 82.8125, :y1 112.265625, :x2 690.934814453125, :y2 181.578125, :width 772.9999999999999, :height 1004.9}, :rects ({:x1 82.8125, :y1 112.265625, :x2 242.46751403808594, :y2 137.265625, :width 772.9999999999999, :height 1004.9} {:x1 353.1875, :y1 112.265625, :x2 437.9729309082031, :y2 137.265625, :width 772.9999999999999, :height 1004.9} {:x1 598.859375, :y1 112.265625, :x2 690.213623046875, :y2 137.265625, :width 772.9999999999999, :height 1004.9} {:x1 247.328125, :y1 114.78125, :x2 690.213623046875, :y2 134.78125, :width 772.9999999999999, :height 1004.9} {:x1 82.8125, :y1 134.421875, :x2 690.934814453125, :y2 159.421875, :width 772.9999999999999, :height 1004.9} {:x1 82.8125, :y1 138.421875, :x2 690.934814453125, :y2 156.421875, :width 772.9999999999999, :height 1004.9} {:x1 82.8125, :y1 156.578125, :x2 302.6121520996094, :y2 181.578125, :width 772.9999999999999, :height 1004.9}), :page 211}, :content {:text "It’s clearer to return aComputationinstead of aPair<Int, String>. Choosing agood name for the result is almost as important as choosing a good self-explanatoryname for the function itself."}, :properties {:color "yellow"}} {:id #uuid "62972e39-727f-492f-962b-3e1005f149cb", :page 211, :position {:bounding {:x1 81.96875, :y1 209.59375, :x2 691.012939453125, :y2 256.75, :width 772.9999999999999, :height 1004.9}, :rects ({:x1 81.96875, :y1 209.59375, :x2 341.6144714355469, :y2 234.59375, :width 772.9999999999999, :height 1004.9} {:x1 389.75, :y1 209.59375, :x2 691.012939453125, :y2 234.59375, :width 772.9999999999999, :height 1004.9} {:x1 347.265625, :y1 212.109375, :x2 691.012939453125, :y2 232.109375, :width 772.9999999999999, :height 1004.9} {:x1 82.8125, :y1 231.75, :x2 563.9869384765625, :y2 256.75, :width 772.9999999999999, :height 1004.9}), :page 211}, :content {:text "When you unpack an instance of adataclass, you must assign values to the newidentifiers in the same order you define the properties in the class:"}, :properties {:color "yellow"}} {:id #uuid "62972e5b-715b-4d41-861e-f127fa4580ec", :page 211, :position {:bounding {:x1 99.5, :y1 512.03125, :x2 399.8002014160156, :y2 548.875, :width 772.9999999999999, :height 1004.9}, :rects ({:x1 99.5, :y1 512.03125, :x2 249.65135192871094, :y2 530.03125, :width 772.9999999999999, :height 1004.9} {:x1 116.171875, :y1 530.875, :x2 399.8002014160156, :y2 548.875, :width 772.9999999999999, :height 1004.9}), :page 211}, :content {:text "valtuple = Tuple(1,3.14,\"Mouse\",false, listOf())"}, :properties {:color "blue"}} {:id #uuid "62972e5e-dc13-47a4-8ef7-13c2e1b64d45", :page 211, :position {:bounding {:x1 99.5, :y1 549.703125, :x2 324.7420959472656, :y2 567.703125, :width 772.9999999999999, :height 1004.9}, :rects ({:x1 99.5, :y1 549.703125, :x2 324.7420959472656, :y2 567.703125, :width 772.9999999999999, :height 1004.9}), :page 211}, :content {:text "val(i, d, s, b, l) = tuple"}, :properties {:color "blue"}} {:id #uuid "62972e62-11b8-491f-9b9e-0c6aac17ea3f", :page 211, :position {:bounding {:x1 99.5, :y1 681.53125, :x2 391.43560791015625, :y2 699.53125, :width 772.9999999999999, :height 1004.9}, :rects ({:x1 99.5, :y1 681.53125, :x2 316.3916015625, :y2 699.53125, :width 772.9999999999999, :height 1004.9} {:x1 341.390625, :y1 681.53125, :x2 391.43560791015625, :y2 699.53125, :width 772.9999999999999, :height 1004.9}), :page 211}, :content {:text "val(_, _, animal) = tuple// [1]"}, :properties {:color "red"}} {:id #uuid "62972e6e-af12-4774-96a8-604dad4337ba", :page 211, :position {:bounding {:x1 121.015625, :y1 749.578125, :x2 690.4384155273438, :y2 796.734375, :width 772.9999999999999, :height 1004.9}, :rects ({:x1 147.921875, :y1 749.578125, :x2 690.4384155273438, :y2 774.578125, :width 772.9999999999999, :height 1004.9} {:x1 121.015625, :y1 771.734375, :x2 616.4918212890625, :y2 796.734375, :width 772.9999999999999, :height 1004.9}), :page 211}, :content {:text "If you don’t need some of the identifiers, you may use underscores insteadof their names, or omit them completely if they appear at the end."}, :properties {:color "red"}} {:id #uuid "629822f9-7fe6-4f9c-974b-b1aa4b3849f5", :page 515, :position {:bounding {:x1 81.11713963747025, :y1 611.9943389892578, :x2 663.3134134411812, :y2 637.5547332763672, :width 765, :height 994.5}, :rects ({:x1 81.11713963747025, :y1 611.9943389892578, :x2 260.87267857789993, :y2 637.5547332763672, :width 765, :height 994.5} {:x1 297.4247415661812, :y1 611.9943389892578, :x2 461.8914468884468, :y2 637.5547332763672, :width 765, :height 994.5} {:x1 480.3269937634468, :y1 611.9943389892578, :x2 663.3134134411812, :y2 637.5547332763672, :width 765, :height 994.5} {:x1 265.47427159547806, :y1 615.2606964111328, :x2 476.53286534547806, :y2 634.4309844970703, :width 765, :height 994.5}), :page 515}, :content {:text "We’ll create a small classNumand add an overloaded+as an extension function. "}, :properties {:color "yellow"}} {:id #uuid "62982302-f83f-4ec8-ad2b-be5c7ed9ca13", :page 515, :position {:bounding {:x1 81.95869237184525, :y1 611.9943389892578, :x2 683.3198373913765, :y2 703.3384857177734, :width 765, :height 994.5}, :rects ({:x1 663.2996194958687, :y1 611.9943389892578, :x2 683.1253030896187, :y2 637.5547332763672, :width 765, :height 994.5} {:x1 81.95869237184525, :y1 633.9317779541016, :x2 326.3260172009468, :y2 659.4921722412109, :width 765, :height 994.5} {:x1 410.7491129040718, :y1 633.9317779541016, :x2 524.9227274060249, :y2 659.4921722412109, :width 765, :height 994.5} {:x1 558.0350931286812, :y1 633.9317779541016, :x2 683.0617044568062, :y2 659.4921722412109, :width 765, :height 994.5} {:x1 81.95869237184525, :y1 638.4961395263672, :x2 683.0617044568062, :y2 657.6664276123047, :width 765, :height 994.5} {:x1 81.95869237184525, :y1 655.8549346923828, :x2 683.3198373913765, :y2 681.4153289794922, :width 765, :height 994.5} {:x1 81.95869237184525, :y1 660.4192962646484, :x2 683.3198373913765, :y2 677.7638397216797, :width 765, :height 994.5} {:x1 81.95869237184525, :y1 677.7780914306641, :x2 174.127088367939, :y2 703.3384857177734, :width 765, :height 994.5} {:x1 192.23063451051712, :y1 677.7780914306641, :x2 269.13842564821243, :y2 703.3384857177734, :width 765, :height 994.5} {:x1 328.13430577516556, :y1 677.7780914306641, :x2 332.1138284802437, :y2 703.3384857177734, :width 765, :height 994.5} {:x1 81.95869237184525, :y1 682.3424530029297, :x2 328.15478307008743, :y2 701.5127410888672, :width 765, :height 994.5}), :page 515}, :content {:text "Tooverload an operator you use theoperatorkeyword beforefun, followed by thespecial predefined function name for that operator. For example, the special functionname for the+operator isplus():"}, :properties {:color "yellow"}} {:id #uuid "62982306-5069-46e1-b6cd-0847d2f0a6f2", :page 516, :position {:bounding {:x1 81.95869237184525, :y1 227.70423889160156, :x2 362.62490636110306, :y2 262.76417541503906, :width 765, :height 994.5}, :rects ({:x1 81.95869237184525, :y1 227.70423889160156, :x2 362.62490636110306, :y2 244.1359100341797, :width 765, :height 994.5} {:x1 98.4616830945015, :y1 246.33250427246094, :x2 222.2823160290718, :y2 262.76417541503906, :width 765, :height 994.5}), :page 516}, :content {:text "operatorfunNum.plus(rval: Num) =Num(n + rval.n)"}, :properties {:color "yellow"}} {:id #uuid "62982718-65f5-4327-bfb8-01fe2b10f813", :page 222, :position {:bounding {:x1 81.95869237184525, :y1 329.4180145263672, :x2 683.0405252575874, :y2 376.91583251953125, :width 765, :height 994.5}, :rects ({:x1 350.8163736462593, :y1 329.4180145263672, :x2 597.7191141247749, :y2 354.9783935546875, :width 765, :height 994.5} {:x1 643.8592508435249, :y1 329.4180145263672, :x2 683.0405252575874, :y2 354.9783935546875, :width 765, :height 994.5} {:x1 602.4948099255562, :y1 332.68438720703125, :x2 683.0405252575874, :y2 351.85467529296875, :width 765, :height 994.5} {:x1 81.95869237184525, :y1 351.3554382324219, :x2 186.85949498414993, :y2 376.91583251953125, :width 765, :height 994.5} {:x1 227.6471841931343, :y1 351.3554382324219, :x2 412.44399815797806, :y2 376.91583251953125, :width 765, :height 994.5} {:x1 81.95869237184525, :y1 355.9197998046875, :x2 227.67899876832962, :y2 373.26434326171875, :width 765, :height 994.5}), :page 222}, :content {:text " believing that something can’t benullis thesource of mostnull-related program failures "}, :properties {:color "yellow"}} {:id #uuid "62982723-3485-40c9-bf48-6e784ff737bc", :page 222, :position {:bounding {:x1 81.50225621461868, :y1 404.58721923828125, :x2 644.1620462536812, :y2 430.1476135253906, :width 765, :height 994.5}, :rects ({:x1 112.72529393434525, :y1 404.58721923828125, :x2 302.2940347790718, :y2 430.1476135253906, :width 765, :height 994.5} {:x1 319.23379307985306, :y1 404.58721923828125, :x2 382.52480870485306, :y2 430.1476135253906, :width 765, :height 994.5} {:x1 422.78759557008743, :y1 404.58721923828125, :x2 602.5305154919624, :y2 430.1476135253906, :width 765, :height 994.5} {:x1 81.50225621461868, :y1 407.85357666015625, :x2 644.1620462536812, :y2 427.02386474609375, :width 765, :height 994.5}), :page 222}, :content {:text "x!!means “forget the fact thatxmight benull—I guarantee that it’snotnull"}, :properties {:color "yellow"}} {:id #uuid "62982733-08a1-4161-8943-8d8e30556f3e", :page 222, :position {:bounding {:x1 81.95869237184525, :y1 404.58721923828125, :x2 683.9567239880562, :y2 452.0707702636719, :width 765, :height 994.5}, :rects ({:x1 647.1179178357124, :y1 404.58721923828125, :x2 652.7331522107124, :y2 430.1476135253906, :width 765, :height 994.5} {:x1 656.6964700818062, :y1 407.85357666015625, :x2 683.9567239880562, :y2 427.02386474609375, :width 765, :height 994.5} {:x1 81.95869237184525, :y1 426.5103759765625, :x2 146.52819615602493, :y2 452.0707702636719, :width 765, :height 994.5} {:x1 164.64481908082962, :y1 426.5103759765625, :x2 175.08921605348587, :y2 452.0707702636719, :width 765, :height 994.5} {:x1 194.69824010133743, :y1 426.5103759765625, :x2 226.02557164430618, :y2 452.0707702636719, :width 765, :height 994.5} {:x1 266.8435648083687, :y1 426.5103759765625, :x2 515.2505472302437, :y2 452.0707702636719, :width 765, :height 994.5} {:x1 81.95869237184525, :y1 431.0747375488281, :x2 266.87539464235306, :y2 450.2450256347656, :width 765, :height 994.5}), :page 222}, :content {:text "”x!!producesxifxisn’tnull, otherwise it throws an exception:"}, :properties {:color "red"}} {:id #uuid "629c474b-2003-4b91-a1eb-d5030c93d0f5", :page 222, :position {:bounding {:x1 89.43282318115234, :y1 757.9395751953125, :x2 750.220832824707, :y2 833.4796447753906, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.43282318115234, :y1 757.9395751953125, :x2 201.61759185791016, :y2 785.32568359375, :width 839.9999999999999, :height 1092} {:x1 400.79309844970703, :y1 757.9395751953125, :x2 750.1613845825195, :y2 785.32568359375, :width 839.9999999999999, :height 1092} {:x1 206.45145416259766, :y1 761.2487182617188, :x2 750.1613845825195, :y2 782.2447509765625, :width 839.9999999999999, :height 1092} {:x1 89.98909759521484, :y1 782.0165405273438, :x2 134.7287368774414, :y2 809.4026794433594, :width 839.9999999999999, :height 1092} {:x1 153.43363189697266, :y1 782.0165405273438, :x2 305.2406997680664, :y2 809.4026794433594, :width 839.9999999999999, :height 1092} {:x1 319.51908111572266, :y1 782.0165405273438, :x2 750.220832824707, :y2 809.4026794433594, :width 839.9999999999999, :height 1092} {:x1 89.98909759521484, :y1 786.5809020996094, :x2 750.220832824707, :y2 807.5769348144531, :width 839.9999999999999, :height 1092} {:x1 89.98909759521484, :y1 806.093505859375, :x2 335.16751861572266, :y2 833.4796447753906, :width 839.9999999999999, :height 1092} {:x1 544.427619934082, :y1 806.093505859375, :x2 588.3917922973633, :y2 833.4796447753906, :width 839.9999999999999, :height 1092} {:x1 608.3000564575195, :y1 806.093505859375, :x2 620.9209671020508, :y2 833.4796447753906, :width 839.9999999999999, :height 1092} {:x1 665.7681350708008, :y1 806.093505859375, :x2 670.1328201293945, :y2 833.4796447753906, :width 839.9999999999999, :height 1092} {:x1 89.98909759521484, :y1 810.6578674316406, :x2 665.7644729614258, :y2 831.6539001464844, :width 839.9999999999999, :height 1092}), :page 222}, :content {:text "The definitionval s: String = x!!tells Kotlin to ignore what it thinks it knowsaboutxand just assign it tos, which is a non-nullable reference. Fortunately, there’srun-time support that throws aNullPointerExceptionwhenxisnull."}, :properties {:color "yellow"}} {:id #uuid "629c478e-969d-49b5-b2f2-c740ab19c989", :page 223, :position {:bounding {:x1 89.43282318115234, :y1 347.0906066894531, :x2 750.2251663208008, :y2 398.5537414550781, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.43282318115234, :y1 347.0906066894531, :x2 193.06896209716797, :y2 374.4767761230469, :width 839.9999999999999, :height 1092} {:x1 227.88965606689453, :y1 347.0906066894531, :x2 750.2251663208008, :y2 374.4767761230469, :width 839.9999999999999, :height 1092} {:x1 200.47501373291016, :y1 350.3997497558594, :x2 750.2251663208008, :y2 371.3957824707031, :width 839.9999999999999, :height 1092} {:x1 89.98909759521484, :y1 371.1675720214844, :x2 359.0267562866211, :y2 398.5537414550781, :width 839.9999999999999, :height 1092} {:x1 378.8842239379883, :y1 371.1675720214844, :x2 566.632453918457, :y2 398.5537414550781, :width 839.9999999999999, :height 1092} {:x1 89.98909759521484, :y1 375.7319641113281, :x2 552.1585159301758, :y2 396.7279357910156, :width 839.9999999999999, :height 1092}), :page 223}, :content {:text "The safe call?.is a single operator, but a non-null asserted call consists of twooperators: the non-null assertion (!!) and a dereference (.). "}, :properties {:color "yellow"}} {:id #uuid "629c47fd-7fc3-4d36-a893-d4e132e814e3", :page 222, :position {:bounding {:x1 576.8364334106445, :y1 840.4687805175781, :x2 678.531623840332, :y2 867.8549499511719, :width 839.9999999999999, :height 1092}, :rects ({:x1 576.8364334106445, :y1 840.4687805175781, :x2 678.531623840332, :y2 867.8549499511719, :width 839.9999999999999, :height 1092}), :page 222}, :content {:text "conjunction"}, :properties {:color "blue"}} {:id #uuid "629c6c79-9cb8-4617-94ec-64af69039124", :page 223, :position {:bounding {:x1 108.11814498901367, :y1 779.9483032226562, :x2 389.1259956359863, :y2 799.1185913085938, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814498901367, :y1 779.9483032226562, :x2 389.1259956359863, :y2 799.1185913085938, :width 839.9999999999999, :height 1092}), :page 223}, :content {:text "map[1]!!.toUpperCase() eq\"ONE\""}, :properties {:color "yellow"}} {:id #uuid "629c6c93-e3a2-4a03-b399-532c6f96cc26", :page 225, :position {:bounding {:x1 89.98910140991211, :y1 314.01332092285156, :x2 667.7607307434082, :y2 341.3994598388672, :width 839.9999999999999, :height 1092}, :rects ({:x1 154.54619216918945, :y1 314.01332092285156, :x2 247.63771438598633, :y2 341.3994598388672, :width 839.9999999999999, :height 1092} {:x1 267.0004768371582, :y1 314.01332092285156, :x2 613.3238410949707, :y2 341.3994598388672, :width 839.9999999999999, :height 1092} {:x1 89.98910140991211, :y1 317.3224639892578, :x2 667.7607307434082, :y2 338.31849670410156, :width 839.9999999999999, :height 1092}), :page 225}, :content {:text "s?.f()implies thatsis nullable—otherwise you could simply calls.f()"}, :properties {:color "yellow"}} {:id #uuid "629c6c9b-f3b3-411e-8ef6-764d33a5918c", :page 225, :position {:bounding {:x1 89.98910140991211, :y1 338.0902862548828, :x2 750.185718536377, :y2 389.5533905029297, :width 839.9999999999999, :height 1092}, :rects ({:x1 146.1734504699707, :y1 338.0902862548828, :x2 305.4268989562988, :y2 365.47642517089844, :width 839.9999999999999, :height 1092} {:x1 327.9916572570801, :y1 338.0902862548828, :x2 750.185718536377, :y2 365.47642517089844, :width 839.9999999999999, :height 1092} {:x1 89.98910140991211, :y1 341.3994598388672, :x2 750.185718536377, :y2 362.3954620361328, :width 839.9999999999999, :height 1092} {:x1 89.98910140991211, :y1 362.16725158691406, :x2 310.6408042907715, :y2 389.5533905029297, :width 839.9999999999999, :height 1092}), :page 225}, :content {:text "t.f()seems to imply thattis non-nullable because Kotlin doesn’t require a safecall or programmatic check."}, :properties {:color "yellow"}} {:id #uuid "629c6ca9-5896-43ff-8ce1-1a102ae0daa7", :page 225, :position {:bounding {:x1 89.43281936645508, :y1 396.55682373046875, :x2 750.2259407043457, :y2 537.8806304931641, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.43281936645508, :y1 396.55682373046875, :x2 377.9637031555176, :y2 423.9429473876953, :width 839.9999999999999, :height 1092} {:x1 447.6062812805176, :y1 396.55682373046875, :x2 690.7009162902832, :y2 423.9429473876953, :width 839.9999999999999, :height 1092} {:x1 382.80669021606445, :y1 399.86598205566406, :x2 690.7009162902832, :y2 420.8620147705078, :width 839.9999999999999, :height 1092} {:x1 116.21986770629883, :y1 435.92437744140625, :x2 123.28035354614258, :y2 463.3105010986328, :width 839.9999999999999, :height 1092} {:x1 281.06438064575195, :y1 435.92437744140625, :x2 497.8448371887207, :y2 463.3105010986328, :width 839.9999999999999, :height 1092} {:x1 567.5061531066895, :y1 435.92437744140625, :x2 580.1270637512207, :y2 463.3105010986328, :width 839.9999999999999, :height 1092} {:x1 629.9521980285645, :y1 435.92437744140625, :x2 704.8132820129395, :y2 463.3105010986328, :width 839.9999999999999, :height 1092} {:x1 116.21986770629883, :y1 440.4887390136719, :x2 704.8132820129395, :y2 461.4847717285156, :width 839.9999999999999, :height 1092} {:x1 116.21986770629883, :y1 462.34059143066406, :x2 123.28035354614258, :y2 489.72669982910156, :width 839.9999999999999, :height 1092} {:x1 281.06438064575195, :y1 462.34059143066406, :x2 505.5606575012207, :y2 489.72669982910156, :width 839.9999999999999, :height 1092} {:x1 663.7141609191895, :y1 462.34059143066406, :x2 750.0239143371582, :y2 489.72669982910156, :width 839.9999999999999, :height 1092} {:x1 116.21986770629883, :y1 466.90492248535156, :x2 750.0239143371582, :y2 487.9009552001953, :width 839.9999999999999, :height 1092} {:x1 131.51045608520508, :y1 486.4175567626953, :x2 225.3008918762207, :y2 513.8036651611328, :width 839.9999999999999, :height 1092} {:x1 297.0110969543457, :y1 486.4175567626953, :x2 750.2259407043457, :y2 513.8036651611328, :width 839.9999999999999, :height 1092} {:x1 131.51045608520508, :y1 490.9818878173828, :x2 750.2259407043457, :y2 510.1521759033203, :width 839.9999999999999, :height 1092} {:x1 130.9256477355957, :y1 510.49452209472656, :x2 136.74521255493164, :y2 537.8806304931641, :width 839.9999999999999, :height 1092} {:x1 156.7427864074707, :y1 510.49452209472656, :x2 283.0450019836426, :y2 537.8806304931641, :width 839.9999999999999, :height 1092} {:x1 302.94475173950195, :y1 510.49452209472656, :x2 313.2113838195801, :y2 537.8806304931641, :width 839.9999999999999, :height 1092} {:x1 130.9256477355957, :y1 515.0588836669922, :x2 302.9565315246582, :y2 536.0549163818359, :width 839.9999999999999, :height 1092}), :page 225}, :content {:text "The Kotlin standard library providesStringextension functions, including:•isNullOrEmpty(): Tests whether the receiverStringisnullor empty.•isNullOrBlank(): Performs the same check asisNullOrEmpty()andallowsthe receiverStringto consist solely of whitespace characters, including tabs(\\t) and newlines (\\n)."}, :properties {:color "red"}} {:id #uuid "629c6ce8-3fb0-48a2-b6ed-e21cb325a048", :page 226, :position {:bounding {:x1 89.07622909545898, :y1 180.23495483398438, :x2 753.5378913879395, :y2 231.69802856445312, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.07622909545898, :y1 180.23495483398438, :x2 212.5101661682129, :y2 207.62106323242188, :width 839.9999999999999, :height 1092} {:x1 374.87614822387695, :y1 180.23495483398438, :x2 753.5378913879395, :y2 207.62106323242188, :width 839.9999999999999, :height 1092} {:x1 218.8893165588379, :y1 183.54409790039062, :x2 753.5378913879395, :y2 204.54013061523438, :width 839.9999999999999, :height 1092} {:x1 89.98910140991211, :y1 204.31192016601562, :x2 127.54645156860352, :y2 231.69802856445312, :width 839.9999999999999, :height 1092} {:x1 217.26326370239258, :y1 204.31192016601562, :x2 337.4654426574707, :y2 231.69802856445312, :width 839.9999999999999, :height 1092} {:x1 89.98910140991211, :y1 208.87628173828125, :x2 212.26092910766602, :y2 228.04656982421875, :width 839.9999999999999, :height 1092}), :page 226}, :content {:text "We can rewriteisNullOrEmpty()as a non-extension function that takes the nul-lableString sas a parameter:"}, :properties {:color "yellow"}} {:id #uuid "629c6cfb-aa2e-4fb1-9051-c7f4c679f45d", :page 226, :position {:bounding {:x1 89.98910140991211, :y1 493.4637756347656, :x2 750.3647956848145, :y2 593.080810546875, :width 839.9999999999999, :height 1092}, :rects ({:x1 583.4211921691895, :y1 493.4637756347656, :x2 704.1169929504395, :y2 520.8498840332031, :width 839.9999999999999, :height 1092} {:x1 710.113697052002, :y1 496.7729187011719, :x2 749.9870491027832, :y2 517.7689514160156, :width 839.9999999999999, :height 1092} {:x1 286.7127876281738, :y1 517.5407409667969, :x2 750.1453742980957, :y2 544.9268798828125, :width 839.9999999999999, :height 1092} {:x1 89.98910140991211, :y1 520.8498840332031, :x2 750.1453742980957, :y2 541.8459167480469, :width 839.9999999999999, :height 1092} {:x1 129.8701515197754, :y1 541.6177062988281, :x2 639.2616920471191, :y2 569.0038452148438, :width 839.9999999999999, :height 1092} {:x1 693.4680671691895, :y1 541.6177062988281, :x2 750.3647956848145, :y2 569.0038452148438, :width 839.9999999999999, :height 1092} {:x1 89.98910140991211, :y1 544.9268798828125, :x2 750.3647956848145, :y2 565.9229125976562, :width 839.9999999999999, :height 1092} {:x1 89.98910140991211, :y1 565.6946716308594, :x2 170.18695449829102, :y2 593.080810546875, :width 839.9999999999999, :height 1092}), :page 226}, :content {:text "The expressions ==null || s.isEmpty()usesshort-circuiting: if the first part of the expression istrue, the rest of the expression is not evaluated, thus preventing anullpointerexception."}, :properties {:color "yellow"}} {:id #uuid "629c6d03-6751-4122-bb3e-674f78853138", :page 226, :position {:bounding {:x1 89.98910140991211, :y1 600.084228515625, :x2 750.1915168762207, :y2 651.5473327636719, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98910140991211, :y1 600.084228515625, :x2 278.7557029724121, :y2 627.4703674316406, :width 839.9999999999999, :height 1092} {:x1 329.0899543762207, :y1 600.084228515625, :x2 750.1915168762207, :y2 627.4703674316406, :width 839.9999999999999, :height 1092} {:x1 283.9313850402832, :y1 603.3934020996094, :x2 750.1915168762207, :y2 624.3894348144531, :width 839.9999999999999, :height 1092} {:x1 89.98910140991211, :y1 624.1611938476562, :x2 175.15637588500977, :y2 651.5473327636719, :width 839.9999999999999, :height 1092}), :page 226}, :content {:text "Extension functions usethisto represent the receiver (the object of the type beingextended). "}, :properties {:color "red"}} {:id #uuid "629c6d1e-1bcb-4e8d-a333-3b53113ec5c0", :page 227, :position {:bounding {:x1 89.98910140991211, :y1 169.92233276367188, :x2 750.115650177002, :y2 221.38546752929688, :width 839.9999999999999, :height 1092}, :rects ({:x1 499.4064826965332, :y1 169.92233276367188, :x2 750.115650177002, :y2 197.30850219726562, :width 839.9999999999999, :height 1092} {:x1 89.98910140991211, :y1 193.99935913085938, :x2 359.8265037536621, :y2 221.38546752929688, :width 839.9999999999999, :height 1092}), :page 227}, :content {:text "In general, it’s better to declareregular (non-nullable) extensions. "}, :properties {:color "yellow"}} {:id #uuid "629c6dba-7dbd-420b-93b1-36f56fdb7519", :page 214, :position {:bounding {:x1 89.98910140991211, :y1 618.3701934814453, :x2 753.474536895752, :y2 693.9102630615234, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98910140991211, :y1 618.3701934814453, :x2 461.0601463317871, :y2 645.7563171386719, :width 839.9999999999999, :height 1092} {:x1 512.9193000793457, :y1 618.3701934814453, :x2 753.474536895752, :y2 645.7563171386719, :width 839.9999999999999, :height 1092} {:x1 466.9619941711426, :y1 621.6793518066406, :x2 753.474536895752, :y2 642.6753845214844, :width 839.9999999999999, :height 1092} {:x1 89.98910140991211, :y1 642.4471664428711, :x2 259.82668685913086, :y2 669.8332901000977, :width 839.9999999999999, :height 1092} {:x1 315.11162185668945, :y1 642.4471664428711, :x2 750.1945686340332, :y2 669.8332901000977, :width 839.9999999999999, :height 1092} {:x1 89.98910140991211, :y1 647.0115203857422, :x2 750.1945686340332, :y2 666.1818084716797, :width 839.9999999999999, :height 1092} {:x1 89.98910140991211, :y1 666.5241317749023, :x2 241.03481674194336, :y2 693.9102630615234, :width 839.9999999999999, :height 1092}), :page 214}, :content {:text "Languages like Java allow a result to be eithernullor a meaningful value. Unfor-tunately, if you treatnullthe same way you treat a meaningful value, you geta dramatic failure"}, :properties {:color "yellow"}} {:id #uuid "629c6dd1-9bb9-4b6d-a3f8-f3e8bae8fe2f", :page 214, :position {:bounding {:x1 89.98910140991211, :y1 855.673828125, :x2 753.3611106872559, :y2 883.0599670410156, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98910140991211, :y1 855.673828125, :x2 753.3611106872559, :y2 883.0599670410156, :width 839.9999999999999, :height 1092}), :page 214}, :content {:text "Kotlin’s solution is arguably the best compromise: types default to non-nullable."}, :properties {:color "red"}} {:id #uuid "629c6dd7-9cdf-45dc-aeee-b8fe9943968d", :page 214, :position {:bounding {:x1 89.98910140991211, :y1 879.7507934570312, :x2 750.6187019348145, :y2 931.2138977050781, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98910140991211, :y1 879.7507934570312, :x2 381.763240814209, :y2 907.1369323730469, :width 839.9999999999999, :height 1092} {:x1 430.5469856262207, :y1 879.7507934570312, :x2 750.6187019348145, :y2 907.1369323730469, :width 839.9999999999999, :height 1092} {:x1 386.1443977355957, :y1 883.0599670410156, :x2 750.6187019348145, :y2 904.0559997558594, :width 839.9999999999999, :height 1092} {:x1 89.98910140991211, :y1 903.8277587890625, :x2 531.627254486084, :y2 931.2138977050781, :width 839.9999999999999, :height 1092}), :page 214}, :content {:text "However, if something can produce anullresult, you must append a question markto the type name to explicitly tag that result as nullable:"}, :properties {:color "yellow"}} {:id #uuid "629c6de7-8426-4398-9e87-6952f6e0f175", :page 215, :position {:bounding {:x1 131.51045608520508, :y1 651.0766448974609, :x2 714.5639533996582, :y2 678.4627532958984, :width 839.9999999999999, :height 1092}, :rects ({:x1 131.51045608520508, :y1 651.0766448974609, :x2 714.5639533996582, :y2 678.4627532958984, :width 839.9999999999999, :height 1092} {:x1 160.65100479125977, :y1 655.6409759521484, :x2 710.3701057434082, :y2 674.8112640380859, :width 839.9999999999999, :height 1092}), :page 215}, :content {:text "[2]The error message is:null can not be a value of a non-null type String."}, :properties {:color "yellow"}} {:id #uuid "629c6ded-9e14-41a9-9fc3-6d2190f46e24", :page 215, :position {:bounding {:x1 123.2661018371582, :y1 677.5070953369141, :x2 750.3852424621582, :y2 753.0471954345703, :width 839.9999999999999, :height 1092}, :rects ({:x1 123.2661018371582, :y1 677.5070953369141, :x2 480.9695625305176, :y2 704.8932037353516, :width 839.9999999999999, :height 1092} {:x1 530.092700958252, :y1 677.5070953369141, :x2 686.1685066223145, :y2 704.8932037353516, :width 839.9999999999999, :height 1092} {:x1 705.435230255127, :y1 677.5070953369141, :x2 750.0068855285645, :y2 704.8932037353516, :width 839.9999999999999, :height 1092} {:x1 131.51045608520508, :y1 682.0714569091797, :x2 750.0068855285645, :y2 701.2417144775391, :width 839.9999999999999, :height 1092} {:x1 131.51045608520508, :y1 701.5840606689453, :x2 604.9853401184082, :y2 728.9701690673828, :width 839.9999999999999, :height 1092} {:x1 656.3826789855957, :y1 701.5840606689453, :x2 750.3852424621582, :y2 728.9701690673828, :width 839.9999999999999, :height 1092} {:x1 131.51045608520508, :y1 706.1484527587891, :x2 750.3852424621582, :y2 725.3187408447266, :width 839.9999999999999, :height 1092} {:x1 131.0255012512207, :y1 725.6610260009766, :x2 177.93915176391602, :y2 753.0471954345703, :width 839.9999999999999, :height 1092}), :page 215}, :content {:text "[3]To define an identifier that can contain anullreference, you put a?at theend of the type name. Such an identifier can contain eithernullor a regularvalue."}, :properties {:color "yellow"}} {:id #uuid "629c6e07-5e2d-41e3-9f85-84e45c8ee910", :page 215, :position {:bounding {:x1 131.51045608520508, :y1 877.1548004150391, :x2 750.0208625793457, :y2 928.6179351806641, :width 839.9999999999999, :height 1092}, :rects ({:x1 131.51045608520508, :y1 877.1548004150391, :x2 707.5769233703613, :y2 904.5409698486328, :width 839.9999999999999, :height 1092} {:x1 737.4000129699707, :y1 877.1548004150391, :x2 750.0208625793457, :y2 904.5409698486328, :width 839.9999999999999, :height 1092} {:x1 160.73659133911133, :y1 881.7191925048828, :x2 750.0208625793457, :y2 900.8894805908203, :width 839.9999999999999, :height 1092} {:x1 131.51045608520508, :y1 901.2317657470703, :x2 261.7418098449707, :y2 928.6179351806641, :width 839.9999999999999, :height 1092} {:x1 291.5766792297363, :y1 901.2317657470703, :x2 376.8395576477051, :y2 928.6179351806641, :width 839.9999999999999, :height 1092} {:x1 131.51045608520508, :y1 905.7961578369141, :x2 286.6104621887207, :y2 924.9664459228516, :width 839.9999999999999, :height 1092}), :page 215}, :content {:text "[6]If you use type inference, Kotlin produces the appropriate type. Here,s6isnullable becauses4is nullable."}, :properties {:color "yellow"}} {:id #uuid "629c76b3-a960-4baa-b627-2c1b9297cdad", :page 216, :position {:bounding {:x1 89.98910140991211, :y1 640.1649475097656, :x2 750.497974395752, :y2 691.6280822753906, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98910140991211, :y1 640.1649475097656, :x2 750.497974395752, :y2 667.5511169433594, :width 839.9999999999999, :height 1092} {:x1 304.1999702453613, :y1 644.7293395996094, :x2 750.497974395752, :y2 663.8996276855469, :width 839.9999999999999, :height 1092} {:x1 89.98910140991211, :y1 664.2419128417969, :x2 372.21499252319336, :y2 691.6280822753906, :width 839.9999999999999, :height 1092}), :page 216}, :content {:text "In Kotlin you can’t simplydereference(call a member function or access a memberproperty) a value of a nullable type:"}, :properties {:color "yellow"}} {:id #uuid "629c76bd-8a8a-4c91-be3b-aef2f9708fb1", :page 216, :position {:bounding {:x1 89.41855239868164, :y1 943.1667785644531, :x2 750.0764656066895, :y2 994.6298828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.41855239868164, :y1 943.1667785644531, :x2 750.0764656066895, :y2 970.5529174804688, :width 839.9999999999999, :height 1092} {:x1 513.2045783996582, :y1 947.7311401367188, :x2 750.0764656066895, :y2 966.9014282226562, :width 839.9999999999999, :height 1092} {:x1 89.98910140991211, :y1 967.2437744140625, :x2 480.7606391906738, :y2 994.6298828125, :width 839.9999999999999, :height 1092} {:x1 89.98910140991211, :y1 971.80810546875, :x2 302.93852615356445, :y2 990.9783935546875, :width 839.9999999999999, :height 1092}), :page 216}, :content {:text "You can access members of a non-nullable type as in[1]. If you reference membersof a nullable type, as in[2], Kotlin emits an error."}, :properties {:color "yellow"}} {:id #uuid "629c76dd-e61e-4e44-94b0-f3bb424faa28", :page 217, :position {:bounding {:x1 89.98910140991211, :y1 480.5552062988281, :x2 750.3046760559082, :y2 532.0182800292969, :width 839.9999999999999, :height 1092}, :rects ({:x1 170.0019416809082, :y1 480.5552062988281, :x2 750.3046760559082, :y2 507.9413146972656, :width 839.9999999999999, :height 1092} {:x1 89.98910140991211, :y1 504.6321716308594, :x2 305.71569442749023, :y2 532.0182800292969, :width 839.9999999999999, :height 1092}), :page 217}, :content {:text ". Kotlin has concise syntax to alleviate this problem, which you’ll learnabout in subsequent atoms."}, :properties {:color "yellow"}} {:id #uuid "629c78a3-bce3-4806-b54c-c90a44f9dfd4", :page 218, :position {:bounding {:x1 89.98910140991211, :y1 545.3832855224609, :x2 753.3508796691895, :y2 596.8463897705078, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98910140991211, :y1 545.3832855224609, :x2 598.0349617004395, :y2 572.7694244384766, :width 839.9999999999999, :height 1092} {:x1 617.9422492980957, :y1 545.3832855224609, :x2 753.3508796691895, :y2 572.7694244384766, :width 839.9999999999999, :height 1092} {:x1 220.0161476135254, :y1 549.9476470947266, :x2 753.3508796691895, :y2 570.9436798095703, :width 839.9999999999999, :height 1092} {:x1 89.98910140991211, :y1 569.4602508544922, :x2 147.87739944458008, :y2 596.8463897705078, :width 839.9999999999999, :height 1092} {:x1 177.73881912231445, :y1 569.4602508544922, :x2 551.5005378723145, :y2 596.8463897705078, :width 839.9999999999999, :height 1092} {:x1 626.0867805480957, :y1 569.4602508544922, :x2 630.4514656066895, :y2 596.8463897705078, :width 839.9999999999999, :height 1092} {:x1 89.98910140991211, :y1 574.0246124267578, :x2 626.0813484191895, :y2 595.0206451416016, :width 839.9999999999999, :height 1092}), :page 218}, :content {:text "Uncommenting[1]produces a compile-time error:Only safe (?.) or non-null as-serted (!!.) calls are allowed on a nullable receiver of typeString?."}, :properties {:color "yellow"}} {:id #uuid "629da17d-d98c-4c86-ae9b-f6130ca4a85b", :page 218, :position {:bounding {:x1 89.2901840209961, :y1 603.8498120307922, :x2 750.1603469848633, :y2 655.3129467964172, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.2901840209961, :y1 603.8498120307922, :x2 750.1603469848633, :y2 631.235981464386, :width 839.9999999999999, :height 1092} {:x1 110.44310760498047, :y1 608.414204120636, :x2 750.1603469848633, :y2 629.4102368354797, :width 839.9999999999999, :height 1092} {:x1 89.4185562133789, :y1 627.9267773628235, :x2 95.23810577392578, :y2 655.3129467964172, :width 839.9999999999999, :height 1092} {:x1 115.23567962646484, :y1 627.9267773628235, :x2 130.7079086303711, :y2 655.3129467964172, :width 839.9999999999999, :height 1092} {:x1 89.4185562133789, :y1 632.4911694526672, :x2 115.2474594116211, :y2 651.6614575386047, :width 839.9999999999999, :height 1092}), :page 218}, :content {:text "Asafe callreplaces the dot (.) in a regular call with a question mark and a dot(?.), "}, :properties {:color "red"}} {:id #uuid "629da18c-44bd-4c00-b6bb-abf9b8de9cc3", :page 220, :position {:bounding {:x1 89.98909759521484, :y1 121.78265380859375, :x2 732.0204544067383, :y2 149.16876220703125, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98909759521484, :y1 121.78265380859375, :x2 327.14530181884766, :y2 149.16876220703125, :width 839.9999999999999, :height 1092} {:x1 358.7297134399414, :y1 121.78265380859375, :x2 402.46451568603516, :y2 149.16876220703125, :width 839.9999999999999, :height 1092} {:x1 447.4065628051758, :y1 121.78265380859375, :x2 732.0204544067383, :y2 149.16876220703125, :width 839.9999999999999, :height 1092} {:x1 333.72562408447266, :y1 125.07757568359375, :x2 447.4029006958008, :y2 146.07354736328125, :width 839.9999999999999, :height 1092}), :page 220}, :content {:text "If the expression on the left of?:is notnull, that expression becomes the result."}, :properties {:color "red"}} {:id #uuid "629da19f-a067-4092-9f89-238467656ab9", :page 219, :position {:bounding {:x1 89.26165008544922, :y1 860.8372650146484, :x2 752.4923629760742, :y2 936.3773040771484, :width 839.9999999999999, :height 1092}, :rects ({:x1 280.79273223876953, :y1 860.8372650146484, :x2 722.2471389770508, :y2 888.2233734130859, :width 839.9999999999999, :height 1092} {:x1 741.9357986450195, :y1 860.8372650146484, :x2 752.2024002075195, :y2 888.2233734130859, :width 839.9999999999999, :height 1092} {:x1 721.9810256958008, :y1 864.1464080810547, :x2 752.2024002075195, :y2 885.1424407958984, :width 839.9999999999999, :height 1092} {:x1 89.26165008544922, :y1 884.9142303466797, :x2 752.4923629760742, :y2 912.3003387451172, :width 839.9999999999999, :height 1092} {:x1 89.26165008544922, :y1 889.4785614013672, :x2 752.4923629760742, :y2 908.6488494873047, :width 839.9999999999999, :height 1092} {:x1 89.98909759521484, :y1 908.9911956787109, :x2 691.7240829467773, :y2 936.3773040771484, :width 839.9999999999999, :height 1092}), :page 219}, :content {:text " This operator is a question mark followed by a colon (?:),with no intervening space. It is named for an emoticon of the musician Elvis Presley,and is also a play on the words “else-if” (which sounds vaguely like “Elvis”)."}, :properties {:color "red"}} {:id #uuid "629da1aa-c2b3-4dab-bb73-316df2a7a8d6", :page 220, :position {:bounding {:x1 108.1181411743164, :y1 378.727294921875, :x2 307.5381546020508, :y2 397.8975830078125, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.1181411743164, :y1 378.727294921875, :x2 307.5381546020508, :y2 397.8975830078125, :width 839.9999999999999, :height 1092}), :page 220}, :content {:text "(s2?:\"---\") eq\"---\""}, :properties {:color "red"}} {:id #uuid "629da1b2-d8f3-4c1e-a9be-17d0fc5c387a", :page 220, :position {:bounding {:x1 108.1181411743164, :y1 689.032112121582, :x2 488.8154983520508, :y2 728.6706619262695, :width 839.9999999999999, :height 1092}, :rects ({:x1 126.24718475341797, :y1 689.032112121582, :x2 399.08145904541016, :y2 708.2024002075195, :width 839.9999999999999, :height 1092} {:x1 434.44095611572266, :y1 689.032112121582, :x2 488.8154983520508, :y2 708.2024002075195, :width 839.9999999999999, :height 1092} {:x1 108.1181411743164, :y1 709.500373840332, :x2 362.82337188720703, :y2 728.6706619262695, :width 839.9999999999999, :height 1092} {:x1 434.44095611572266, :y1 709.500373840332, :x2 488.8154983520508, :y2 728.6706619262695, :width 839.9999999999999, :height 1092}), :page 220}, :content {:text "if(s !=null) s.lengthelse0// [1]vallength2 = s?.length?:0// [2]"}, :properties {:color "red"}} {:id #uuid "629da1d5-2638-47b7-ac1a-4611790e247a", :page 221, :position {:bounding {:x1 116.2198715209961, :y1 729.5264778137207, :x2 553.5408401489258, :y2 756.9125862121582, :width 839.9999999999999, :height 1092}, :rects ({:x1 116.2198715209961, :y1 729.5264778137207, :x2 553.5408401489258, :y2 756.9125862121582, :width 839.9999999999999, :height 1092} {:x1 131.51045989990234, :y1 734.0908088684082, :x2 155.68102264404297, :y2 753.2610969543457, :width 839.9999999999999, :height 1092}), :page 221}, :content {:text "•[2]All intermediate calls produce meaningful values."}, :properties {:color "yellow"}} {:id #uuid "629da1e2-14e9-4a50-bba5-806aff19a2a7", :page 221, :position {:bounding {:x1 116.2198715209961, :y1 703.0959968566895, :x2 734.7041702270508, :y2 730.482105255127, :width 839.9999999999999, :height 1092}, :rects ({:x1 116.2198715209961, :y1 703.0959968566895, :x2 263.7636184692383, :y2 730.482105255127, :width 839.9999999999999, :height 1092} {:x1 393.3475112915039, :y1 703.0959968566895, :x2 405.9684524536133, :y2 730.482105255127, :width 839.9999999999999, :height 1092} {:x1 450.81555938720703, :y1 703.0959968566895, :x2 685.5877151489258, :y2 730.482105255127, :width 839.9999999999999, :height 1092} {:x1 730.339485168457, :y1 703.0959968566895, :x2 734.7041702270508, :y2 730.482105255127, :width 839.9999999999999, :height 1092} {:x1 131.51045989990234, :y1 707.6603889465332, :x2 730.3501052856445, :y2 726.8306770324707, :width 839.9999999999999, :height 1092}), :page 221}, :content {:text "•[1]The propertyalice.friendisnull, so the rest of the calls returnnull."}, :properties {:color "yellow"}} {:id #uuid "629da1e7-61ba-40b1-951e-809d79b1313a", :page 221, :position {:bounding {:x1 116.2198715209961, :y1 755.9426765441895, :x2 750.2711563110352, :y2 807.4057502746582, :width 839.9999999999999, :height 1092}, :rects ({:x1 116.2198715209961, :y1 755.9426765441895, :x2 750.2711563110352, :y2 783.328784942627, :width 839.9999999999999, :height 1092} {:x1 131.51045989990234, :y1 760.507007598877, :x2 750.2711563110352, :y2 779.6772956848145, :width 839.9999999999999, :height 1092} {:x1 131.51045989990234, :y1 780.0196418762207, :x2 351.6553421020508, :y2 807.4057502746582, :width 839.9999999999999, :height 1092} {:x1 396.4284439086914, :y1 780.0196418762207, :x2 400.79309844970703, :y2 807.4057502746582, :width 839.9999999999999, :height 1092} {:x1 131.51045989990234, :y1 784.5839729309082, :x2 396.4390335083008, :y2 803.7542610168457, :width 839.9999999999999, :height 1092}), :page 221}, :content {:text "•[3]An Elvis operator after the chain of safe calls provides an alternate value ifany intermediate element isnull."}, :properties {:color "yellow"}} {:id #uuid "62a34ab3-ae3c-45ab-a6e3-054e225b39e3", :page 219, :position {:bounding {:x1 89.296875, :y1 943.5676879882812, :x2 753.4117279052734, :y2 995.1432189941406, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.296875, :y1 943.5676879882812, :x2 753.4117279052734, :y2 971.0676879882812, :width 839.9999999999999, :height 1092} {:x1 483.82810974121094, :y1 947.734375, :x2 753.4117279052734, :y2 966.9010314941406, :width 839.9999999999999, :height 1092} {:x1 90, :y1 967.6432189941406, :x2 470.97314453125, :y2 995.1432189941406, :width 839.9999999999999, :height 1092}), :page 219}, :content {:text "A number of programming languages provide anull coalescing operatorthat per-forms the same action as Kotlin’s Elvis operator."}, :properties {:color "yellow"}} {:id #uuid "62a34e3d-a04f-4f5c-8bec-e1ea9eb47073", :page 218, :position {:bounding {:x1 90, :y1 652.3958282470703, :x2 750.4479217529297, :y2 703.9713287353516, :width 839.9999999999999, :height 1092}, :rects ({:x1 404.5015411376953, :y1 652.3958282470703, :x2 750.4479217529297, :y2 679.8958282470703, :width 839.9999999999999, :height 1092} {:x1 90, :y1 676.4713287353516, :x2 201.61756896972656, :y2 703.9713287353516, :width 839.9999999999999, :height 1092} {:x1 90, :y1 680.6380157470703, :x2 246.3854217529297, :y2 699.8046417236328, :width 839.9999999999999, :height 1092}), :page 218}, :content {:text " They only perform an operation when thereceiver is notnull"}, :properties {:color "yellow"}} {:id #uuid "62a34e4a-9cff-4f41-9b74-40b5caa782b9", :page 219, :position {:bounding {:x1 90, :y1 308.0208435058594, :x2 750.0588836669922, :y2 359.5963439941406, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 308.0208435058594, :x2 193.0792694091797, :y2 335.5208435058594, :width 839.9999999999999, :height 1092} {:x1 262.1223907470703, :y1 308.0208435058594, :x2 473.2255096435547, :y2 335.5208435058594, :width 839.9999999999999, :height 1092} {:x1 527.5651092529297, :y1 308.0208435058594, :x2 750.0588836669922, :y2 335.5208435058594, :width 839.9999999999999, :height 1092} {:x1 129.3489532470703, :y1 312.1874694824219, :x2 750.0588836669922, :y2 331.3541564941406, :width 839.9999999999999, :height 1092} {:x1 90, :y1 332.0963439941406, :x2 249.63328552246094, :y2 359.5963439941406, :width 839.9999999999999, :height 1092} {:x1 279.37498474121094, :y1 332.0963439941406, :x2 292.00157165527344, :y2 359.5963439941406, :width 839.9999999999999, :height 1092} {:x1 336.83592224121094, :y1 332.0963439941406, :x2 341.21092224121094, :y2 359.5963439941406, :width 839.9999999999999, :height 1092} {:x1 90, :y1 336.2630310058594, :x2 336.8411407470703, :y2 357.0963439941406, :width 839.9999999999999, :height 1092}), :page 219}, :content {:text "Line[1]callsecho()and produces results in thetrace, while line[2]does nothingbecause the receivers2isnull."}, :properties {:color "yellow"}} {:id #uuid "62a35155-e565-4be5-be0b-b3fcd8f2604d", :page 224, :position {:bounding {:x1 90, :y1 224.98699951171875, :x2 753.6409912109375, :y2 276.5625, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 224.98699951171875, :x2 753.6409912109375, :y2 252.48699951171875, :width 839.9999999999999, :height 1092} {:x1 90, :y1 249.0625, :x2 206.5386199951172, :y2 276.5625, :width 839.9999999999999, :height 1092} {:x1 253.16404724121094, :y1 249.0625, :x2 579.8474578857422, :y2 276.5625, :width 839.9999999999999, :height 1092} {:x1 90, :y1 253.22918701171875, :x2 246.35939025878906, :y2 274.0625, :width 839.9999999999999, :height 1092}), :page 224}, :content {:text "Optimal code uses only safe calls and special functions that throw detailed exceptions.Only use non-nullasserted calls when you absolutely must"}, :properties {:color "yellow"}} {:id #uuid "62a35160-a007-4b93-a289-b8646fd823fb", :page 224, :position {:bounding {:x1 90, :y1 249.0625, :x2 753.0598602294922, :y2 324.71356201171875, :width 839.9999999999999, :height 1092}, :rects ({:x1 589.3536224365234, :y1 249.0625, :x2 710.4545135498047, :y2 276.5625, :width 839.9999999999999, :height 1092} {:x1 710.1041717529297, :y1 252.13543701171875, :x2 749.9922332763672, :y2 272.96875, :width 839.9999999999999, :height 1092} {:x1 90, :y1 273.13800048828125, :x2 750.4927368164062, :y2 300.63800048828125, :width 839.9999999999999, :height 1092} {:x1 90, :y1 277.3046875, :x2 750.4927368164062, :y2 296.47137451171875, :width 839.9999999999999, :height 1092} {:x1 90, :y1 297.21356201171875, :x2 753.0598602294922, :y2 324.71356201171875, :width 839.9999999999999, :height 1092} {:x1 90, :y1 301.38018798828125, :x2 748.8806610107422, :y2 320.546875, :width 839.9999999999999, :height 1092}), :page 224}, :content {:text "Although non-nullassertions were included to support interaction with Java code, there are better waysto interact with Java, which you can learn about inAppendix B: Java Interoperability."}, :properties {:color "yellow"}} {:id #uuid "62a40343-8fc7-4377-b678-d8d965009338", :page 226, :position {:bounding {:x1 90, :y1 751.2630004882812, :x2 434.4693603515625, :y2 790.8984375, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 751.2630004882812, :x2 434.4693603515625, :y2 770.4296875, :width 839.9999999999999, :height 1092} {:x1 108.125, :y1 771.7317504882812, :x2 334.7430419921875, :y2 790.8984375, :width 839.9999999999999, :height 1092}), :page 226}, :content {:text "funString?.isNullOrEmpty(): Boolean =this==null|| isEmpty()"}, :properties {:color "yellow"}} {:id #uuid "62a403f6-a49f-4248-af3b-350983a55ecc", :page 226, :position {:bounding {:x1 90, :y1 893.2551574707031, :x2 577.1502685546875, :y2 920.7551574707031, :width 839.9999999999999, :height 1092}, :rects ({:x1 244.53125, :y1 893.2551574707031, :x2 577.1502685546875, :y2 920.7551574707031, :width 839.9999999999999, :height 1092} {:x1 90, :y1 896.3150939941406, :x2 239.5860595703125, :y2 917.1484069824219, :width 839.9999999999999, :height 1092}), :page 226}, :content {:text "isNullOrEmpty()is more readable as an extension function."}, :properties {:color "yellow"}} {:id #uuid "62a42677-ab34-4b18-bdaa-d5e74d0ed6e0", :page 228, :position {:bounding {:x1 131.5, :y1 260.921875, :x2 712.007080078125, :y2 313, :width 839.9999999999999, :height 1092}, :rects ({:x1 131.5, :y1 260.921875, :x2 712.007080078125, :y2 288.921875, :width 839.9999999999999, :height 1092} {:x1 257.90625, :y1 265.921875, :x2 712.007080078125, :y2 284.921875, :width 839.9999999999999, :height 1092} {:x1 131.5, :y1 285, :x2 206.1737060546875, :y2 313, :width 839.9999999999999, :height 1092}), :page 228}, :content {:text "Generics createparameterized types: components that work across multi-ple types."}, :properties {:color "yellow"}} {:id #uuid "62a42698-0dc8-4e9b-9c8d-8f367e9f5f56", :page 228, :position {:bounding {:x1 89.4375, :y1 337.65625, :x2 715.2626953125, :y2 365.65625, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.4375, :y1 337.65625, :x2 715.2626953125, :y2 365.65625, :width 839.9999999999999, :height 1092}), :page 228}, :content {:text "The term “generic” means “pertaining or appropriate to large groups of classes.”"}, :properties {:color "yellow"}} {:id #uuid "62ad279f-b79c-42ea-879a-e87468ac6b51", :page 233, :position {:bounding {:x1 87.74739074707031, :y1 646.25, :x2 335.2777099609375, :y2 665.4166259765625, :width 819.0000000000001, :height 1064.7000000000003}, :rects ({:x1 87.74739074707031, :y1 646.25, :x2 335.2777099609375, :y2 665.4166259765625, :width 819.0000000000001, :height 1064.7000000000003}), :page 233}, :content {:text "valString.indices: IntRange"}, :properties {:color "red"}} {:id #uuid "62ad3208-5ead-481b-ad9d-db0dc8a9526d", :page 236, :position {:bounding {:x1 90, :y1 599.78125, :x2 664.071533203125, :y2 627.78125, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 599.78125, :x2 486.6920166015625, :y2 627.78125, :width 839.9999999999999, :height 1092} {:x1 549.28125, :y1 599.78125, :x2 578.7246704101562, :y2 627.78125, :width 839.9999999999999, :height 1092} {:x1 231.671875, :y1 604.78125, :x2 664.071533203125, :y2 623.78125, :width 839.9999999999999, :height 1092}), :page 236}, :content {:text "Kotlin provides aconstrained jumpin the form ofbreakandcontinue"}, :properties {:color "yellow"}} {:id #uuid "62ad3393-ee72-4333-9282-e07583b787d4", :page 237, :position {:bounding {:x1 89.078125, :y1 520.3125, :x2 753.629150390625, :y2 654.828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.078125, :y1 520.3125, :x2 136.7941131591797, :y2 548.3125, :width 839.9999999999999, :height 1092} {:x1 213.578125, :y1 520.3125, :x2 217.953125, :y2 548.3125, :width 839.9999999999999, :height 1092} {:x1 281.875, :y1 520.3125, :x2 645.5776977539062, :y2 548.3125, :width 839.9999999999999, :height 1092} {:x1 689.421875, :y1 520.3125, :x2 750.5238037109375, :y2 548.3125, :width 839.9999999999999, :height 1092} {:x1 143.78125, :y1 523.890625, :x2 750.5238037109375, :y2 544.890625, :width 839.9999999999999, :height 1092} {:x1 90, :y1 544.390625, :x2 609.18212890625, :y2 572.390625, :width 839.9999999999999, :height 1092} {:x1 640.421875, :y1 544.390625, :x2 750.0180053710938, :y2 572.390625, :width 839.9999999999999, :height 1092} {:x1 90, :y1 549.390625, :x2 750.0180053710938, :y2 568.390625, :width 839.9999999999999, :height 1092} {:x1 90, :y1 568.46875, :x2 210.093505859375, :y2 596.46875, :width 839.9999999999999, :height 1092} {:x1 259.84375, :y1 568.46875, :x2 351.50555419921875, :y2 596.46875, :width 839.9999999999999, :height 1092} {:x1 391.328125, :y1 568.46875, :x2 556.4403076171875, :y2 596.46875, :width 839.9999999999999, :height 1092} {:x1 90, :y1 573.46875, :x2 556.4403076171875, :y2 594.46875, :width 839.9999999999999, :height 1092} {:x1 90, :y1 602.75, :x2 753.629150390625, :y2 630.75, :width 839.9999999999999, :height 1092} {:x1 90, :y1 607.75, :x2 753.629150390625, :y2 626.75, :width 839.9999999999999, :height 1092} {:x1 90, :y1 626.828125, :x2 533.3768920898438, :y2 654.828125, :width 839.9999999999999, :height 1092}), :page 237}, :content {:text "Wheni == 40,breakis executed at[3], which “breaks out” of theforloop byjumping to the end of its scope at[4]. The numbers beginning at40are not addedto the resultingListbecause theforloop stops executing.Lines[2]and[3]are interchangeable because their logic doesn’t overlap. Try swap-ping the lines and verify that the output doesn’t change."}, :properties {:color "blue"}} {:id #uuid "62ad33ae-723e-43b9-86de-8981b0e4abef", :page 238, :position {:bounding {:x1 90, :y1 616.4375, :x2 752.193603515625, :y2 692.59375, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 616.4375, :x2 130.53759765625, :y2 644.4375, :width 839.9999999999999, :height 1092} {:x1 192.34375, :y1 616.4375, :x2 221.78717041015625, :y2 644.4375, :width 839.9999999999999, :height 1092} {:x1 313.5, :y1 616.4375, :x2 750.2037353515625, :y2 644.4375, :width 839.9999999999999, :height 1092} {:x1 136.5, :y1 620, :x2 750.2037353515625, :y2 641, :width 839.9999999999999, :height 1092} {:x1 90, :y1 640.515625, :x2 230.08224487304688, :y2 668.515625, :width 839.9999999999999, :height 1092} {:x1 287.546875, :y1 640.515625, :x2 316.99029541015625, :y2 668.515625, :width 839.9999999999999, :height 1092} {:x1 404.40625, :y1 640.515625, :x2 752.193603515625, :y2 668.515625, :width 839.9999999999999, :height 1092} {:x1 90, :y1 645.515625, :x2 752.193603515625, :y2 664.515625, :width 839.9999999999999, :height 1092} {:x1 90, :y1 664.59375, :x2 510.0177001953125, :y2 692.59375, :width 839.9999999999999, :height 1092}), :page 238}, :content {:text "Plainbreakandcontinuecan jump no further than the boundaries of their localloop.Labelsallowbreakandcontinueto jump to the boundaries ofenclosingloops,so you aren’t limited to the scope of the current loop."}, :properties {:color "red"}} {:id #uuid "62ae8d5f-c173-4419-be2d-e774df0d9b1f", :page 238, :position {:bounding {:x1 85.28210757672787, :y1 662.3734130859375, :x2 710.7822296470404, :y2 711.6684265136719, :width 796, :height 1034.8}, :rects ({:x1 645.1165802329779, :y1 662.3734130859375, :x2 710.7822296470404, :y2 688.8466491699219, :width 796, :height 1034.8} {:x1 85.28210757672787, :y1 685.1951904296875, :x2 97.24558566510677, :y2 711.6684265136719, :width 796, :height 1034.8} {:x1 149.18307803571224, :y1 685.1951904296875, :x2 153.31952212750912, :y2 711.6684265136719, :width 796, :height 1034.8} {:x1 85.28210757672787, :y1 689.759521484375, :x2 149.21672366559505, :y2 708.0169372558594, :width 796, :height 1034.8}), :page 238}, :content {:text "the labelisouter:"}, :properties {:color "yellow"}} {:id #uuid "62ae8d62-39ea-4b49-b18a-7e97dccbba1f", :page 238, :position {:bounding {:x1 136.8165161460638, :y1 862.7057800292969, :x2 360.1571686118841, :y2 880.9631958007812, :width 796, :height 1034.8}, :rects ({:x1 136.8165161460638, :y1 862.7057800292969, :x2 360.1571686118841, :y2 880.9631958007812, :width 796, :height 1034.8}), :page 238}, :content {:text "if(i ==5)continue@outer"}, :properties {:color "yellow"}} {:id #uuid "62ae8d64-9ff3-48fe-b99e-16132251609b", :page 238, :position {:bounding {:x1 136.8165161460638, :y1 882.0900268554688, :x2 403.104892000556, :y2 900.3474426269531, :width 796, :height 1034.8}, :rects ({:x1 136.8165161460638, :y1 882.0900268554688, :x2 403.104892000556, :y2 900.3474426269531, :width 796, :height 1034.8}), :page 238}, :content {:text "if(\"$c$i\"==\"c3\")break@outer"}, :properties {:color "yellow"}} {:id #uuid "62ae8d8a-a6ff-4694-a4f0-be8fa3c7b816", :page 239, :position {:bounding {:x1 84.75435946881771, :y1 215.09518432617188, :x2 710.8082306236029, :y2 261.2664794921875, :width 796, :height 1034.8}, :rects ({:x1 84.75435946881771, :y1 215.09518432617188, :x2 175.15295718610287, :y2 241.5684814453125, :width 796, :height 1034.8} {:x1 267.699374422431, :y1 215.09518432617188, :x2 346.7245514243841, :y2 241.5684814453125, :width 796, :height 1034.8} {:x1 495.9456207603216, :y1 215.09518432617188, :x2 710.8082306236029, :y2 241.5684814453125, :width 796, :height 1034.8} {:x1 183.61542056500912, :y1 218.361572265625, :x2 710.8082306236029, :y2 238.44473266601562, :width 796, :height 1034.8} {:x1 85.28210757672787, :y1 241.183349609375, :x2 142.02217410504818, :y2 261.2664794921875, :width 796, :height 1034.8}), :page 239}, :content {:text "The labeledcontinueexpressioncontinue@outercontinues back to the labelouter@"}, :properties {:color "yellow"}} {:id #uuid "62ae8d90-37f4-452e-a690-7b5799ea99b3", :page 239, :position {:bounding {:x1 85.28210757672787, :y1 237.9027099609375, :x2 711.2458526939154, :y2 287.19775390625, :width 796, :height 1034.8}, :rects ({:x1 151.05437014997005, :y1 237.9027099609375, :x2 243.71498416364193, :y2 264.3759765625, :width 796, :height 1034.8} {:x1 306.5819732993841, :y1 237.9027099609375, :x2 385.60715030133724, :y2 264.3759765625, :width 796, :height 1034.8} {:x1 505.15991519391537, :y1 237.9027099609375, :x2 711.2458526939154, :y2 264.3759765625, :width 796, :height 1034.8} {:x1 251.51019595563412, :y1 241.183349609375, :x2 711.2458526939154, :y2 261.2664794921875, :width 796, :height 1034.8} {:x1 85.28210757672787, :y1 260.7244873046875, :x2 136.07040713727474, :y2 287.19775390625, :width 796, :height 1034.8} {:x1 197.479647859931, :y1 260.7244873046875, :x2 388.67224429547787, :y2 287.19775390625, :width 796, :height 1034.8} {:x1 85.28210757672787, :y1 265.288818359375, :x2 197.52186892926693, :y2 283.5462646484375, :width 796, :height 1034.8}), :page 239}, :content {:text "The labeledbreakexpressionbreak@outerfinds the end of the blocknamedouter@, and proceeds from there"}, :properties {:color "yellow"}} {:id #uuid "62ae8e32-767d-45d3-9352-a43956edfc2e", :page 238, :position {:bounding {:x1 102.45549319684505, :y1 823.9087677001953, :x2 403.104892000556, :y2 939.1301879882812, :width 796, :height 1034.8}, :rects ({:x1 102.45549319684505, :y1 823.9087677001953, :x2 342.9597503989935, :y2 842.1661834716797, :width 796, :height 1034.8} {:x1 119.64313815534115, :y1 843.3072662353516, :x2 265.65100406110287, :y2 861.5646820068359, :width 796, :height 1034.8} {:x1 136.8165161460638, :y1 862.7057800292969, :x2 360.1571686118841, :y2 880.9631958007812, :width 796, :height 1034.8} {:x1 136.8165161460638, :y1 882.0900115966797, :x2 403.104892000556, :y2 900.3474426269531, :width 796, :height 1034.8} {:x1 136.8165161460638, :y1 901.488525390625, :x2 300.86227725446224, :y2 919.7459411621094, :width 796, :height 1034.8} {:x1 119.64313815534115, :y1 920.8727722167969, :x2 129.08565066754818, :y2 939.1301879882812, :width 796, :height 1034.8}), :page 238}, :content {:text "outer@for(cin'a'..'e') {for(iin1..9) {if(i ==5)continue@outerif(\"$c$i\"==\"c3\")break@outerstrings.add(\"$c$i\")}"}, :properties {:color "red"}} {:id #uuid "62ae8ed1-5f4c-450c-b835-aa685b68ddc6", :page 239, :position {:bounding {:x1 102.45448611676693, :y1 452.5237274169922, :x2 308.59872744977474, :y2 471.6940460205078, :width 796, :height 1034.8}, :rects ({:x1 102.45448611676693, :y1 452.5237274169922, :x2 308.59872744977474, :y2 471.6940460205078, :width 796, :height 1034.8}), :page 239}, :content {:text "outer@while(c <'f') {"}, :properties {:color "red"}} {:id #uuid "62ae8ed5-9dac-497f-9e33-7ad6990bc065", :page 239, :position {:bounding {:x1 136.80563662946224, :y1 549.4877777099609, :x2 360.1571686118841, :y2 568.6580657958984, :width 796, :height 1034.8}, :rects ({:x1 136.80563662946224, :y1 549.4877777099609, :x2 360.1571686118841, :y2 568.6580657958984, :width 796, :height 1034.8}), :page 239}, :content {:text "if(i ==5)continue@outer"}, :properties {:color "red"}} {:id #uuid "62ae8eda-ef3d-4bdb-aedf-78d5d7fdeeb1", :page 239, :position {:bounding {:x1 136.80563662946224, :y1 568.8862762451172, :x2 403.104892000556, :y2 588.0565643310547, :width 796, :height 1034.8}, :rects ({:x1 136.80563662946224, :y1 568.8862762451172, :x2 403.104892000556, :y2 588.0565643310547, :width 796, :height 1034.8}), :page 239}, :content {:text "if(\"$c$i\"==\"c3\")break@outer"}, :properties {:color "red"}} {:id #uuid "62aed5e1-251f-4bcb-a362-8bf1952a1320", :page 242, :position {:bounding {:x1 131.49775505065918, :y1 261.3561248779297, :x2 603.1226634979248, :y2 288.74224853515625, :width 839.9999999999999, :height 1092}, :rects ({:x1 131.49775505065918, :y1 261.3561248779297, :x2 603.1226634979248, :y2 288.74224853515625, :width 839.9999999999999, :height 1092}), :page 242}, :content {:text "Lambdas produce compact code that’s easier to understand."}, :properties {:color "yellow"}} {:id #uuid "62aed625-2ed8-4fd5-a3d8-d8708e220162", :page 242, :position {:bounding {:x1 89.98910331726074, :y1 396.55682373046875, :x2 750.2282543182373, :y2 472.0968933105469, :width 839.9999999999999, :height 1092}, :rects ({:x1 717.9636058807373, :y1 396.55682373046875, :x2 750.0039501190186, :y2 423.94293212890625, :width 839.9999999999999, :height 1092} {:x1 89.98910331726074, :y1 420.6337890625, :x2 198.978666305542, :y2 448.0198974609375, :width 839.9999999999999, :height 1092} {:x1 259.85441398620605, :y1 420.6337890625, :x2 750.2282543182373, :y2 448.0198974609375, :width 839.9999999999999, :height 1092} {:x1 89.98910331726074, :y1 425.1981506347656, :x2 750.2282543182373, :y2 444.3684387207031, :width 839.9999999999999, :height 1092} {:x1 89.98910331726074, :y1 444.71075439453125, :x2 202.87202262878418, :y2 472.0968933105469, :width 839.9999999999999, :height 1092}), :page 242}, :content {:text "Theparameter formap()is a transformation function which is applied to each elementin a collection"}, :properties {:color "red"}} {:id #uuid "62aed67a-afbf-41f9-ad6b-70a30ad728b6", :page 242, :position {:bounding {:x1 137.8181438446045, :y1 468.7877197265625, :x2 631.0908031463623, :y2 496.1738586425781, :width 839.9999999999999, :height 1092}, :rects ({:x1 137.8181438446045, :y1 468.7877197265625, :x2 284.6071605682373, :y2 496.1738586425781, :width 839.9999999999999, :height 1092} {:x1 334.38175773620605, :y1 468.7877197265625, :x2 404.3979015350342, :y2 496.1738586425781, :width 839.9999999999999, :height 1092} {:x1 474.1651134490967, :y1 468.7877197265625, :x2 606.1882152557373, :y2 496.1738586425781, :width 839.9999999999999, :height 1092} {:x1 289.52271842956543, :y1 472.0826110839844, :x2 631.0908031463623, :y2 493.0786437988281, :width 839.9999999999999, :height 1092}), :page 242}, :content {:text "we transform eachListitem to aStringsurrounded with[]"}, :properties {:color "yellow"}} {:id #uuid "62aed773-20ba-4d26-b571-a6314c78632b", :page 242, :position {:bounding {:x1 361.18949699401855, :y1 696.5367584228516, :x2 465.82679557800293, :y2 723.9228668212891, :width 839.9999999999999, :height 1092}, :rects ({:x1 361.18949699401855, :y1 696.5367584228516, :x2 465.82679557800293, :y2 723.9228668212891, :width 839.9999999999999, :height 1092}), :page 242}, :content {:text " curly braces "}, :properties {:color "yellow"}} {:id #uuid "62aed790-efb8-47c7-8b3e-54c63e466f69", :page 242, :position {:bounding {:x1 89.43282127380371, :y1 720.6259613037109, :x2 750.0298900604248, :y2 772.0747833251953, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.43282127380371, :y1 720.6259613037109, :x2 639.5822353363037, :y2 748.0121002197266, :width 839.9999999999999, :height 1092} {:x1 672.3721752166748, :y1 720.6259613037109, :x2 750.0298900604248, :y2 748.0121002197266, :width 839.9999999999999, :height 1092} {:x1 645.884687423706, :y1 723.9208831787109, :x2 750.0298900604248, :y2 744.9168853759766, :width 839.9999999999999, :height 1092} {:x1 89.98910331726074, :y1 744.6886749267578, :x2 199.16235160827637, :y2 772.0747833251953, :width 839.9999999999999, :height 1092} {:x1 248.97126579284668, :y1 744.6886749267578, :x2 345.5917491912842, :y2 772.0747833251953, :width 839.9999999999999, :height 1092} {:x1 89.98910331726074, :y1 749.2530364990234, :x2 244.00385856628418, :y2 768.4233551025391, :width 839.9999999999999, :height 1092}), :page 242}, :content {:text "The parameter list is separated from the function body by an arrow->(the samearrow used inwhenexpressions)"}, :properties {:color "yellow"}} {:id #uuid "62aed797-6c52-4216-a705-8662b1871bbb", :page 242, :position {:bounding {:x1 89.42492485046387, :y1 779.0657043457031, :x2 482.52233695983887, :y2 806.4518432617188, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.42492485046387, :y1 779.0657043457031, :x2 482.52233695983887, :y2 806.4518432617188, :width 839.9999999999999, :height 1092}), :page 242}, :content {:text "The function body can be one or more expressions"}, :properties {:color "yellow"}} {:id #uuid "62aed79d-0b0a-45fa-b678-955bc5a880ed", :page 242, :position {:bounding {:x1 89.97936820983887, :y1 779.0657043457031, :x2 750.257978439331, :y2 830.5338134765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 491.5457592010498, :y1 779.0657043457031, :x2 750.257978439331, :y2 806.4518432617188, :width 839.9999999999999, :height 1092} {:x1 89.97936820983887, :y1 803.147705078125, :x2 301.2235851287842, :y2 830.5338134765625, :width 839.9999999999999, :height 1092}), :page 242}, :content {:text "The final expression becomes thereturn value of the lambda"}, :properties {:color "yellow"}} {:id #uuid "62aed7c6-d1a2-4461-b9c0-f3f14ab11272", :page 242, :position {:bounding {:x1 108.11001396179199, :y1 616.18310546875, :x2 497.88148307800293, :y2 635.3533935546875, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11001396179199, :y1 616.18310546875, :x2 497.88148307800293, :y2 635.3533935546875, :width 839.9999999999999, :height 1092}), :page 242}, :content {:text "valresult = list.map({ n: Int ->\"[$n]\"})"}, :properties {:color "yellow"}} {:id #uuid "62aed82f-4963-4152-abdc-3281d492f7cb", :page 242, :position {:bounding {:x1 89.98910331726074, :y1 314.0133285522461, :x2 752.352705001831, :y2 389.5533981323242, :width 839.9999999999999, :height 1092}, :rects ({:x1 630.1287670135498, :y1 314.0133285522461, :x2 752.352705001831, :y2 341.3994369506836, :width 839.9999999999999, :height 1092} {:x1 89.98910331726074, :y1 338.09029388427734, :x2 750.6355266571045, :y2 365.47643280029297, :width 839.9999999999999, :height 1092} {:x1 89.98910331726074, :y1 342.65465545654297, :x2 750.6355266571045, :y2 361.82494354248047, :width 839.9999999999999, :height 1092} {:x1 89.98910331726074, :y1 362.1672592163086, :x2 130.74403190612793, :y2 389.5533981323242, :width 839.9999999999999, :height 1092}), :page 242}, :content {:text "it has no name,requires a minimal amount of code to create, and you can insert it directly into othercode."}, :properties {:color "red"}} {:id #uuid "62aed91c-12c9-428d-8268-a4553845e3f5", :page 243, :position {:bounding {:x1 89.26165580749512, :y1 343.48194122314453, :x2 752.2690868377686, :y2 394.9450149536133, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98910331726074, :y1 343.48194122314453, :x2 571.7651042938232, :y2 370.86804962158203, :width 839.9999999999999, :height 1092} {:x1 602.8513622283936, :y1 343.48194122314453, :x2 752.2690868377686, :y2 370.86804962158203, :width 839.9999999999999, :height 1092} {:x1 577.2339305877686, :y1 346.7768325805664, :x2 752.2690868377686, :y2 367.77286529541016, :width 839.9999999999999, :height 1092} {:x1 89.26165580749512, :y1 367.5589065551758, :x2 374.7844829559326, :y2 394.9450149536133, :width 839.9999999999999, :height 1092} {:x1 419.5354747772217, :y1 367.5589065551758, :x2 423.90015983581543, :y2 394.9450149536133, :width 839.9999999999999, :height 1092} {:x1 89.26165580749512, :y1 372.1232681274414, :x2 419.5278148651123, :y2 391.2935562133789, :width 839.9999999999999, :height 1092}), :page 243}, :content {:text "If there’s only a single parameter, Kotlin generates the nameitfor that parameter,which means we no longer need then ->:"}, :properties {:color "red"}} {:id #uuid "62aed96f-d5f9-431c-ba72-6e0020a73b71", :page 243, :position {:bounding {:x1 89.98910331726074, :y1 595.3201904296875, :x2 750.1930980682373, :y2 646.7690124511719, :width 839.9999999999999, :height 1092}, :rects ({:x1 450.42457389831543, :y1 595.3201904296875, :x2 750.1930980682373, :y2 622.706298828125, :width 839.9999999999999, :height 1092} {:x1 89.98910331726074, :y1 619.3829040527344, :x2 166.44054985046387, :y2 646.7690124511719, :width 839.9999999999999, :height 1092} {:x1 196.32429313659668, :y1 619.3829040527344, :x2 235.26896476745605, :y2 646.7690124511719, :width 839.9999999999999, :height 1092} {:x1 89.98910331726074, :y1 623.9472351074219, :x2 280.13358879089355, :y2 643.1175231933594, :width 839.9999999999999, :height 1092}), :page 243}, :content {:text " Kotlin infers the type of the lambdaargumentitto beChar"}, :properties {:color "yellow"}} {:id #uuid "62af3434-5c77-41c3-b704-cc243b85362f", :page 243, :position {:bounding {:x1 89.98908996582031, :y1 867.6124572753906, :x2 750.2953033447266, :y2 919.0755615234375, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98908996582031, :y1 867.6124572753906, :x2 750.2953033447266, :y2 894.9985961914062, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 891.689453125, :x2 618.1660919189453, :y2 919.0755615234375, :width 839.9999999999999, :height 1092}), :page 243}, :content {:text "If the lambda is the only function argument, or the last argument, you can removethe parentheses around the curly braces, producing cleaner syntax:"}, :properties {:color "yellow"}} {:id #uuid "62af343e-93b8-4a78-8069-1bf73e3bf60e", :page 244, :position {:bounding {:x1 126.2471923828125, :y1 249.199462890625, :x2 453.4686279296875, :y2 268.3697509765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 126.2471923828125, :y1 249.199462890625, :x2 453.4686279296875, :y2 268.3697509765625, :width 839.9999999999999, :height 1092}), :page 244}, :content {:text "list.map {\"[${it.toUpperCase()}]\"}"}, :properties {:color "blue"}} {:id #uuid "62af3451-3548-46ae-84ef-22bdb6256f26", :page 243, :position {:bounding {:x1 126.2471923828125, :y1 787.2655487060547, :x2 461.633056640625, :y2 806.4358367919922, :width 839.9999999999999, :height 1092}, :rects ({:x1 126.2471923828125, :y1 787.2655487060547, :x2 461.633056640625, :y2 806.4358367919922, :width 839.9999999999999, :height 1092}), :page 243}, :content {:text "list.map({\"[${it.toUpperCase()}]\"})"}, :properties {:color "blue"}} {:id #uuid "62af3473-03d4-4fd3-96e2-ed22a50a80fa", :page 244, :position {:bounding {:x1 180.18051147460938, :y1 353.6376037597656, :x2 276.5235595703125, :y2 381.0237731933594, :width 839.9999999999999, :height 1092}, :rects ({:x1 180.18051147460938, :y1 353.6376037597656, :x2 276.5235595703125, :y2 381.0237731933594, :width 839.9999999999999, :height 1092}), :page 244}, :content {:text "parentheses"}, :properties {:color "purple"}} {:id #uuid "62af3675-23d6-42c0-9f0b-31b077897ec6", :page 244, :position {:bounding {:x1 89.98908996582031, :y1 329.5606384277344, :x2 750.2957305908203, :y2 381.0237731933594, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98908996582031, :y1 329.5606384277344, :x2 750.2957305908203, :y2 356.9468078613281, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 353.6376037597656, :x2 175.1786651611328, :y2 381.0237731933594, :width 839.9999999999999, :height 1092}), :page 244}, :content {:text "If the function takes more than one argument, all except the last lambda argumentmust be in"}, :properties {:color "yellow"}} {:id #uuid "62af36a7-383a-40a0-bdd1-2af0f7b57948", :page 244, :position {:bounding {:x1 89.98908996582031, :y1 629.5528564453125, :x2 524.8744659423828, :y2 656.93896484375, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98908996582031, :y1 629.5528564453125, :x2 524.8744659423828, :y2 656.93896484375, :width 839.9999999999999, :height 1092}), :page 244}, :content {:text "If you want to provide the lambda as a named argumen"}, :properties {:color "red"}} {:id #uuid "62af36ac-12b3-402e-aa2a-cffa54f69675", :page 244, :position {:bounding {:x1 89.98908996582031, :y1 629.5528564453125, :x2 750.2633056640625, :y2 681.001708984375, :width 839.9999999999999, :height 1092}, :rects ({:x1 535.249755859375, :y1 629.5528564453125, :x2 750.2633056640625, :y2 656.93896484375, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 653.6155395507812, :x2 419.1584014892578, :y2 681.001708984375, :width 839.9999999999999, :height 1092}), :page 244}, :content {:text " you must place the lambdainside the parentheses of the argument lis"}, :properties {:color "red"}} {:id #uuid "62af36b6-6d3a-412f-b199-7a4e61ca52db", :page 244, :position {:bounding {:x1 126.2471923828125, :y1 841.9665222167969, :x2 335.6369323730469, :y2 861.1368103027344, :width 839.9999999999999, :height 1092}, :rects ({:x1 126.2471923828125, :y1 841.9665222167969, :x2 335.6369323730469, :y2 861.1368103027344, :width 839.9999999999999, :height 1092}), :page 244}, :content {:text "transform = {\"[$it]\"}"}, :properties {:color "blue"}} {:id #uuid "62af36bb-eaa8-48b8-954f-189bdecf10da", :page 244, :position {:bounding {:x1 108.11814880371094, :y1 801.0298767089844, :x2 271.27850341796875, :y2 820.2001647949219, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 801.0298767089844, :x2 271.27850341796875, :y2 820.2001647949219, :width 839.9999999999999, :height 1092}), :page 244}, :content {:text "list.joinToString("}, :properties {:color "yellow"}} {:id #uuid "62af36be-1feb-44da-8961-4187b405a87d", :page 244, :position {:bounding {:x1 126.2471923828125, :y1 821.4982604980469, :x2 272.17816162109375, :y2 840.6685485839844, :width 839.9999999999999, :height 1092}, :rects ({:x1 126.2471923828125, :y1 821.4982604980469, :x2 272.17816162109375, :y2 840.6685485839844, :width 839.9999999999999, :height 1092}), :page 244}, :content {:text "separator =\" \","}, :properties {:color "yellow"}} {:id #uuid "62af36bf-ed60-4d2c-93c6-a09fb7485ace", :page 244, :position {:bounding {:x1 108.11814880371094, :y1 862.4205017089844, :x2 117.18783569335938, :y2 881.5907897949219, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 862.4205017089844, :x2 117.18783569335938, :y2 881.5907897949219, :width 839.9999999999999, :height 1092}), :page 244}, :content {:text ")"}, :properties {:color "yellow"}} {:id #uuid "62af36f3-0447-4811-b755-80e31f26bc73", :page 244, :position {:bounding {:x1 89.50413513183594, :y1 353.6376037597656, :x2 754.9827270507812, :y2 429.1634216308594, :width 839.9999999999999, :height 1092}, :rects ({:x1 285.9236145019531, :y1 353.6376037597656, :x2 698.9498901367188, :y2 381.0237731933594, :width 839.9999999999999, :height 1092} {:x1 705.1214599609375, :y1 356.9325256347656, :x2 754.9827270507812, :y2 377.9285583496094, :width 839.9999999999999, :height 1092} {:x1 193.2005615234375, :y1 377.7003479003906, :x2 684.1943359375, :y2 405.0864562988281, :width 839.9999999999999, :height 1092} {:x1 747.8124389648438, :y1 377.7003479003906, :x2 752.1770629882812, :y2 405.0864562988281, :width 839.9999999999999, :height 1092} {:x1 89.50413513183594, :y1 381.0094909667969, :x2 752.1770629882812, :y2 402.0055236816406, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 401.7773132324219, :x2 342.728759765625, :y2 429.1634216308594, :width 839.9999999999999, :height 1092}), :page 244}, :content {:text "For example, you can specify the last argument forjoin-ToString()as a lambda. The lambda is used to transform each element to aString,then all the elements are joined:"}, :properties {:color "green"}} {:id #uuid "62af3773-90fc-4954-a175-c904cdefd6a8", :page 245, :position {:bounding {:x1 108.11814880371094, :y1 228.731201171875, :x2 425.3354949951172, :y2 288.8380126953125, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 228.731201171875, :x2 425.3354949951172, :y2 247.9014892578125, :width 839.9999999999999, :height 1092} {:x1 126.2471923828125, :y1 249.199462890625, :x2 307.5126647949219, :y2 268.3697509765625, :width 839.9999999999999, :height 1092} {:x1 108.11814880371094, :y1 269.667724609375, :x2 117.19059753417969, :y2 288.8380126953125, :width 839.9999999999999, :height 1092}), :page 245}, :content {:text "list.mapIndexed { index, element ->\"[$index: $element]\"}"}, :properties {:color "blue"}} {:id #uuid "62af3778-5919-49d5-9490-2466f87d1a70", :page 244, :position {:bounding {:x1 140.789794921875, :y1 922.3133850097656, :x2 579.8322143554688, :y2 949.6995239257812, :width 839.9999999999999, :height 1092}, :rects ({:x1 140.789794921875, :y1 922.3133850097656, :x2 579.8322143554688, :y2 949.6995239257812, :width 839.9999999999999, :height 1092}), :page 244}, :content {:text " the syntax for a lambda with more than one parameter"}, :properties {:color "blue"}} {:id #uuid "62af3861-215d-4035-a33b-eed041d7e3cc", :page 245, :position {:bounding {:x1 89.98908996582031, :y1 327.6778564453125, :x2 750.0053100585938, :y2 379.14093017578125, :width 839.9999999999999, :height 1092}, :rects ({:x1 519.8223266601562, :y1 327.6778564453125, :x2 702.989013671875, :y2 355.06396484375, :width 839.9999999999999, :height 1092} {:x1 710.1137084960938, :y1 330.98699951171875, :x2 750.0053100585938, :y2 351.9830322265625, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 351.75482177734375, :x2 607.4405670166016, :y2 379.14093017578125, :width 839.9999999999999, :height 1092}), :page 245}, :content {:text " takes each element inlistand produces the index of that element together with the element"}, :properties {:color "yellow"}} {:id #uuid "62af38a7-0dfc-4285-a1df-c472cc52437f", :page 245, :position {:bounding {:x1 89.98908996582031, :y1 434.0130615234375, :x2 750.2746734619141, :y2 485.47613525390625, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98908996582031, :y1 434.0130615234375, :x2 750.2746734619141, :y2 461.399169921875, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 458.09002685546875, :x2 517.8850250244141, :y2 485.47613525390625, :width 839.9999999999999, :height 1092}), :page 245}, :content {:text "If you aren’t using a particular argument, you can ignore it using an underscore toeliminate compiler warnings about unused identifiers:"}, :properties {:color "yellow"}} {:id #uuid "62af3955-1daf-46e2-b575-c88bce500760", :page 245, :position {:bounding {:x1 108.11814880371094, :y1 603.6216125488281, :x2 370.9573211669922, :y2 663.7284851074219, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 603.6216125488281, :x2 370.9573211669922, :y2 622.7919006347656, :width 839.9999999999999, :height 1092} {:x1 126.2471923828125, :y1 624.0898742675781, :x2 216.89471435546875, :y2 643.2601623535156, :width 839.9999999999999, :height 1092} {:x1 108.11814880371094, :y1 644.5581359863281, :x2 117.19059753417969, :y2 663.7284851074219, :width 839.9999999999999, :height 1092}), :page 245}, :content {:text "list.mapIndexed { index, _ ->\"[$index]\"}"}, :properties {:color "yellow"}} {:id #uuid "62af39c0-fd43-4e56-936e-5fd2f2cd4e67", :page 246, :position {:bounding {:x1 89.43281555175781, :y1 370.48297119140625, :x2 573.4352416992188, :y2 397.86907958984375, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.43281555175781, :y1 370.48297119140625, :x2 251.96145629882812, :y2 397.86907958984375, :width 839.9999999999999, :height 1092} {:x1 311.73114013671875, :y1 370.48297119140625, :x2 573.4352416992188, :y2 397.86907958984375, :width 839.9999999999999, :height 1092} {:x1 256.8875732421875, :y1 373.7921142578125, :x2 306.74884033203125, :y2 394.78814697265625, :width 839.9999999999999, :height 1092}), :page 246}, :content {:text "The standard libraryrun()simply calls its lambda argument"}, :properties {:color "yellow"}} {:id #uuid "62af39cf-025c-4342-83dd-4922a184d627", :page 245, :position {:bounding {:x1 89.98908996582031, :y1 947.0179748535156, :x2 750.6128082275391, :y2 998.4810485839844, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98908996582031, :y1 947.0179748535156, :x2 750.6128082275391, :y2 974.4040832519531, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 971.0949401855469, :x2 638.1814727783203, :y2 998.4810485839844, :width 839.9999999999999, :height 1092}), :page 245}, :content {:text "Lambdas can have zero parameters, in which case you can leave the arrow foremphasis, but the Kotlin style guide recommends omitting the arrow:"}, :properties {:color "yellow"}} {:id #uuid "62af39df-a46f-4e68-a4b5-ba49127fa591", :page 246, :position {:bounding {:x1 89.41854858398438, :y1 449.218017578125, :x2 750.4441833496094, :y2 524.7581176757812, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.41854858398438, :y1 449.218017578125, :x2 750.4441833496094, :y2 476.60418701171875, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 473.29498291015625, :x2 750.2970123291016, :y2 500.68115234375, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 477.859375, :x2 750.2970123291016, :y2 497.0296630859375, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 497.37200927734375, :x2 288.5128173828125, :y2 524.7581176757812, :width 839.9999999999999, :height 1092}), :page 246}, :content {:text "You can use a lambda anywhere you use a regular function, but if the lambda becomestoo complex it’s often better to define a named function, for clarity, even if you’reonly going to use it once."}, :properties {:color "blue"}} {:id #uuid "62af3a71-3241-4063-acfb-edddb666aed5", :page 247, :position {:bounding {:x1 89.98908996582031, :y1 434.398193359375, :x2 750.2804565429688, :y2 485.86126708984375, :width 839.9999999999999, :height 1092}, :rects ({:x1 182.48516845703125, :y1 434.398193359375, :x2 750.2804565429688, :y2 461.7843017578125, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 458.47515869140625, :x2 451.1952667236328, :y2 485.86126708984375, :width 839.9999999999999, :height 1092} {:x1 580.6572265625, :y1 458.47515869140625, :x2 660.565185546875, :y2 485.86126708984375, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 463.03948974609375, :x2 575.697998046875, :y2 482.20977783203125, :width 839.9999999999999, :height 1092}), :page 247}, :content {:text " Suppose we don’t have a rich library of functions for working withcollections—we’d have to implement our ownfilterEven()operation:"}, :properties {:color "yellow"}} {:id #uuid "62af3a96-e5a2-421d-b0b6-55bf6d95e7c7", :page 247, :position {:bounding {:x1 89.98908996582031, :y1 585.4212493896484, :x2 470.671875, :y2 604.5915374755859, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98908996582031, :y1 585.4212493896484, :x2 470.671875, :y2 604.5915374755859, :width 839.9999999999999, :height 1092}), :page 247}, :content {:text "funfilterEven(nums: List<Int>): List<Int>"}, :properties {:color "blue"}} {:id #uuid "62af3a9a-4d22-47ab-bea0-8ca4edc820c5", :page 247, :position {:bounding {:x1 108.11814880371094, :y1 810.5295257568359, :x2 380.0528564453125, :y2 829.6998138427734, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 810.5295257568359, :x2 380.0528564453125, :y2 829.6998138427734, :width 839.9999999999999, :height 1092}), :page 247}, :content {:text "filterEven(listOf(1,2,3,4))"}, :properties {:color "blue"}} {:id #uuid "62af3b5c-e525-4734-96c9-ca9c25b53847", :page 247, :position {:bounding {:x1 89.98908996582031, :y1 925.2659606933594, :x2 750.2738037109375, :y2 1000.8059997558594, :width 839.9999999999999, :height 1092}, :rects ({:x1 686.6359252929688, :y1 925.2659606933594, :x2 750.2738037109375, :y2 952.6520690917969, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 949.3429260253906, :x2 127.63671875, :y2 976.7290344238281, :width 839.9999999999999, :height 1092} {:x1 258.52789306640625, :y1 949.3429260253906, :x2 750.2130126953125, :y2 976.7290344238281, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 953.9072570800781, :x2 750.2130126953125, :y2 973.0775451660156, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 973.4198913574219, :x2 189.25160217285156, :y2 1000.8059997558594, :width 839.9999999999999, :height 1092}), :page 247}, :content {:text "You cancopyfilterEven()and modify the small part that chooses the elements includedin the result:"}, :properties {:color "yellow"}} {:id #uuid "62af3b82-f3ec-4b6a-ba79-f4d974c29c09", :page 248, :position {:bounding {:x1 126.2471923828125, :y1 269.66778564453125, :x2 370.96954345703125, :y2 288.83807373046875, :width 839.9999999999999, :height 1092}, :rects ({:x1 126.2471923828125, :y1 269.66778564453125, :x2 235.01397705078125, :y2 288.83807373046875, :width 839.9999999999999, :height 1092} {:x1 316.59503173828125, :y1 269.66778564453125, :x2 370.96954345703125, :y2 288.83807373046875, :width 839.9999999999999, :height 1092}), :page 248}, :content {:text "if(i >2) {// [1]"}, :properties {:color "red"}} {:id #uuid "62af3b85-628c-4337-a591-a57ae9d244d9", :page 247, :position {:bounding {:x1 126.2471923828125, :y1 646.8118209838867, :x2 370.96954345703125, :y2 665.9821166992188, :width 839.9999999999999, :height 1092}, :rects ({:x1 126.2471923828125, :y1 646.8118209838867, :x2 280.3294677734375, :y2 665.9821166992188, :width 839.9999999999999, :height 1092} {:x1 316.59503173828125, :y1 646.8118209838867, :x2 370.96954345703125, :y2 665.9821166992188, :width 839.9999999999999, :height 1092}), :page 247}, :content {:text "if(i %2==0) {// [1]"}, :properties {:color "red"}} {:id #uuid "62af3bb3-d3df-4b4a-8fd3-ce41273c3dd9", :page 248, :position {:bounding {:x1 89.07623291015625, :y1 562.3141784667969, :x2 581.5404663085938, :y2 589.7003479003906, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.07623291015625, :y1 562.3141784667969, :x2 581.5404663085938, :y2 589.7003479003906, :width 839.9999999999999, :height 1092}), :page 248}, :content {:text "With lambdas, we can use the same function for both cases. "}, :properties {:color "yellow"}} {:id #uuid "62af3cf0-8864-4254-a4e4-5e9d0aa72975", :page 248, :position {:bounding {:x1 108.11814880371094, :y1 749.2387542724609, :x2 453.4686279296875, :y2 768.4090423583984, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 749.2387542724609, :x2 453.4686279296875, :y2 768.4090423583984, :width 839.9999999999999, :height 1092}), :page 248}, :content {:text "valeven = list.filter { it %2==0}"}, :properties {:color "blue"}} {:id #uuid "62af3cf3-966a-4c78-830d-b5c5f397e91f", :page 248, :position {:bounding {:x1 108.11814880371094, :y1 769.6927947998047, :x2 480.6693115234375, :y2 788.8630828857422, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 769.6927947998047, :x2 480.6693115234375, :y2 788.8630828857422, :width 839.9999999999999, :height 1092}), :page 248}, :content {:text "valgreaterThan2 = list.filter { it >2}"}, :properties {:color "blue"}} {:id #uuid "62af3d14-8af9-4eda-be9c-b14329bad2f5", :page 248, :position {:bounding {:x1 89.98908996582031, :y1 562.3142070770264, :x2 752.448486328125, :y2 637.8542461395264, :width 839.9999999999999, :height 1092}, :rects ({:x1 581.5260620117188, :y1 562.3142070770264, :x2 750.7723388671875, :y2 589.7003154754639, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 586.3911724090576, :x2 156.51885986328125, :y2 613.7772808074951, :width 839.9999999999999, :height 1092} {:x1 247.60195922851562, :y1 586.3911724090576, :x2 752.448486328125, :y2 613.7772808074951, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 590.9555034637451, :x2 752.448486328125, :y2 610.1257915496826, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 610.4681377410889, :x2 368.5745391845703, :y2 637.8542461395264, :width 839.9999999999999, :height 1092}), :page 248}, :content {:text "The standard libraryfunctionfilter()takes a predicate specifying the elements you want to preserve,and this predicate can be a lambda:"}, :properties {:color "green"}} {:id #uuid "62af3ddf-c08e-42e3-af60-2472240b9d60", :page 248, :position {:bounding {:x1 89.98908996582031, :y1 861.8641948699951, :x2 753.6507568359375, :y2 937.4042949676514, :width 839.9999999999999, :height 1092}, :rects ({:x1 508.84100341796875, :y1 861.8641948699951, :x2 554.9414672851562, :y2 889.2503643035889, :width 839.9999999999999, :height 1092} {:x1 601.2538452148438, :y1 861.8641948699951, :x2 630.6878051757812, :y2 889.2503643035889, :width 839.9999999999999, :height 1092} {:x1 558.0493774414062, :y1 865.1733989715576, :x2 753.6507568359375, :y2 886.1694316864014, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 885.9412212371826, :x2 116.09556579589844, :y2 913.3273296356201, :width 839.9999999999999, :height 1092} {:x1 204.96804809570312, :y1 885.9412212371826, :x2 453.03070068359375, :y2 913.3273296356201, :width 839.9999999999999, :height 1092} {:x1 541.8031005859375, :y1 885.9412212371826, :x2 750.0751342773438, :y2 913.3273296356201, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 890.5055522918701, :x2 750.0751342773438, :y2 911.5015850067139, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 910.0181865692139, :x2 376.52906799316406, :y2 937.4042949676514, :width 839.9999999999999, :height 1092}), :page 248}, :content {:text ". BothevenandgreaterThan2usefilter()and differ only in the predicate.filter()has been heavily tested, soyou’re less likely to introduce a bug."}, :properties {:color "yellow"}} {:id #uuid "62af3df1-5ec2-4ff5-8047-c2bca6056756", :page 248, :position {:bounding {:x1 89.98908996582031, :y1 943.1668014526367, :x2 753.5919799804688, :y2 994.6298751831055, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98908996582031, :y1 943.1668014526367, :x2 178.262939453125, :y2 970.5529098510742, :width 839.9999999999999, :height 1092} {:x1 268.5552062988281, :y1 943.1668014526367, :x2 753.5919799804688, :y2 970.5529098510742, :width 839.9999999999999, :height 1092} {:x1 183.50131225585938, :y1 946.475944519043, :x2 753.5919799804688, :y2 967.4719772338867, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 967.243766784668, :x2 164.9138946533203, :y2 994.6298751831055, :width 839.9999999999999, :height 1092}), :page 248}, :content {:text "Notice thatfilter()handles the iteration that would otherwise require handwrit-ten code. "}, :properties {:color "red"}} {:id #uuid "62af3e1e-e26c-4898-b5c7-9a589fdc3328", :page 248, :position {:bounding {:x1 164.9000244140625, :y1 967.243766784668, :x2 742.0358276367188, :y2 994.6298751831055, :width 839.9999999999999, :height 1092}, :rects ({:x1 164.9000244140625, :y1 967.243766784668, :x2 742.0358276367188, :y2 994.6298751831055, :width 839.9999999999999, :height 1092}), :page 248}, :content {:text "Although managing the iteration yourself might not seem like much effor"}, :properties {:color "yellow"}} {:id #uuid "62af3ecf-c0f2-4f81-9159-a070054fe09d", :page 249, :position {:bounding {:x1 255.77255249023438, :y1 204.3118896484375, :x2 702.5123901367188, :y2 231.697998046875, :width 839.9999999999999, :height 1092}, :rects ({:x1 255.77255249023438, :y1 204.3118896484375, :x2 702.5123901367188, :y2 231.697998046875, :width 839.9999999999999, :height 1092}), :page 249}, :content {:text " Functional programming solves problems in small step"}, :properties {:color "yellow"}} {:id #uuid "62af3ee5-cd98-4d3c-9d50-b292ae4579cc", :page 249, :position {:bounding {:x1 89.98908996582031, :y1 204.31195068359375, :x2 750.2735137939453, :y2 279.85198974609375, :width 839.9999999999999, :height 1092}, :rects ({:x1 714.0319213867188, :y1 204.31195068359375, :x2 750.262451171875, :y2 231.69805908203125, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 228.388916015625, :x2 750.2735137939453, :y2 255.7750244140625, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 232.9532470703125, :x2 750.2735137939453, :y2 252.12353515625, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 252.46588134765625, :x2 224.20614624023438, :y2 279.85198974609375, :width 839.9999999999999, :height 1092} {:x1 281.5493469238281, :y1 252.46588134765625, :x2 310.98333740234375, :y2 279.85198974609375, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 257.03021240234375, :x2 394.5110168457031, :y2 278.0262451171875, :width 839.9999999999999, :height 1092}), :page 249}, :content {:text " Thefunctions often do things that seem trivial—it’s not that hard to write your own coderather than usingmap()andfilter()"}, :properties {:color "yellow"}} {:id #uuid "62af4067-be7a-4224-afb6-c07c34b7b19b", :page 249, :position {:bounding {:x1 89.41854858398438, :y1 335.0093078613281, :x2 750.688232421875, :y2 386.4724426269531, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.41854858398438, :y1 335.0093078613281, :x2 307.8681335449219, :y2 362.3954772949219, :width 839.9999999999999, :height 1092} {:x1 347.7039489746094, :y1 335.0093078613281, :x2 364.42108154296875, :y2 362.3954772949219, :width 839.9999999999999, :height 1092} {:x1 399.3382263183594, :y1 335.0093078613281, :x2 750.688232421875, :y2 362.3954772949219, :width 839.9999999999999, :height 1092} {:x1 312.7866516113281, :y1 338.3185119628906, :x2 750.688232421875, :y2 359.3145446777344, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 359.0863342285156, :x2 468.9644317626953, :y2 386.4724426269531, :width 839.9999999999999, :height 1092}), :page 249}, :content {:text "You can store a lambda in avarorval. This allows reuse of that lambda’s logic, bypassing it as an argument to different functions:"}, :properties {:color "yellow"}} {:id #uuid "62af40ac-888c-4691-9f7b-9f3a983a3ea3", :page 249, :position {:bounding {:x1 108.11814880371094, :y1 506.4864501953125, :x2 444.4112243652344, :y2 525.65673828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 506.4864501953125, :x2 444.4112243652344, :y2 525.65673828125, :width 839.9999999999999, :height 1092}), :page 249}, :content {:text "valisEven = { e: Int -> e %2==0}"}, :properties {:color "red"}} {:id #uuid "62af40cb-2325-4443-b20e-cf125a75988b", :page 249, :position {:bounding {:x1 89.98908996582031, :y1 631.3786010742188, :x2 750.1279907226562, :y2 682.8416748046875, :width 839.9999999999999, :height 1092}, :rects ({:x1 337.1182861328125, :y1 631.3786010742188, :x2 502.744384765625, :y2 658.7647094726562, :width 839.9999999999999, :height 1092} {:x1 566.12255859375, :y1 631.3786010742188, :x2 750.1279907226562, :y2 658.7647094726562, :width 839.9999999999999, :height 1092} {:x1 509.467529296875, :y1 634.687744140625, :x2 750.1279907226562, :y2 655.6837768554688, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 655.45556640625, :x2 316.1387023925781, :y2 682.8416748046875, :width 839.9999999999999, :height 1092} {:x1 373.207275390625, :y1 655.45556640625, :x2 605.0255737304688, :y2 682.8416748046875, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 660.0198974609375, :x2 364.58837890625, :y2 679.190185546875, :width 839.9999999999999, :height 1092}), :page 249}, :content {:text "The library functionany()checks whether there’sat least one element in theListsatisfying a given predicate"}, :properties {:color "red"}} {:id #uuid "62af410d-6c20-4efc-ae96-84578b22fd2a", :page 249, :position {:bounding {:x1 89.98908996582031, :y1 655.45556640625, :x2 750.2609710693359, :y2 730.99560546875, :width 839.9999999999999, :height 1092}, :rects ({:x1 609.6102294921875, :y1 655.45556640625, :x2 750.1561889648438, :y2 682.8416748046875, :width 839.9999999999999, :height 1092} {:x1 154.58897399902344, :y1 679.5325317382812, :x2 750.2609710693359, :y2 706.9186401367188, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 682.8416748046875, :x2 750.2609710693359, :y2 703.8377075195312, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 703.6094970703125, :x2 173.359130859375, :y2 730.99560546875, :width 839.9999999999999, :height 1092}), :page 249}, :content {:text " When we defineisEvenwe must specify the parameter type because there is no context for the typeinferencer."}, :properties {:color "red"}} {:id #uuid "62af418a-7c1e-4974-a0ec-929c8d0ed1c1", :page 249, :position {:bounding {:x1 89.26165771484375, :y1 762.0760498046875, :x2 752.4632415771484, :y2 813.5391235351562, :width 839.9999999999999, :height 1092}, :rects ({:x1 143.0684051513672, :y1 762.0760498046875, :x2 752.4632415771484, :y2 789.462158203125, :width 839.9999999999999, :height 1092} {:x1 89.26165771484375, :y1 786.1530151367188, :x2 240.61810302734375, :y2 813.5391235351562, :width 839.9999999999999, :height 1092} {:x1 89.26165771484375, :y1 790.7173461914062, :x2 236.39028930664062, :y2 809.8876342773438, :width 839.9999999999999, :height 1092}), :page 249}, :content {:text "When a function “closes over” or “captures” the elements in its environment,we call it aclosure."}, :properties {:color "red"}} {:id #uuid "62af41b5-3ed0-4cc7-8f78-9d481da9c6b8", :page 249, :position {:bounding {:x1 89.98908996582031, :y1 737.9990844726562, :x2 750.6510009765625, :y2 789.462158203125, :width 839.9999999999999, :height 1092}, :rects ({:x1 407.03271484375, :y1 737.9990844726562, :x2 750.6510009765625, :y2 765.3851928710938, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 762.0760498046875, :x2 133.8921356201172, :y2 789.462158203125, :width 839.9999999999999, :height 1092}), :page 249}, :content {:text " the ability to refer to elements outside theirscope"}, :properties {:color "blue"}} {:id #uuid "62af45bd-23bb-49d2-96b7-1869a15a7993", :page 250, :position {:bounding {:x1 108.11814880371094, :y1 249.199462890625, :x2 407.25250244140625, :y2 268.3697509765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 249.199462890625, :x2 407.25250244140625, :y2 268.3697509765625, :width 839.9999999999999, :height 1092}), :page 250}, :content {:text "list.filter { it % divider ==0}"}, :properties {:color "red"}} {:id #uuid "62af45ca-d7ee-4180-83b0-136a26fa5f68", :page 250, :position {:bounding {:x1 89.98908996582031, :y1 322.585693359375, :x2 748.8151245117188, :y2 349.97186279296875, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98908996582031, :y1 322.585693359375, :x2 348.15577697753906, :y2 349.97186279296875, :width 839.9999999999999, :height 1092} {:x1 471.32666015625, :y1 322.585693359375, :x2 748.8151245117188, :y2 349.97186279296875, :width 839.9999999999999, :height 1092} {:x1 354.85003662109375, :y1 325.8948974609375, :x2 464.5240478515625, :y2 346.89093017578125, :width 839.9999999999999, :height 1092}), :page 250}, :content {:text "Here, the lambda “captures” theval dividerthat is defined outside the lambda"}, :properties {:color "red"}} {:id #uuid "62af45d0-ba1b-43fa-8e65-01e5a2ffa48c", :page 250, :position {:bounding {:x1 89.43281555175781, :y1 346.6627197265625, :x2 651.2715606689453, :y2 374.048828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.43281555175781, :y1 346.6627197265625, :x2 651.2715606689453, :y2 374.048828125, :width 839.9999999999999, :height 1092}), :page 250}, :content {:text "The lambda not only reads captured elements, it can also modify them:"}, :properties {:color "red"}} {:id #uuid "62af4644-c7bd-4aee-b7fe-2f108015203f", :page 250, :position {:bounding {:x1 89.98908996582031, :y1 679.3471069335938, :x2 750.0289306640625, :y2 730.8101806640625, :width 839.9999999999999, :height 1092}, :rects ({:x1 675.8810424804688, :y1 679.3471069335938, :x2 750.0289306640625, :y2 706.7332153320312, :width 839.9999999999999, :height 1092} {:x1 675.87255859375, :y1 682.65625, :x2 750.0289306640625, :y2 703.6522827148438, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 703.424072265625, :x2 706.9676666259766, :y2 730.8101806640625, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 707.9884033203125, :x2 706.9676666259766, :y2 727.15869140625, :width 839.9999999999999, :height 1092}), :page 250}, :content {:text ", you canusually change your code and avoid modifying the state of your environment:"}, :properties {:color "yellow"}} {:id #uuid "62af464e-c7a3-448a-847f-21a985f4eb5b", :page 250, :position {:bounding {:x1 89.98908996582031, :y1 937.7037811279297, :x2 632.13525390625, :y2 965.0898895263672, :width 839.9999999999999, :height 1092}, :rects ({:x1 144.83267211914062, :y1 937.7037811279297, :x2 632.13525390625, :y2 965.0898895263672, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 941.0129852294922, :x2 139.85037231445312, :y2 962.0089569091797, :width 839.9999999999999, :height 1092}), :page 250}, :content {:text "sum()works on a list of numbers, adding all the elements in the list."}, :properties {:color "yellow"}} {:id #uuid "62af4665-6733-4524-83c0-92cdcdfce2ef", :page 251, :position {:bounding {:x1 89.98908996582031, :y1 431.87353515625, :x2 524.0606079101562, :y2 459.2596435546875, :width 839.9999999999999, :height 1092}, :rects ({:x1 154.8029327392578, :y1 431.87353515625, :x2 328.2298583984375, :y2 459.2596435546875, :width 839.9999999999999, :height 1092} {:x1 348.0890808105469, :y1 431.87353515625, :x2 524.0606079101562, :y2 459.2596435546875, :width 839.9999999999999, :height 1092} {:x1 89.98908996582031, :y1 435.1827392578125, :x2 344.1095275878906, :y2 456.1787109375, :width 839.9999999999999, :height 1092}), :page 251}, :content {:text "useX()captures and modifiesxfrom its surroundings."}, :properties {:color "red"}} {:id #uuid "62b00a57-7351-4592-86e7-d80ccc8548af", :page 252, :position {:bounding {:x1 131.5, :y1 260.921875, :x2 708.8240356445312, :y2 313, :width 839.9999999999999, :height 1092}, :rects ({:x1 596.9544067382812, :y1 260.921875, :x2 708.8240356445312, :y2 288.921875, :width 839.9999999999999, :height 1092} {:x1 131.5, :y1 285, :x2 461.66485595703125, :y2 313, :width 839.9999999999999, :height 1092}), :page 252}, :content {:text "easily performbatch operations on collections of objects."}, :properties {:color "yellow"}} {:id #uuid "62b00a7e-1ac1-46d1-ae97-b53062a13f55", :page 252, :position {:bounding {:x1 297.39959716796875, :y1 361.734375, :x2 665.8551025390625, :y2 389.734375, :width 839.9999999999999, :height 1092}, :rects ({:x1 297.39959716796875, :y1 361.734375, :x2 463.0047607421875, :y2 389.734375, :width 839.9999999999999, :height 1092} {:x1 517.609375, :y1 361.734375, :x2 521.984375, :y2 389.734375, :width 839.9999999999999, :height 1092} {:x1 606.6875, :y1 361.734375, :x2 611.0625, :y2 389.734375, :width 839.9999999999999, :height 1092} {:x1 467.75, :y1 365.296875, :x2 665.8551025390625, :y2 386.296875, :width 839.9999999999999, :height 1092}), :page 252}, :content {:text ". You’ve already seenmap(),filter(),any()"}, :properties {:color "yellow"}} {:id #uuid "62b00aac-aaac-4b60-8123-af35c415d04c", :page 250, :position {:bounding {:x1 108.125, :y1 864.15625, :x2 408.140625, :y2 884.15625, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.125, :y1 864.15625, :x2 408.140625, :y2 884.15625, :width 839.9999999999999, :height 1092}), :page 250}, :content {:text "list.filter { it % divider ==0}"}, :properties {:color "yellow"}} {:id #uuid "62b00aaf-2d93-4769-a5d8-23ff465751b1", :page 250, :position {:bounding {:x1 108.125, :y1 527.859375, :x2 408.140625, :y2 588.78125, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.125, :y1 527.859375, :x2 408.140625, :y2 547.859375, :width 839.9999999999999, :height 1092} {:x1 126.25, :y1 548.328125, :x2 325.6854248046875, :y2 568.328125, :width 839.9999999999999, :height 1092} {:x1 108.125, :y1 568.78125, :x2 181.546875, :y2 588.78125, :width 839.9999999999999, :height 1092}), :page 250}, :content {:text "list.filter { it % divider ==0}.forEach { sum += it }sum eq1"}, :properties {:color "yellow"}} {:id #uuid "62b00bd2-7194-4243-8e5f-b4613ada3969", :page 252, :position {:bounding {:x1 108.125, :y1 595.546875, :x2 507.012451171875, :y2 636.015625, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.125, :y1 595.546875, :x2 507.012451171875, :y2 615.546875, :width 839.9999999999999, :height 1092} {:x1 108.125, :y1 616.015625, :x2 352.86419677734375, :y2 636.015625, :width 839.9999999999999, :height 1092}), :page 252}, :content {:text "// The lambda argument is the element index:vallist1 = List(10) { it }"}, :properties {:color "red"}} {:id #uuid "62b00bd7-ce73-4eec-8012-c5862d287a73", :page 252, :position {:bounding {:x1 108.125, :y1 677.40625, :x2 361.9667663574219, :y2 717.875, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.125, :y1 677.40625, :x2 361.9667663574219, :y2 697.40625, :width 839.9999999999999, :height 1092} {:x1 108.125, :y1 697.875, :x2 344.703125, :y2 717.875, :width 839.9999999999999, :height 1092}), :page 252}, :content {:text "// A list of a single value:vallist2 = List(10) {0}"}, :properties {:color "red"}} {:id #uuid "62b00bd9-662d-4114-ac27-7bd1ce774d14", :page 252, :position {:bounding {:x1 108.125, :y1 759.265625, :x2 407.2491149902344, :y2 799.734375, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.125, :y1 759.265625, :x2 298.5021667480469, :y2 779.265625, :width 839.9999999999999, :height 1092} {:x1 108.125, :y1 779.734375, :x2 407.2491149902344, :y2 799.734375, :width 839.9999999999999, :height 1092}), :page 252}, :content {:text "// A list of letters:vallist3 = List(10) {'a'+ it }"}, :properties {:color "red"}} {:id #uuid "62b00bdc-8920-4fa6-b8fa-3e2ba30c03d3", :page 252, :position {:bounding {:x1 108.125, :y1 841.125, :x2 452.5615234375, :y2 881.59375, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.125, :y1 841.125, :x2 361.9667663574219, :y2 861.125, :width 839.9999999999999, :height 1092} {:x1 108.125, :y1 861.59375, :x2 452.5615234375, :y2 881.59375, :width 839.9999999999999, :height 1092}), :page 252}, :content {:text "// Cycle through a sequence:vallist4 = List(10) { list3[it %3] }"}, :properties {:color "red"}} {:id #uuid "62b00c03-60f0-4276-b02e-a787b6bd6546", :page 253, :position {:bounding {:x1 90, :y1 121.34375, :x2 750.3744964599609, :y2 173.421875, :width 839.9999999999999, :height 1092}, :rects ({:x1 179.2515106201172, :y1 121.34375, :x2 750.3744964599609, :y2 149.34375, :width 839.9999999999999, :height 1092} {:x1 90, :y1 145.421875, :x2 229.50250244140625, :y2 173.421875, :width 839.9999999999999, :height 1092}), :page 253}, :content {:text "Remember that if a lambda is the last argument, it can be separated fromthe argument list."}, :properties {:color "red"}} {:id #uuid "62b00c11-ba34-47ef-a61b-401dd850eec5", :page 253, :position {:bounding {:x1 90, :y1 179.796875, :x2 505.4591064453125, :y2 207.796875, :width 839.9999999999999, :height 1092}, :rects ({:x1 199.671875, :y1 179.796875, :x2 505.4591064453125, :y2 207.796875, :width 839.9999999999999, :height 1092} {:x1 90, :y1 183.375, :x2 199.70989990234375, :y2 204.375, :width 839.9999999999999, :height 1092}), :page 253}, :content {:text "MutableLists can be initialized in the same way. "}, :properties {:color "yellow"}} {:id #uuid "62b00c33-fb65-4dc6-83c3-38216bad13b4", :page 253, :position {:bounding {:x1 108.125, :y1 355.15625, :x2 425.368408203125, :y2 395.625, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.125, :y1 355.15625, :x2 271.28759765625, :y2 375.15625, :width 839.9999999999999, :height 1092} {:x1 126.25, :y1 375.625, :x2 425.368408203125, :y2 395.625, :width 839.9999999999999, :height 1092}), :page 253}, :content {:text "valmutableList1 =MutableList(5, {10* (it +1) })"}, :properties {:color "yellow"}} {:id #uuid "62b00c36-2e3d-4e81-b35e-b22261d58cfb", :page 253, :position {:bounding {:x1 108.125, :y1 416.546875, :x2 416.2959289550781, :y2 457.015625, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.125, :y1 416.546875, :x2 271.28759765625, :y2 436.546875, :width 839.9999999999999, :height 1092} {:x1 126.25, :y1 437.015625, :x2 416.2959289550781, :y2 457.015625, :width 839.9999999999999, :height 1092}), :page 253}, :content {:text "valmutableList2 =MutableList(5) {10* (it +1) }"}, :properties {:color "yellow"}} {:id #uuid "62b00c41-f8b8-4fbb-be2e-5253367f9d88", :page 253, :position {:bounding {:x1 90, :y1 517.109375, :x2 706.0480346679688, :y2 545.109375, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 517.109375, :x2 166.72030639648438, :y2 545.109375, :width 839.9999999999999, :height 1092} {:x1 241.125, :y1 517.109375, :x2 270.56842041015625, :y2 545.109375, :width 839.9999999999999, :height 1092} {:x1 414.796875, :y1 517.109375, :x2 706.0480346679688, :y2 545.109375, :width 839.9999999999999, :height 1092} {:x1 173.984375, :y1 520.6875, :x2 407.50616455078125, :y2 541.6875, :width 839.9999999999999, :height 1092}), :page 253}, :content {:text "Note thatList()andMutableList()are not constructors, but functions. "}, :properties {:color "red"}} {:id #uuid "62b00c50-2867-4797-b2ef-96ae378882b4", :page 253, :position {:bounding {:x1 90, :y1 517.109375, :x2 753.7198486328125, :y2 593.265625, :width 839.9999999999999, :height 1092}, :rects ({:x1 706.0322265625, :y1 517.109375, :x2 750.52587890625, :y2 545.109375, :width 839.9999999999999, :height 1092} {:x1 90, :y1 541.1875, :x2 753.7198486328125, :y2 569.1875, :width 839.9999999999999, :height 1092} {:x1 90, :y1 546.1875, :x2 753.7198486328125, :y2 565.1875, :width 839.9999999999999, :height 1092} {:x1 90, :y1 565.265625, :x2 124.44308471679688, :y2 593.265625, :width 839.9999999999999, :height 1092}), :page 253}, :content {:text "Theirnames intentionally begin with an upper-case letter to make them look like construc-tors."}, :properties {:color "yellow"}} {:id #uuid "62b00cd4-6775-4bb8-9785-a9dcedbe8955", :page 253, :position {:bounding {:x1 116.21875, :y1 663.09375, :x2 753.5584716796875, :y2 873.703125, :width 839.9999999999999, :height 1092}, :rects ({:x1 116.21875, :y1 663.09375, :x2 123.28125, :y2 691.09375, :width 839.9999999999999, :height 1092} {:x1 215.796875, :y1 663.09375, :x2 753.4028930664062, :y2 691.09375, :width 839.9999999999999, :height 1092} {:x1 131.5, :y1 666.65625, :x2 753.4028930664062, :y2 687.65625, :width 839.9999999999999, :height 1092} {:x1 116.21875, :y1 689.515625, :x2 123.28125, :y2 717.515625, :width 839.9999999999999, :height 1092} {:x1 186.34375, :y1 689.515625, :x2 242.97186279296875, :y2 717.515625, :width 839.9999999999999, :height 1092} {:x1 292.78125, :y1 689.515625, :x2 648.1008911132812, :y2 717.515625, :width 839.9999999999999, :height 1092} {:x1 116.21875, :y1 694.515625, :x2 648.1008911132812, :y2 715.515625, :width 839.9999999999999, :height 1092} {:x1 116.21875, :y1 715.9375, :x2 123.28125, :y2 743.9375, :width 839.9999999999999, :height 1092} {:x1 186.34375, :y1 715.9375, :x2 574.279541015625, :y2 743.9375, :width 839.9999999999999, :height 1092} {:x1 116.21875, :y1 720.9375, :x2 574.279541015625, :y2 739.9375, :width 839.9999999999999, :height 1092} {:x1 116.21875, :y1 742.359375, :x2 123.28125, :y2 770.359375, :width 839.9999999999999, :height 1092} {:x1 196.3125, :y1 742.359375, :x2 550.8522338867188, :y2 770.359375, :width 839.9999999999999, :height 1092} {:x1 116.21875, :y1 747.359375, :x2 550.8522338867188, :y2 766.359375, :width 839.9999999999999, :height 1092} {:x1 116.21875, :y1 768.78125, :x2 123.28125, :y2 796.78125, :width 839.9999999999999, :height 1092} {:x1 196.5, :y1 768.78125, :x2 225.94342041015625, :y2 796.78125, :width 839.9999999999999, :height 1092} {:x1 365.890625, :y1 768.78125, :x2 753.5584716796875, :y2 796.78125, :width 839.9999999999999, :height 1092} {:x1 116.21875, :y1 773.78125, :x2 753.5584716796875, :y2 794.78125, :width 839.9999999999999, :height 1092} {:x1 131.5, :y1 792.859375, :x2 189.1768035888672, :y2 820.859375, :width 839.9999999999999, :height 1092} {:x1 238.984375, :y1 792.859375, :x2 476.2279052734375, :y2 820.859375, :width 839.9999999999999, :height 1092} {:x1 131.5, :y1 797.859375, :x2 476.2279052734375, :y2 816.859375, :width 839.9999999999999, :height 1092} {:x1 116.21875, :y1 819.28125, :x2 123.28125, :y2 847.28125, :width 839.9999999999999, :height 1092} {:x1 256.140625, :y1 819.28125, :x2 655.5120239257812, :y2 847.28125, :width 839.9999999999999, :height 1092} {:x1 700.140625, :y1 819.28125, :x2 704.515625, :y2 847.28125, :width 839.9999999999999, :height 1092} {:x1 116.21875, :y1 824.28125, :x2 704.515625, :y2 845.28125, :width 839.9999999999999, :height 1092} {:x1 116.21875, :y1 845.703125, :x2 123.28125, :y2 873.703125, :width 839.9999999999999, :height 1092} {:x1 206.28125, :y1 845.703125, :x2 646.2420654296875, :y2 873.703125, :width 839.9999999999999, :height 1092} {:x1 116.21875, :y1 850.703125, :x2 201.32183837890625, :y2 869.703125, :width 839.9999999999999, :height 1092}), :page 253}, :content {:text "•filter()produces a list containing all elements matching the given predicate.•any()returnstrueif at least one element matches the predicate.•all()checks whether all elements match the predicate.•none()checks that no elements match the predicate.•find()andfirstOrNull()both return the first element matching the predi-cate, ornullif no such element was found.•lastOrNull()returns the last element matching the predicate, ornull.•count()returns the number of elements matching the predicate."}, :properties {:color "purple"}} {:id #uuid "62b00d30-13b1-48d2-8033-dababdc30f98", :page 254, :position {:bounding {:x1 90, :y1 595.15625, :x2 618.7033081054688, :y2 623.15625, :width 839.9999999999999, :height 1092}, :rects ({:x1 176.125, :y1 595.15625, :x2 205.56842041015625, :y2 623.15625, :width 839.9999999999999, :height 1092} {:x1 288.078125, :y1 595.15625, :x2 618.7033081054688, :y2 623.15625, :width 839.9999999999999, :height 1092} {:x1 90, :y1 598.734375, :x2 281.72808837890625, :y2 619.734375, :width 839.9999999999999, :height 1092}), :page 254}, :content {:text "filter()andcount()apply the predicate against each element"}, :properties {:color "yellow"}} {:id #uuid "62b00d3b-c675-45a9-9d10-d6956c0d8219", :page 254, :position {:bounding {:x1 186.8531494140625, :y1 619.234375, :x2 496.376708984375, :y2 647.234375, :width 839.9999999999999, :height 1092}, :rects ({:x1 186.8531494140625, :y1 619.234375, :x2 496.376708984375, :y2 647.234375, :width 839.9999999999999, :height 1092}), :page 254}, :content {:text " when the first matching result is found."}, :properties {:color "red"}} {:id #uuid "62b00d5a-d6a3-447b-be83-edc82cdcb9ed", :page 254, :position {:bounding {:x1 90, :y1 725.859375, :x2 651.5325927734375, :y2 753.859375, :width 839.9999999999999, :height 1092}, :rects ({:x1 177.3125, :y1 725.859375, :x2 651.5325927734375, :y2 753.859375, :width 839.9999999999999, :height 1092} {:x1 90, :y1 729.421875, :x2 169.79029846191406, :y2 750.421875, :width 839.9999999999999, :height 1092}), :page 254}, :content {:text "filter()returns a group of elements satisfying the given predicate"}, :properties {:color "yellow"}} {:id #uuid "62b00d85-e501-4a8d-b2af-2b060e2ce741", :page 254, :position {:bounding {:x1 90, :y1 774, :x2 750.0121459960938, :y2 826.078125, :width 839.9999999999999, :height 1092}, :rects ({:x1 547.038818359375, :y1 774, :x2 574.2512817382812, :y2 802, :width 839.9999999999999, :height 1092} {:x1 697.28125, :y1 774, :x2 750.0121459960938, :y2 802, :width 839.9999999999999, :height 1092} {:x1 580.84375, :y1 777.578125, :x2 750.0121459960938, :y2 798.578125, :width 839.9999999999999, :height 1092} {:x1 90, :y1 798.078125, :x2 548.86083984375, :y2 826.078125, :width 839.9999999999999, :height 1092}), :page 254}, :content {:text "butpartition()can bemore useful because it simultaneously produces both lists:"}, :properties {:color "red"}} {:id #uuid "62b00d9b-1119-4362-8887-e152f8f7c0a5", :page 254, :position {:bounding {:x1 173.375, :y1 774, :x2 537.6859741210938, :y2 802, :width 839.9999999999999, :height 1092}, :rects ({:x1 289.8125, :y1 774, :x2 537.6859741210938, :y2 802, :width 839.9999999999999, :height 1092} {:x1 173.375, :y1 777.578125, :x2 283.0848693847656, :y2 798.578125, :width 839.9999999999999, :height 1092}), :page 254}, :content {:text "filterNot()produces this remaining group"}, :properties {:color "red"}} {:id #uuid "62b00db5-6521-4e78-8f22-df8005a6bab7", :page 255, :position {:bounding {:x1 90, :y1 431.4375, :x2 545.9785766601562, :y2 459.4375, :width 839.9999999999999, :height 1092}, :rects ({:x1 206, :y1 431.4375, :x2 292.2090759277344, :y2 459.4375, :width 839.9999999999999, :height 1092} {:x1 344.71875, :y1 431.4375, :x2 483.1002197265625, :y2 459.4375, :width 839.9999999999999, :height 1092} {:x1 529.265625, :y1 431.4375, :x2 545.9785766601562, :y2 459.4375, :width 839.9999999999999, :height 1092} {:x1 90, :y1 435.015625, :x2 529.2772827148438, :y2 456.015625, :width 839.9999999999999, :height 1092}), :page 255}, :content {:text "partition()produces aPairobject containingLists. "}, :properties {:color "yellow"}} {:id #uuid "62b00ebf-c49e-4969-8e82-dcca6c5bf39d", :page 209, :position {:bounding {:x1 90, :y1 183.09375, :x2 649.625, :y2 241.09375, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 183.09375, :x2 649.625, :y2 241.09375, :width 839.9999999999999, :height 1092}), :page 209}, :content {:text "Destructuring Declarations"}, :properties {:color "yellow"}} {:id #uuid "62b00f7f-2b7a-412c-ba3d-628d6c9e0425", :page 255, :position {:bounding {:x1 89.98909759521484, :y1 480.02745819091797, :x2 750.0740127563477, :y2 531.4905319213867, :width 839.9999999999999, :height 1092}, :rects ({:x1 202.92835235595703, :y1 480.02745819091797, :x2 514.2709121704102, :y2 507.41356658935547, :width 839.9999999999999, :height 1092} {:x1 550.0760269165039, :y1 480.02745819091797, :x2 580.0707168579102, :y2 507.41356658935547, :width 839.9999999999999, :height 1092} {:x1 615.9453506469727, :y1 480.02745819091797, :x2 750.0740127563477, :y2 507.41356658935547, :width 839.9999999999999, :height 1092} {:x1 319.88993072509766, :y1 484.59178924560547, :x2 750.0740127563477, :y2 505.5878219604492, :width 839.9999999999999, :height 1092} {:x1 89.98909759521484, :y1 504.1044235229492, :x2 709.2987899780273, :y2 531.4905319213867, :width 839.9999999999999, :height 1092}), :page 255}, :content {:text "Destructuringmeans defining multiplevars orvals and initializingthem simultaneously, from the expression on the right side of the assignment. "}, :properties {:color "yellow"}} {:id #uuid "62b0117f-370f-467e-b5f8-0dd2221dd637", :page 255, :position {:bounding {:x1 89.98909759521484, :y1 817.3475189208984, :x2 614.1639175415039, :y2 844.733642578125, :width 839.9999999999999, :height 1092}, :rects ({:x1 244.53528594970703, :y1 817.3475189208984, :x2 367.8572463989258, :y2 844.733642578125, :width 839.9999999999999, :height 1092} {:x1 417.62415313720703, :y1 817.3475189208984, :x2 483.8390579223633, :y2 844.733642578125, :width 839.9999999999999, :height 1092} {:x1 528.6806411743164, :y1 817.3475189208984, :x2 614.1639175415039, :y2 844.733642578125, :width 839.9999999999999, :height 1092} {:x1 89.98909759521484, :y1 820.6566619873047, :x2 528.6912002563477, :y2 841.6526947021484, :width 839.9999999999999, :height 1092}), :page 255}, :content {:text "filterNotNull()produces a newListwith thenulls removed:"}, :properties {:color "red"}} {:id #uuid "62b01183-a7fa-4edb-a242-620d01dbf081", :page 256, :position {:bounding {:x1 108.1181411743164, :y1 228.731201171875, :x2 398.1629104614258, :y2 247.9014892578125, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.1181411743164, :y1 228.731201171875, :x2 398.1629104614258, :y2 247.9014892578125, :width 839.9999999999999, :height 1092}), :page 256}, :content {:text "list.filterNotNull() eq\"[1, 2]\""}, :properties {:color "yellow"}} {:id #uuid "62b011e9-ba79-4ca8-b9a5-0b36cc9006d1", :page 256, :position {:bounding {:x1 216.22821807861328, :y1 335.38021087646484, :x2 713.4435195922852, :y2 362.76631927490234, :width 839.9999999999999, :height 1092}, :rects ({:x1 216.22821807861328, :y1 335.38021087646484, :x2 492.1229019165039, :y2 362.76631927490234, :width 839.9999999999999, :height 1092} {:x1 574.0246353149414, :y1 335.38021087646484, :x2 603.4585952758789, :y2 362.76631927490234, :width 839.9999999999999, :height 1092} {:x1 709.3006973266602, :y1 335.38021087646484, :x2 713.4435195922852, :y2 362.76631927490234, :width 839.9999999999999, :height 1092} {:x1 498.0851821899414, :y1 338.6893539428711, :x2 709.3063735961914, :y2 359.68538665771484, :width 839.9999999999999, :height 1092}), :page 256}, :content {:text "but they have counterparts namedsumBy()andsortedBy()."}, :properties {:color "red"}} {:id #uuid "62b011fd-ec8c-4e02-9e10-aa6b291d798f", :page 256, :position {:bounding {:x1 108.1181411743164, :y1 713.7366485595703, :x2 434.40930938720703, :y2 732.9069671630859, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.1181411743164, :y1 713.7366485595703, :x2 434.40930938720703, :y2 732.9069671630859, :width 839.9999999999999, :height 1092}), :page 256}, :content {:text "products.sumByDouble { it.price } eq"}, :properties {:color "blue"}} {:id #uuid "62b01201-bf48-4609-a220-7c62b4663187", :page 256, :position {:bounding {:x1 108.1181411743164, :y1 754.6589202880859, :x2 470.6539077758789, :y2 773.8292083740234, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.1181411743164, :y1 754.6589202880859, :x2 470.6539077758789, :y2 773.8292083740234, :width 839.9999999999999, :height 1092}), :page 256}, :content {:text "products.sortedByDescending { it.price }"}, :properties {:color "blue"}} {:id #uuid "62b0120c-9fba-4029-bbc8-a6385ae5774b", :page 256, :position {:bounding {:x1 108.1181411743164, :y1 816.0637664794922, :x2 416.27555084228516, :y2 835.2340545654297, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.1181411743164, :y1 816.0637664794922, :x2 416.27555084228516, :y2 835.2340545654297, :width 839.9999999999999, :height 1092}), :page 256}, :content {:text "products.minByOrNull { it.price } "}, :properties {:color "blue"}} {:id #uuid "62b01240-c8ee-4251-bb6a-3c73862aa639", :page 256, :position {:bounding {:x1 89.98909759521484, :y1 895.0128479003906, :x2 750.4185562133789, :y2 946.4759521484375, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98909759521484, :y1 895.0128479003906, :x2 366.59981536865234, :y2 922.3989868164062, :width 839.9999999999999, :height 1092} {:x1 453.34024810791016, :y1 895.0128479003906, :x2 482.77420806884766, :y2 922.3989868164062, :width 839.9999999999999, :height 1092} {:x1 629.4387588500977, :y1 895.0128479003906, :x2 750.4185562133789, :y2 922.3989868164062, :width 839.9999999999999, :height 1092} {:x1 375.0187759399414, :y1 898.322021484375, :x2 750.4185562133789, :y2 919.3180541992188, :width 839.9999999999999, :height 1092} {:x1 89.98909759521484, :y1 919.08984375, :x2 345.5000686645508, :y2 946.4759521484375, :width 839.9999999999999, :height 1092} {:x1 89.98909759521484, :y1 923.6541748046875, :x2 345.5000686645508, :y2 942.824462890625, :width 839.9999999999999, :height 1092}), :page 256}, :content {:text "Note that we have two functionssumBy()andsumByDouble()to sum integerand double values, respectively."}, :properties {:color "yellow"}} {:id #uuid "62b0125a-ff21-45a7-8c29-e2f5cec84720", :page 256, :position {:bounding {:x1 89.98909759521484, :y1 919.08984375, :x2 750.0707168579102, :y2 994.6298828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 439.01956939697266, :y1 919.08984375, :x2 468.45352935791016, :y2 946.4759521484375, :width 839.9999999999999, :height 1092} {:x1 582.0265274047852, :y1 919.08984375, :x2 750.0707168579102, :y2 946.4759521484375, :width 839.9999999999999, :height 1092} {:x1 352.3111038208008, :y1 922.3989868164062, :x2 750.0707168579102, :y2 943.39501953125, :width 839.9999999999999, :height 1092} {:x1 89.98909759521484, :y1 943.1668090820312, :x2 266.48474884033203, :y2 970.5529174804688, :width 839.9999999999999, :height 1092} {:x1 454.0391616821289, :y1 943.1668090820312, :x2 483.4731216430664, :y2 970.5529174804688, :width 839.9999999999999, :height 1092} {:x1 691.0289688110352, :y1 943.1668090820312, :x2 750.0135269165039, :y2 970.5529174804688, :width 839.9999999999999, :height 1092} {:x1 89.98909759521484, :y1 947.7311401367188, :x2 750.0135269165039, :y2 968.7271728515625, :width 839.9999999999999, :height 1092} {:x1 89.98909759521484, :y1 967.2437744140625, :x2 331.1194534301758, :y2 994.6298828125, :width 839.9999999999999, :height 1092}), :page 256}, :content {:text "sorted()andsortedBy()sort the collection inascending order, whilesortedDescending()andsortedByDescending()sort thecollection in descending order."}, :properties {:color "yellow"}} {:id #uuid "62b012af-3d68-4998-973b-b09ec839b843", :page 257, :position {:bounding {:x1 89.98909759521484, :y1 121.78269958496094, :x2 750.0447158813477, :y2 173.2315216064453, :width 839.9999999999999, :height 1092}, :rects ({:x1 204.93950653076172, :y1 121.78269958496094, :x2 629.1046676635742, :y2 149.16880798339844, :width 839.9999999999999, :height 1092} {:x1 679.3613662719727, :y1 121.78269958496094, :x2 750.0447158813477, :y2 149.16880798339844, :width 839.9999999999999, :height 1092} {:x1 89.98909759521484, :y1 125.07759094238281, :x2 750.0447158813477, :y2 146.07362365722656, :width 839.9999999999999, :height 1092} {:x1 89.98909759521484, :y1 145.8453826904297, :x2 160.73979949951172, :y2 173.2315216064453, :width 839.9999999999999, :height 1092}), :page 257}, :content {:text "minByOrNullreturns a minimum value based on a given criteria ornullif the listis empty."}, :properties {:color "red"}} {:id #uuid "62b012c6-b33e-488f-8c94-4583b47de79b", :page 257, :position {:bounding {:x1 89.98909759521484, :y1 180.2349395751953, :x2 754.9827041625977, :y2 231.6980438232422, :width 839.9999999999999, :height 1092}, :rects ({:x1 154.6888198852539, :y1 180.2349395751953, :x2 184.12281036376953, :y2 207.62107849121094, :width 839.9999999999999, :height 1092} {:x1 253.69251251220703, :y1 180.2349395751953, :x2 700.4542617797852, :y2 207.62107849121094, :width 839.9999999999999, :height 1092} {:x1 89.98909759521484, :y1 183.5441131591797, :x2 754.9827041625977, :y2 204.54014587402344, :width 839.9999999999999, :height 1092} {:x1 155.78711700439453, :y1 204.3119354248047, :x2 185.22110748291016, :y2 231.6980438232422, :width 839.9999999999999, :height 1092} {:x1 296.8684768676758, :y1 204.3119354248047, :x2 590.5921401977539, :y2 231.6980438232422, :width 839.9999999999999, :height 1092} {:x1 89.98909759521484, :y1 207.62107849121094, :x2 290.9119644165039, :y2 228.6171112060547, :width 839.9999999999999, :height 1092}), :page 257}, :content {:text "take()anddrop()produce or remove (respectively) the first element, whiletake-Last()anddropLast()produce or remove the last element. "}, :properties {:color "yellow"}} {:id #uuid "62b012ce-3819-47d0-8e5c-e73441f99cd9", :page 257, :position {:bounding {:x1 89.98909759521484, :y1 204.3119354248047, :x2 753.5556411743164, :y2 255.77500915527344, :width 839.9999999999999, :height 1092}, :rects ({:x1 590.5779190063477, :y1 204.3119354248047, :x2 753.5556411743164, :y2 231.6980438232422, :width 839.9999999999999, :height 1092} {:x1 89.98909759521484, :y1 228.38890075683594, :x2 628.4836654663086, :y2 255.77500915527344, :width 839.9999999999999, :height 1092}), :page 257}, :content {:text "These have counter-parts that accept a predicate specifying the elements to take or drop:"}, :properties {:color "red"}} {:id #uuid "62b012d7-ccd6-4644-9fff-92270b363859", :page 257, :position {:bounding {:x1 108.1181411743164, :y1 396.25727462768555, :x2 470.6535415649414, :y2 415.42756271362305, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.1181411743164, :y1 396.25727462768555, :x2 470.6535415649414, :y2 415.42756271362305, :width 839.9999999999999, :height 1092}), :page 257}, :content {:text "list.takeLastWhile { it.isUpperCase() } "}, :properties {:color "blue"}} {:id #uuid "62b012da-af35-41f9-bba7-e38515718e77", :page 257, :position {:bounding {:x1 108.1181411743164, :y1 457.6621208190918, :x2 425.33679962158203, :y2 476.8323783874512, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.1181411743164, :y1 457.6621208190918, :x2 425.33679962158203, :y2 476.8323783874512, :width 839.9999999999999, :height 1092}), :page 257}, :content {:text "list.dropWhile { it.isLowerCase() }"}, :properties {:color "blue"}} {:id #uuid "62b01430-65a1-4f5f-aa0b-aa0cfd71f370", :page 257, :position {:bounding {:x1 89.98909759521484, :y1 538.0090026855469, :x2 650.5832290649414, :y2 565.3951416015625, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98909759521484, :y1 538.0090026855469, :x2 383.1382064819336, :y2 565.3951416015625, :width 839.9999999999999, :height 1092} {:x1 427.8797073364258, :y1 538.0090026855469, :x2 604.1011123657227, :y2 565.3951416015625, :width 839.9999999999999, :height 1092} {:x1 638.8954849243164, :y1 538.0090026855469, :x2 650.5832290649414, :y2 565.3951416015625, :width 839.9999999999999, :height 1092} {:x1 387.99866485595703, :y1 541.3181762695312, :x2 638.9067153930664, :y2 562.314208984375, :width 839.9999999999999, :height 1092}), :page 257}, :content {:text "Operations like those you’ve seen forLists are also available forSets:"}, :properties {:color "red"}} {:id #uuid "62b01436-e118-40e7-8fdc-1fda4836297a", :page 257, :position {:bounding {:x1 89.98909759521484, :y1 827.1751098632812, :x2 698.7950210571289, :y2 854.5612487792969, :width 839.9999999999999, :height 1092}, :rects ({:x1 224.59476470947266, :y1 827.1751098632812, :x2 281.2241897583008, :y2 854.5612487792969, :width 839.9999999999999, :height 1092} {:x1 331.04407501220703, :y1 827.1751098632812, :x2 698.7950210571289, :y2 854.5612487792969, :width 839.9999999999999, :height 1092} {:x1 89.98909759521484, :y1 830.4700012207031, :x2 326.07666778564453, :y2 851.4660339355469, :width 839.9999999999999, :height 1092}), :page 257}, :content {:text "maxByOrNull()returnsnullif a collection is empty, so its result is nullable."}, :properties {:color "yellow"}} {:id #uuid "62b01438-e54a-452d-b5b1-1acbbd4525c5", :page 257, :position {:bounding {:x1 89.98909759521484, :y1 861.5504150390625, :x2 753.0471572875977, :y2 888.9365234375, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98909759521484, :y1 861.5504150390625, :x2 163.55077362060547, :y2 888.9365234375, :width 839.9999999999999, :height 1092} {:x1 251.65283966064453, :y1 861.5504150390625, :x2 281.08679962158203, :y2 888.9365234375, :width 839.9999999999999, :height 1092} {:x1 335.1091995239258, :y1 861.5504150390625, :x2 482.4941177368164, :y2 888.9365234375, :width 839.9999999999999, :height 1092} {:x1 516.5279922485352, :y1 861.5504150390625, :x2 704.7199478149414, :y2 888.9365234375, :width 839.9999999999999, :height 1092} {:x1 748.6824722290039, :y1 861.5504150390625, :x2 753.0471572875977, :y2 888.9365234375, :width 839.9999999999999, :height 1092} {:x1 167.71149444580078, :y1 864.8595581054688, :x2 748.6930923461914, :y2 885.8555908203125, :width 839.9999999999999, :height 1092}), :page 257}, :content {:text "Note thatfilter()andmap(), when applied to aSet, return their results in aList."}, :properties {:color "yellow"}} {:id #uuid "62b0282b-a069-42f9-8c77-4778c2f061a6", :page 258, :position {:bounding {:x1 187.37162399291992, :y1 396.55682373046875, :x2 568.2769584655762, :y2 423.94293212890625, :width 839.9999999999999, :height 1092}, :rects ({:x1 187.37162399291992, :y1 396.55682373046875, :x2 229.99718856811523, :y2 423.94293212890625, :width 839.9999999999999, :height 1092} {:x1 389.4678153991699, :y1 396.55682373046875, :x2 568.2769584655762, :y2 423.94293212890625, :width 839.9999999999999, :height 1092} {:x1 234.92161178588867, :y1 399.865966796875, :x2 384.4924736022949, :y2 420.86199951171875, :width 839.9999999999999, :height 1092}), :page 258}, :content {:text "Here,Message::isReadis a member reference:"}, :properties {:color "red"}} {:id #uuid "62b0284d-e167-46ea-b7f7-1620afd8b626", :page 258, :position {:bounding {:x1 89.29018020629883, :y1 372.4798583984375, :x2 750.2689399719238, :y2 423.94293212890625, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.29018020629883, :y1 372.4798583984375, :x2 750.2689399719238, :y2 399.865966796875, :width 839.9999999999999, :height 1092} {:x1 89.98910140991211, :y1 396.55682373046875, :x2 182.54946517944336, :y2 423.94293212890625, :width 839.9999999999999, :height 1092}), :page 258}, :content {:text "A member reference uses a double colon to separate the class name from the functionor property."}, :properties {:color "red"}} {:id #uuid "62b0287b-10e2-4685-bbbf-e1bfd1cac5aa", :page 258, :position {:bounding {:x1 89.98910140991211, :y1 873.5033569335938, :x2 752.0629692077637, :y2 924.9664306640625, :width 839.9999999999999, :height 1092}, :rects ({:x1 725.4390678405762, :y1 873.5033569335938, :x2 750.3392753601074, :y2 900.8894653320312, :width 839.9999999999999, :height 1092} {:x1 89.98910140991211, :y1 897.580322265625, :x2 593.3758811950684, :y2 924.9664306640625, :width 839.9999999999999, :height 1092} {:x1 747.6982841491699, :y1 897.580322265625, :x2 752.0629692077637, :y2 924.9664306640625, :width 839.9999999999999, :height 1092} {:x1 89.98910140991211, :y1 902.1446533203125, :x2 747.7009696960449, :y2 921.31494140625, :width 839.9999999999999, :height 1092}), :page 258}, :content {:text "Wecould pass a lambda, but instead we pass the property referenceMessage::isRead."}, :properties {:color "blue"}} {:id #uuid "62b02919-3e73-443a-9261-2fbcab523238", :page 259, :position {:bounding {:x1 108.11814498901367, :y1 310.5900573730469, :x2 434.4255485534668, :y2 350.2286071777344, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814498901367, :y1 310.5900573730469, :x2 380.0348014831543, :y2 329.7603454589844, :width 839.9999999999999, :height 1092} {:x1 126.24718856811523, :y1 331.05833435058594, :x2 434.4255485534668, :y2 350.2286071777344, :width 839.9999999999999, :height 1092}), :page 259}, :content {:text "messages.sortedWith(compareBy(Message::isRead, Message::sender))"}, :properties {:color "blue"}} {:id #uuid "62b0295d-454e-4d80-9366-0c83106c050a", :page 259, :position {:bounding {:x1 89.43281936645508, :y1 534.2006225585938, :x2 750.0724906921387, :y2 585.6637268066406, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.43281936645508, :y1 534.2006225585938, :x2 246.70573806762695, :y2 561.5867614746094, :width 839.9999999999999, :height 1092} {:x1 373.26435470581055, :y1 534.2006225585938, :x2 750.0724906921387, :y2 561.5867614746094, :width 839.9999999999999, :height 1092} {:x1 250.12662887573242, :y1 537.5097961425781, :x2 750.0724906921387, :y2 558.5058288574219, :width 839.9999999999999, :height 1092} {:x1 89.98910140991211, :y1 558.277587890625, :x2 335.9178886413574, :y2 585.6637268066406, :width 839.9999999999999, :height 1092}), :page 259}, :content {:text "The library functionsortedWith()sorts a list using acomparator, which is an objectused to compare two elements. "}, :properties {:color "red"}} {:id #uuid "62b0298a-0e43-451d-b6c3-4dce9664babe", :page 259, :position {:bounding {:x1 89.98910140991211, :y1 558.277587890625, :x2 753.4161796569824, :y2 609.7406921386719, :width 839.9999999999999, :height 1092}, :rects ({:x1 371.2878837585449, :y1 558.277587890625, :x2 494.7299003601074, :y2 585.6637268066406, :width 839.9999999999999, :height 1092} {:x1 612.8644218444824, :y1 558.277587890625, :x2 753.4161796569824, :y2 585.6637268066406, :width 839.9999999999999, :height 1092} {:x1 498.8839530944824, :y1 561.5867614746094, :x2 753.4161796569824, :y2 582.5827941894531, :width 839.9999999999999, :height 1092} {:x1 89.98910140991211, :y1 582.3545837402344, :x2 544.1560935974121, :y2 609.7406921386719, :width 839.9999999999999, :height 1092}), :page 259}, :content {:text "library functioncompareBy()builds a compara-tor based on its parameters, which are a list of predicates."}, :properties {:color "red"}} {:id #uuid "62b02a0c-06fe-4786-8e0e-69ac62031621", :page 259, :position {:bounding {:x1 89.98910140991211, :y1 582.3545837402344, :x2 750.0198173522949, :y2 633.8176574707031, :width 839.9999999999999, :height 1092}, :rects ({:x1 548.9788627624512, :y1 582.3545837402344, :x2 594.3789482116699, :y2 609.7406921386719, :width 839.9999999999999, :height 1092} {:x1 713.6511039733887, :y1 582.3545837402344, :x2 750.0198173522949, :y2 609.7406921386719, :width 839.9999999999999, :height 1092} {:x1 599.0572319030762, :y1 585.6637268066406, :x2 750.0198173522949, :y2 606.6597595214844, :width 839.9999999999999, :height 1092} {:x1 89.98910140991211, :y1 606.4315490722656, :x2 415.77407455444336, :y2 633.8176574707031, :width 839.9999999999999, :height 1092} {:x1 520.2936210632324, :y1 606.4315490722656, :x2 524.6583061218262, :y2 633.8176574707031, :width 839.9999999999999, :height 1092} {:x1 89.98910140991211, :y1 610.9958801269531, :x2 520.3135795593262, :y2 630.1661682128906, :width 839.9999999999999, :height 1092}), :page 259}, :content {:text "UsingcompareBy()witha single argument is equivalent to callingsortedBy()."}, :properties {:color "yellow"}} {:id #uuid "62b02a2e-86c4-4386-a7ff-e770dc97523f", :page 258, :position {:bounding {:x1 126.24718856811523, :y1 748.6111755371094, :x2 443.50580978393555, :y2 767.7814636230469, :width 839.9999999999999, :height 1092}, :rects ({:x1 126.24718856811523, :y1 748.6111755371094, :x2 443.50580978393555, :y2 767.7814636230469, :width 839.9999999999999, :height 1092}), :page 258}, :content {:text "messages.filterNot(Message::isRead)"}, :properties {:color "yellow"}} {:id #uuid "62b12e1c-fbb0-49aa-af8d-d3c57369a0bd", :page 259, :position {:bounding {:x1 90, :y1 827.6171417236328, :x2 750.5065307617188, :y2 879.1927032470703, :width 839.9999999999999, :height 1092}, :rects ({:x1 281.6971435546875, :y1 827.6171417236328, :x2 750.5065307617188, :y2 855.1171417236328, :width 839.9999999999999, :height 1092} {:x1 90, :y1 851.6927032470703, :x2 520.5946044921875, :y2 879.1927032470703, :width 839.9999999999999, :height 1092} {:x1 90, :y1 855.8593292236328, :x2 391.4740905761719, :y2 875.0260162353516, :width 839.9999999999999, :height 1092}), :page 259}, :content {:text " In Kotlin you can’t pass a function where a function type isexpected, but you can pass areferenceto that function"}, :properties {:color "yellow"}} {:id #uuid "62b12e3d-0b06-451d-be75-947b8bfffbff", :page 260, :position {:bounding {:x1 216.90924072265625, :y1 699.5963134765625, :x2 416.3218994140625, :y2 718.7630004882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 216.90924072265625, :y1 699.5963134765625, :x2 416.3218994140625, :y2 718.7630004882812, :width 839.9999999999999, :height 1092}), :page 260}, :content {:text "(Message::isImportant)"}, :properties {:color "yellow"}} {:id #uuid "62b130ec-5244-417b-933f-4428436c8957", :page 260, :position {:bounding {:x1 90, :y1 783.7890625, :x2 750.834228515625, :y2 859.4400939941406, :width 839.9999999999999, :height 1092}, :rects ({:x1 475.67205810546875, :y1 783.7890625, :x2 574.7440185546875, :y2 811.2890625, :width 839.9999999999999, :height 1092} {:x1 718.3333129882812, :y1 783.7890625, :x2 750.0238647460938, :y2 811.2890625, :width 839.9999999999999, :height 1092} {:x1 578.7369384765625, :y1 786.8619689941406, :x2 750.0238647460938, :y2 807.6953125, :width 839.9999999999999, :height 1092} {:x1 90, :y1 807.8645629882812, :x2 750.834228515625, :y2 835.3645629882812, :width 839.9999999999999, :height 1092} {:x1 90, :y1 812.03125, :x2 750.834228515625, :y2 831.1979064941406, :width 839.9999999999999, :height 1092} {:x1 90, :y1 831.9400939941406, :x2 168.23095703125, :y2 859.4400939941406, :width 839.9999999999999, :height 1092}), :page 260}, :content {:text "In the call tomessages.any(), wecreate a reference to an extension function—references are not limited to memberfunctions."}, :properties {:color "yellow"}} {:id #uuid "62b130fe-3a48-4e39-a6a8-e5e2186841e2", :page 260, :position {:bounding {:x1 90, :y1 890.4036254882812, :x2 750.5066833496094, :y2 941.9791564941406, :width 839.9999999999999, :height 1092}, :rects ({:x1 217.89022827148438, :y1 890.4036254882812, :x2 750.5066833496094, :y2 917.9036254882812, :width 839.9999999999999, :height 1092} {:x1 90, :y1 914.4791564941406, :x2 251.63699340820312, :y2 941.9791564941406, :width 839.9999999999999, :height 1092} {:x1 356.1979064941406, :y1 914.4791564941406, :x2 360.5729064941406, :y2 941.9791564941406, :width 839.9999999999999, :height 1092} {:x1 90, :y1 918.6458129882812, :x2 356.2044677734375, :y2 937.8125, :width 839.9999999999999, :height 1092}), :page 260}, :content {:text " When you create a reference to a top-level function, there’s no classname, so it’s written::function:"}, :properties {:color "yellow"}} {:id #uuid "62b13201-00a3-4a03-9400-0ca23918a395", :page 261, :position {:bounding {:x1 89.4140625, :y1 604.2317581176758, :x2 598.5513916015625, :y2 631.7317276000977, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.4140625, :y1 604.2317581176758, :x2 598.5513916015625, :y2 631.7317276000977, :width 839.9999999999999, :height 1092}), :page 261}, :content {:text "You can create a reference to a constructor using the class name."}, :properties {:color "yellow"}} {:id #uuid "62b13253-11de-414b-a155-b1c856dcb663", :page 261, :position {:bounding {:x1 126.25, :y1 929.0494689941406, :x2 425.413818359375, :y2 989.1405944824219, :width 839.9999999999999, :height 1092}, :rects ({:x1 126.25, :y1 929.0494689941406, :x2 425.413818359375, :y2 948.2161254882812, :width 839.9999999999999, :height 1092} {:x1 144.375, :y1 949.5182189941406, :x2 325.6891784667969, :y2 968.6848754882812, :width 839.9999999999999, :height 1092} {:x1 126.25, :y1 969.9739379882812, :x2 136.2239532470703, :y2 989.1405944824219, :width 839.9999999999999, :height 1092}), :page 261}, :content {:text "names.mapIndexed { index, name ->Student(index, name)}"}, :properties {:color "yellow"}} {:id #uuid "62b1337a-95ea-46b9-a8c6-e67fda4eb290", :page 261, :position {:bounding {:x1 132.1486053466797, :y1 638.6197814941406, :x2 648.9166870117188, :y2 666.1197814941406, :width 839.9999999999999, :height 1092}, :rects ({:x1 132.1486053466797, :y1 638.6197814941406, :x2 132.16107177734375, :y2 666.1197814941406, :width 839.9999999999999, :height 1092} {:x1 321.53643798828125, :y1 638.6197814941406, :x2 564.3690795898438, :y2 666.1197814941406, :width 839.9999999999999, :height 1092} {:x1 137.0833282470703, :y1 641.6926879882812, :x2 648.9166870117188, :y2 662.5260314941406, :width 839.9999999999999, :height 1092}), :page 261}, :content {:text "names.mapIndexed()takes the constructor reference::Studen"}, :properties {:color "yellow"}} {:id #uuid "62b1343d-f2e7-445f-9733-0bbe7f5ab894", :page 262, :position {:bounding {:x1 90, :y1 295.53387451171875, :x2 753.5986938476562, :y2 347.09637451171875, :width 839.9999999999999, :height 1092}, :rects ({:x1 368.8013000488281, :y1 295.53387451171875, :x2 750.2830810546875, :y2 323.03387451171875, :width 839.9999999999999, :height 1092} {:x1 90, :y1 319.59637451171875, :x2 753.5986938476562, :y2 347.09637451171875, :width 839.9999999999999, :height 1092}), :page 262}, :content {:text "Thus, function and constructor references caneliminate specifying a long list of parameters that are simply passed into a lambda."}, :properties {:color "yellow"}} {:id #uuid "62b13444-98f2-451d-bd77-0cefe47ae391", :page 262, :position {:bounding {:x1 90, :y1 343.68487548828125, :x2 672.0354614257812, :y2 371.18487548828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 343.68487548828125, :x2 672.0354614257812, :y2 371.18487548828125, :width 839.9999999999999, :height 1092}), :page 262}, :content {:text "Function and constructor references are often more readable than lambda"}, :properties {:color "yellow"}} {:id #uuid "62b13541-6733-4c0c-b8da-9c087f1542de", :page 262, :position {:bounding {:x1 108.125, :y1 772.148396730423, :x2 171.59432983398438, :y2 791.3150837421417, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.125, :y1 772.148396730423, :x2 171.59432983398438, :y2 791.3150837421417, :width 839.9999999999999, :height 1092}), :page 262}, :content {:text "g(frog)"}, :properties {:color "yellow"}} {:id #uuid "62b13551-3b32-409f-91ee-0441afda1473", :page 262, :position {:bounding {:x1 90, :y1 909.804646730423, :x2 307.2461242675781, :y2 937.304646730423, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 909.804646730423, :x2 106.26551818847656, :y2 937.304646730423, :width 839.9999999999999, :height 1092} {:x1 181.7708282470703, :y1 909.804646730423, :x2 186.1458282470703, :y2 937.304646730423, :width 839.9999999999999, :height 1092} {:x1 207.5911407470703, :y1 909.804646730423, :x2 307.2461242675781, :y2 937.304646730423, :width 839.9999999999999, :height 1092} {:x1 111.97915649414062, :y1 912.8775837421417, :x2 202.8515625, :y2 933.710896730423, :width 839.9999999999999, :height 1092}), :page 262}, :content {:text "IngoInt(),gis a function"}, :properties {:color "blue"}} {:id #uuid "62b13555-027e-4611-8dcc-de74f1705409", :page 262, :position {:bounding {:x1 289.41656494140625, :y1 751.679646730423, :x2 470.7379150390625, :y2 770.8463337421417, :width 839.9999999999999, :height 1092}, :rects ({:x1 289.41656494140625, :y1 751.679646730423, :x2 470.7379150390625, :y2 770.8463337421417, :width 839.9999999999999, :height 1092}), :page 262}, :content {:text " g: (Frog) -> String"}, :properties {:color "red"}} {:id #uuid "62b13560-004c-47e0-a74b-1f26c734741b", :page 262, :position {:bounding {:x1 345.2730712890625, :y1 909.804646730423, :x2 713.6549072265625, :y2 937.304646730423, :width 839.9999999999999, :height 1092}, :rects ({:x1 345.2730712890625, :y1 909.804646730423, :x2 433.48785400390625, :y2 937.304646730423, :width 839.9999999999999, :height 1092} {:x1 474.6744384765625, :y1 909.804646730423, :x2 688.1140747070312, :y2 937.304646730423, :width 839.9999999999999, :height 1092} {:x1 439.03643798828125, :y1 912.8775837421417, :x2 713.6549072265625, :y2 933.710896730423, :width 839.9999999999999, :height 1092}), :page 262}, :content {:text " expects anIntargument and produces anIn"}, :properties {:color "blue"}} {:id #uuid "62b1356c-04d8-4578-b826-6b07655cf777", :page 262, :position {:bounding {:x1 244.09420776367188, :y1 710.7552082538605, :x2 389.1552734375, :y2 729.921834230423, :width 839.9999999999999, :height 1092}, :rects ({:x1 244.09420776367188, :y1 710.7552082538605, :x2 389.1552734375, :y2 729.921834230423, :width 839.9999999999999, :height 1092}), :page 262}, :content {:text " g: (Int) -> Int"}, :properties {:color "blue"}} {:id #uuid "62b13572-7ee4-40f1-af4f-3435c6ebda44", :page 262, :position {:bounding {:x1 90, :y1 933.8802082538605, :x2 500.14453125, :y2 961.3802082538605, :width 839.9999999999999, :height 1092}, :rects ({:x1 169.765625, :y1 933.8802082538605, :x2 174.140625, :y2 961.3802082538605, :width 839.9999999999999, :height 1092} {:x1 194.0755157470703, :y1 933.8802082538605, :x2 266.3314208984375, :y2 961.3802082538605, :width 839.9999999999999, :height 1092} {:x1 316.1197814941406, :y1 933.8802082538605, :x2 435.4328918457031, :y2 961.3802082538605, :width 839.9999999999999, :height 1092} {:x1 90, :y1 936.953084230423, :x2 500.14453125, :y2 957.7864582538605, :width 839.9999999999999, :height 1092}), :page 262}, :content {:text "goFrog(),gexpects aFrogand produces aString"}, :properties {:color "red"}} {:id #uuid "62b13576-486f-4698-826e-56f3fe073982", :page 262, :position {:bounding {:x1 126.25, :y1 751.679646730423, :x2 180.65399169921875, :y2 770.8463337421417, :width 839.9999999999999, :height 1092}, :rects ({:x1 126.25, :y1 751.679646730423, :x2 180.65399169921875, :y2 770.8463337421417, :width 839.9999999999999, :height 1092}), :page 262}, :content {:text "goFrog"}, :properties {:color "red"}} {:id #uuid "62b13579-bd81-4121-9b06-3b0ea69ff45d", :page 262, :position {:bounding {:x1 126.25, :y1 710.7552082538605, :x2 171.58863830566406, :y2 729.921834230423, :width 839.9999999999999, :height 1092}, :rects ({:x1 126.25, :y1 710.7552082538605, :x2 171.58863830566406, :y2 729.921834230423, :width 839.9999999999999, :height 1092}), :page 262}, :content {:text "goInt"}, :properties {:color "blue"}} {:id #uuid "62b13804-a723-435f-a7e4-def7d445b374", :page 263, :position {:bounding {:x1 122.42186991870403, :y1 243.3984375, :x2 659.6985270231962, :y2 292.4869689941406, :width 782, :height 1016.6000000000001}, :rects ({:x1 122.42186991870403, :y1 243.3984375, :x2 659.6985270231962, :y2 270.0650939941406, :width 782, :height 1016.6000000000001} {:x1 286.1197916716337, :y1 247.56509399414062, :x2 659.6985270231962, :y2 265.8984375, :width 782, :height 1016.6000000000001} {:x1 122.42186991870403, :y1 265.8203125, :x2 631.8436228483915, :y2 292.4869689941406, :width 782, :height 1016.6000000000001}), :page 263}, :content {:text "A language supportshigher-order functionsif its functions can acceptother functions as arguments and produce functions as return values."}, :properties {:color "yellow"}} {:id #uuid "62b1386c-ba2a-4f37-8c94-8d477c9c6afd", :page 263, :position {:bounding {:x1 83.24218241870403, :y1 391.6666564941406, :x2 634.751215621829, :y2 418.33331298828125, :width 782, :height 1016.6000000000001}, :rects ({:x1 83.24218241870403, :y1 391.6666564941406, :x2 634.751215621829, :y2 418.33331298828125, :width 782, :height 1016.6000000000001}), :page 263}, :content {:text "You can store a lambda in a reference. Let’s look at the type of this storage:"}, :properties {:color "yellow"}} {:id #uuid "62b1387a-3b96-405e-b546-9fd2ca8a9faa", :page 263, :position {:bounding {:x1 83.77604167163372, :y1 509.7916564941406, :x2 430.59894816577435, :y2 528.125, :width 782, :height 1016.6000000000001}, :rects ({:x1 83.77604167163372, :y1 509.7916564941406, :x2 430.59894816577435, :y2 528.125, :width 782, :height 1016.6000000000001}), :page 263}, :content {:text "valisPlus: (Int) -> Boolean = { it >0}"}, :properties {:color "red"}} {:id #uuid "62b13897-cbf6-4f33-8b5c-122d26c29615", :page 263, :position {:bounding {:x1 141.9835306853056, :y1 645.1692504882812, :x2 269.2877299040556, :y2 671.8359375, :width 782, :height 1016.6000000000001}, :rects ({:x1 141.9835306853056, :y1 645.1692504882812, :x2 269.2877299040556, :y2 671.8359375, :width 782, :height 1016.6000000000001}), :page 263}, :content {:text " parameter types,"}, :properties {:color "red"}} {:id #uuid "62b1389c-d4e4-4e11-a5a6-580b9edd5eab", :page 263, :position {:bounding {:x1 273.81428019702435, :y1 645.1692504882812, :x2 420.6890055388212, :y2 671.8359375, :width 782, :height 1016.6000000000001}, :rects ({:x1 273.81428019702435, :y1 645.1692504882812, :x2 388.2019144743681, :y2 671.8359375, :width 782, :height 1016.6000000000001} {:x1 406.6276041716337, :y1 645.1692504882812, :x2 420.6890055388212, :y2 671.8359375, :width 782, :height 1016.6000000000001} {:x1 388.05988566577435, :y1 648.203125, :x2 406.62839762866497, :y2 667.3697509765625, :width 782, :height 1016.6000000000001}), :page 263}, :content {:text "then an arrow (->), "}, :properties {:color "red"}} {:id #uuid "62b1389f-04b4-4bb1-a4d7-9340c7d3c888", :page 263, :position {:bounding {:x1 535.7227579802275, :y1 645.1692504882812, :x2 627.1348673552275, :y2 671.8359375, :width 782, :height 1016.6000000000001}, :rects ({:x1 535.7227579802275, :y1 645.1692504882812, :x2 627.1348673552275, :y2 671.8359375, :width 782, :height 1016.6000000000001}), :page 263}, :content {:text " return type:"}, :properties {:color "red"}} {:id #uuid "62b13921-0089-4ffc-8c50-b4b23db1b111", :page 263, :position {:bounding {:x1 83.77604167163372, :y1 687.0963134765625, :x2 472.00742594897747, :y2 705.4296875, :width 782, :height 1016.6000000000001}, :rects ({:x1 83.77604167163372, :y1 687.0963134765625, :x2 472.00742594897747, :y2 705.4296875, :width 782, :height 1016.6000000000001}), :page 263}, :content {:text "(Arg1Type, Arg2Type... ArgNType) -> ReturnType"}, :properties {:color "blue"}} {:id #uuid "62b13944-674d-4166-8081-8bd091a131e1", :page 264, :position {:bounding {:x1 83.77604167163372, :y1 251.08074951171875, :x2 320.07932536303997, :y2 288.46356201171875, :width 782, :height 1016.6000000000001}, :rects ({:x1 83.77604167163372, :y1 251.08074951171875, :x2 320.07932536303997, :y2 269.4140625, :width 782, :height 1016.6000000000001} {:x1 100.65104167163372, :y1 270.13018798828125, :x2 244.11681620776653, :y2 288.46356201171875, :width 782, :height 1016.6000000000001}), :page 264}, :content {:text "valsum: (Int, Int) -> Int ={ x, y -> x + y }"}, :properties {:color "red"}} {:id #uuid "62b13946-4a5a-451a-bf6d-95d513277edb", :page 264, :position {:bounding {:x1 83.77604167163372, :y1 193.91925048828125, :x2 336.9580485075712, :y2 231.31512451171875, :width 782, :height 1016.6000000000001}, :rects ({:x1 83.77604167163372, :y1 193.91925048828125, :x2 336.9580485075712, :y2 212.25262451171875, :width 782, :height 1016.6000000000001} {:x1 100.65104167163372, :y1 212.98175048828125, :x2 261.83591715991497, :y2 231.31512451171875, :width 782, :height 1016.6000000000001}), :page 264}, :content {:text "valhelloWorld: () -> String ={\"Hello, world!\"}"}, :properties {:color "blue"}} {:id #uuid "62b139e0-73de-47cc-9288-d04a1c204d52", :page 264, :position {:bounding {:x1 82.92968241870403, :y1 400.5338134765625, :x2 698.592768356204, :y2 449.609375, :width 782, :height 1016.6000000000001}, :rects ({:x1 82.92968241870403, :y1 400.5338134765625, :x2 698.592768356204, :y2 427.20050048828125, :width 782, :height 1016.6000000000001} {:x1 83.77604167163372, :y1 422.94268798828125, :x2 253.80813090503216, :y2 449.609375, :width 782, :height 1016.6000000000001}), :page 264}, :content {:text "When a function accepts a function parameter, you can either pass it a functionreference or a lambda"}, :properties {:color "blue"}} {:id #uuid "62b139f0-b472-4781-adf8-38b61da31bdd", :page 264, :position {:bounding {:x1 100.65104167163372, :y1 866.7057304382324, :x2 362.2599283903837, :y2 885.0390434265137, :width 782, :height 1016.6000000000001}, :rects ({:x1 100.65104167163372, :y1 866.7057304382324, :x2 362.2599283903837, :y2 885.0390434265137, :width 782, :height 1016.6000000000001}), :page 264}, :content {:text "strings.any(String::isNotBlank)"}, :properties {:color "red"}} {:id #uuid "62b139fc-fe03-4fb4-8f97-5d44fcfbf4cf", :page 264, :position {:bounding {:x1 100.65104167163372, :y1 847.6562309265137, :x2 336.96332804858685, :y2 865.9895439147949, :width 782, :height 1016.6000000000001}, :rects ({:x1 100.65104167163372, :y1 847.6562309265137, :x2 336.96332804858685, :y2 865.9895439147949, :width 782, :height 1016.6000000000001}), :page 264}, :content {:text "strings.any { it.isBlank() }"}, :properties {:color "red"}} {:id #uuid "62b13aa1-0119-4aa1-9b15-70ef2bf6bfb4", :page 265, :position {:bounding {:x1 122.42186991870403, :y1 113.4505615234375, :x2 698.3696696013212, :y2 162.52606201171875, :width 782, :height 1016.6000000000001}, :rects ({:x1 201.08072917163372, :y1 113.4505615234375, :x2 362.28013102710247, :y2 140.1171875, :width 782, :height 1016.6000000000001} {:x1 404.1666666716337, :y1 113.4505615234375, :x2 698.3696696013212, :y2 140.1171875, :width 782, :height 1016.6000000000001} {:x1 149.79166667163372, :y1 116.484375, :x2 698.3696696013212, :y2 135.65106201171875, :width 782, :height 1016.6000000000001} {:x1 122.42186991870403, :y1 135.859375, :x2 298.0299174040556, :y2 162.52606201171875, :width 782, :height 1016.6000000000001} {:x1 367.51301066577435, :y1 135.859375, :x2 371.57551066577435, :y2 162.52606201171875, :width 782, :height 1016.6000000000001} {:x1 122.42186991870403, :y1 140.02606201171875, :x2 367.5347086638212, :y2 158.359375, :width 782, :height 1016.6000000000001}), :page 265}, :content {:text "any()should be usable withLists of different types so we define it as anextension to the genericList<T>."}, :properties {:color "yellow"}} {:id #uuid "62b13aa4-d8ee-4332-97fc-9098add30ced", :page 265, :position {:bounding {:x1 122.42186991870403, :y1 160.46875, :x2 698.2369791716337, :y2 209.5443115234375, :width 782, :height 1016.6000000000001}, :rects ({:x1 150.35155741870403, :y1 160.46875, :x2 178.43889872729778, :y2 187.13543701171875, :width 782, :height 1016.6000000000001} {:x1 272.81247965991497, :y1 160.46875, :x2 604.4568278044462, :y2 187.13543701171875, :width 782, :height 1016.6000000000001} {:x1 624.374979659915, :y1 160.46875, :x2 698.2369791716337, :y2 187.13543701171875, :width 782, :height 1016.6000000000001} {:x1 183.84113566577435, :y1 163.4896240234375, :x2 698.2369791716337, :y2 182.65625, :width 782, :height 1016.6000000000001} {:x1 122.42186991870403, :y1 182.87762451171875, :x2 225.40915934741497, :y2 209.5443115234375, :width 782, :height 1016.6000000000001} {:x1 271.75779215991497, :y1 182.87762451171875, :x2 341.0389506071806, :y2 209.5443115234375, :width 782, :height 1016.6000000000001} {:x1 122.42186991870403, :y1 187.0443115234375, :x2 267.12397257983685, :y2 205.37762451171875, :width 782, :height 1016.6000000000001}), :page 265}, :content {:text "Thepredicatefunction is callable with a parameter of typeTso we canapply it to theListelements."}, :properties {:color "yellow"}} {:id #uuid "62b13aaf-5d7a-42f8-94d3-54989814f3d8", :page 264, :position {:bounding {:x1 100.65104167163372, :y1 580.9244689941406, :x2 311.6436869353056, :y2 599.2577819824219, :width 782, :height 1016.6000000000001}, :rects ({:x1 100.65104167163372, :y1 580.9244689941406, :x2 311.6436869353056, :y2 599.2577819824219, :width 782, :height 1016.6000000000001}), :page 264}, :content {:text "predicate: (T) -> Boolean"}, :properties {:color "blue"}} {:id #uuid "62b13abd-7d2e-459f-a86e-8eb02a63c23a", :page 265, :position {:bounding {:x1 149.55729167163372, :y1 207.4739990234375, :x2 647.5782877653837, :y2 234.140625, :width 782, :height 1016.6000000000001}, :rects ({:x1 149.55729167163372, :y1 207.4739990234375, :x2 218.41005961596966, :y2 234.140625, :width 782, :height 1016.6000000000001} {:x1 329.73957316577435, :y1 207.4739990234375, :x2 459.17392985522747, :y2 234.140625, :width 782, :height 1016.6000000000001} {:x1 533.3332926481962, :y1 207.4739990234375, :x2 647.5782877653837, :y2 234.140625, :width 782, :height 1016.6000000000001} {:x1 222.99479167163372, :y1 210.5078125, :x2 528.7065836638212, :y2 229.67449951171875, :width 782, :height 1016.6000000000001}), :page 265}, :content {:text "Applyingpredicate()tells whether thatelementfits our criteria."}, :properties {:color "yellow"}} {:id #uuid "62b13ac0-54be-4c70-968b-8fa4bce9a088", :page 264, :position {:bounding {:x1 117.52604167163372, :y1 638.0859069824219, :x2 311.66279093921185, :y2 656.4192504882812, :width 782, :height 1016.6000000000001}, :rects ({:x1 117.52604167163372, :y1 638.0859069824219, :x2 311.66279093921185, :y2 656.4192504882812, :width 782, :height 1016.6000000000001}), :page 264}, :content {:text "if(predicate(element))"}, :properties {:color "yellow"}} {:id #uuid "62b13ade-8dcb-47cd-ba9e-f038e1e7a399", :page 264, :position {:bounding {:x1 100.65104167163372, :y1 771.4452819824219, :x2 471.94773356616497, :y2 808.8280944824219, :width 782, :height 1016.6000000000001}, :rects ({:x1 100.65104167163372, :y1 771.4452819824219, :x2 329.33591715991497, :y2 789.7786254882812, :width 782, :height 1016.6000000000001} {:x1 100.65104167163372, :y1 790.4947814941406, :x2 328.5089213103056, :y2 808.8280944824219, :width 782, :height 1016.6000000000001} {:x1 421.3151041716337, :y1 790.4947814941406, :x2 471.94773356616497, :y2 808.8280944824219, :width 782, :height 1016.6000000000001}), :page 264}, :content {:text "valints = listOf(1,2, -3)ints.any { it >0} eqtrue// [4]"}, :properties {:color "yellow"}} {:id #uuid "62b13ae5-8f6b-4a48-94b8-4c74ee5c3d5f", :page 265, :position {:bounding {:x1 149.55729167163372, :y1 256.66668701171875, :x2 624.8592936247587, :y2 283.3333740234375, :width 782, :height 1016.6000000000001}, :rects ({:x1 149.55729167163372, :y1 256.66668701171875, :x2 624.8592936247587, :y2 283.3333740234375, :width 782, :height 1016.6000000000001}), :page 265}, :content {:text "A member reference is another way to pass a function reference."}, :properties {:color "yellow"}} {:id #uuid "62b44f98-dc7d-4671-a977-aa079a793ecd", :page 265, :position {:bounding {:x1 89.99999237060547, :y1 673.4635162353516, :x2 452.56444549560547, :y2 754.0233917236328, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999237060547, :y1 673.4635162353516, :x2 190.61197662353516, :y2 692.6302032470703, :width 839.9999999999999, :height 1092} {:x1 108.12499237060547, :y1 693.9322662353516, :x2 207.83914947509766, :y2 713.0989532470703, :width 839.9999999999999, :height 1092} {:x1 108.12499237060547, :y1 714.3880157470703, :x2 298.5045394897461, :y2 733.5546417236328, :width 839.9999999999999, :height 1092} {:x1 398.17708587646484, :y1 714.3880157470703, :x2 452.56444549560547, :y2 733.5546417236328, :width 839.9999999999999, :height 1092} {:x1 89.99999237060547, :y1 734.8567657470703, :x2 117.1913070678711, :y2 754.0233917236328, :width 839.9999999999999, :height 1092}), :page 265}, :content {:text "funrepeat(times: Int,action: (Int) -> Unit// [1]) {"}, :properties {:color "blue"}} {:id #uuid "62b44fa2-36c8-487d-a4a1-5e961680b111", :page 265, :position {:bounding {:x1 89.99999237060547, :y1 315.37762451171875, :x2 750.4090805053711, :y2 366.96612548828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 177.63021087646484, :y1 315.37762451171875, :x2 750.4090805053711, :y2 342.87762451171875, :width 839.9999999999999, :height 1092} {:x1 89.99999237060547, :y1 318.45050048828125, :x2 750.4090805053711, :y2 339.28387451171875, :width 839.9999999999999, :height 1092} {:x1 89.99999237060547, :y1 339.46612548828125, :x2 248.7461166381836, :y2 366.96612548828125, :width 839.9999999999999, :height 1092} {:x1 288.51561737060547, :y1 339.46612548828125, :x2 423.06517791748047, :y2 366.96612548828125, :width 839.9999999999999, :height 1092} {:x1 89.99999237060547, :y1 343.6328125, :x2 283.54174041748047, :y2 362.79949951171875, :width 839.9999999999999, :height 1092}), :page 265}, :content {:text "repeat()from the standard library takes a function as its second parameter. Itrepeats an action anIntnumber of times:"}, :properties {:color "blue"}} {:id #uuid "62b4546c-cb69-4cd2-8da7-c5f207af651d", :page 266, :position {:bounding {:x1 89.29686737060547, :y1 212.04425048828125, :x2 397.3452682495117, :y2 239.54425048828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.29686737060547, :y1 212.04425048828125, :x2 397.3452682495117, :y2 239.54425048828125, :width 839.9999999999999, :height 1092}), :page 266}, :content {:text "A function return type can be nullable:"}, :properties {:color "blue"}} {:id #uuid "62b454bb-59a1-4cb0-8429-5ec2f0ce5725", :page 266, :position {:bounding {:x1 108.12499237060547, :y1 338.74998474121094, :x2 416.34847259521484, :y2 378.3723602294922, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.12499237060547, :y1 338.74998474121094, :x2 407.27742767333984, :y2 357.9166717529297, :width 839.9999999999999, :height 1092} {:x1 126.24999237060547, :y1 359.2057342529297, :x2 416.34847259521484, :y2 378.3723602294922, :width 839.9999999999999, :height 1092}), :page 266}, :content {:text "valtransform: (String) -> Int? ={ s: String -> s.toIntOrNull() }"}, :properties {:color "blue"}} {:id #uuid "62b454f6-fd96-4089-94d7-85e99620fa68", :page 266, :position {:bounding {:x1 89.99999237060547, :y1 521.6666259765625, :x2 750.0563583374023, :y2 573.2421875, :width 839.9999999999999, :height 1092}, :rects ({:x1 676.4999618530273, :y1 521.6666259765625, :x2 750.0563583374023, :y2 549.1666259765625, :width 839.9999999999999, :height 1092} {:x1 89.99999237060547, :y1 545.7421875, :x2 153.48442840576172, :y2 573.2421875, :width 839.9999999999999, :height 1092} {:x1 89.99999237060547, :y1 549.9088134765625, :x2 197.9609603881836, :y2 569.0755004882812, :width 839.9999999999999, :height 1092}), :page 266}, :content {:text " returns anullableInt?"}, :properties {:color "red"}} {:id #uuid "62b45537-eea4-41a5-b531-0bd64b9f8b28", :page 266, :position {:bounding {:x1 89.99999237060547, :y1 545.7421875, :x2 750.1256942749023, :y2 597.3176879882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 331.30208587646484, :y1 545.7421875, :x2 540.5174789428711, :y2 573.2421875, :width 839.9999999999999, :height 1092} {:x1 589.5572738647461, :y1 545.7421875, :x2 750.1256942749023, :y2 573.2421875, :width 839.9999999999999, :height 1092} {:x1 206.99217987060547, :y1 548.8020629882812, :x2 750.1256942749023, :y2 569.6353759765625, :width 839.9999999999999, :height 1092} {:x1 89.99999237060547, :y1 569.8176879882812, :x2 216.26390838623047, :y2 597.3176879882812, :width 839.9999999999999, :height 1092} {:x1 261.7838363647461, :y1 569.8176879882812, :x2 397.74605560302734, :y2 597.3176879882812, :width 839.9999999999999, :height 1092} {:x1 89.99999237060547, :y1 573.984375, :x2 261.78905487060547, :y2 593.1510009765625, :width 839.9999999999999, :height 1092}), :page 266}, :content {:text "mapNotNull()converts each element in aListinto a nullable valueand removes allnulls from the result."}, :properties {:color "yellow"}} {:id #uuid "62b455a2-e685-44b3-a56d-0f95d81bf50c", :page 266, :position {:bounding {:x1 89.2578125, :y1 628.28125, :x2 750.4859390258789, :y2 679.8567504882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 131.81412506103516, :y1 628.28125, :x2 750.4859390258789, :y2 655.78125, :width 839.9999999999999, :height 1092} {:x1 89.2578125, :y1 652.3567504882812, :x2 317.2295227050781, :y2 679.8567504882812, :width 839.9999999999999, :height 1092}), :page 266}, :content {:text " the difference between making the return type nullable versus making thewhole function type nullable"}, :properties {:color "yellow"}} {:id #uuid "62b45be3-a327-4575-9b57-86f797d3c02d", :page 268, :position {:bounding {:x1 89.98910522460938, :y1 385.84484326839447, :x2 752.4306488037109, :y2 437.30794751644135, :width 839.9999999999999, :height 1092}, :rects ({:x1 144.7898712158203, :y1 385.84484326839447, :x2 254.6937713623047, :y2 413.2309821844101, :width 839.9999999999999, :height 1092} {:x1 299.4644317626953, :y1 385.84484326839447, :x2 752.4306488037109, :y2 413.2309821844101, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 389.15401685237885, :x2 752.4306488037109, :y2 410.1500495672226, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 409.9218086004257, :x2 218.1333465576172, :y2 437.30794751644135, :width 839.9999999999999, :height 1092} {:x1 267.92759704589844, :y1 409.9218086004257, :x2 342.32582092285156, :y2 437.30794751644135, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 414.48617017269135, :x2 262.94593811035156, :y2 433.65645825862885, :width 839.9999999999999, :height 1092}), :page 268}, :content {:text "zip()combines twoLists by mimicking the behavior of the zipper on your jacket,pairing adjacentListelements:"}, :properties {:color "yellow"}} {:id #uuid "62b45d62-97c7-4ef1-b827-f308a2de4965", :page 268, :position {:bounding {:x1 130.7687530517578, :y1 883.3024238348007, :x2 750.1218109130859, :y2 934.7654975652695, :width 839.9999999999999, :height 1092}, :rects ({:x1 159.5099334716797, :y1 883.3024238348007, :x2 237.7560577392578, :y2 910.6885322332382, :width 839.9999999999999, :height 1092} {:x1 315.16868591308594, :y1 883.3024238348007, :x2 465.67588806152344, :y2 910.6885322332382, :width 839.9999999999999, :height 1092} {:x1 519.2808685302734, :y1 883.3024238348007, :x2 750.1218109130859, :y2 910.6885322332382, :width 839.9999999999999, :height 1092} {:x1 241.53993225097656, :y1 886.611566901207, :x2 750.1218109130859, :y2 907.6075996160507, :width 839.9999999999999, :height 1092} {:x1 130.7687530517578, :y1 907.379389166832, :x2 360.53684997558594, :y2 934.7654975652695, :width 839.9999999999999, :height 1092}), :page 268}, :content {:text "The range10..100is much larger thanright, but the zipping process stopswhen one sequence runs out."}, :properties {:color "yellow"}} {:id #uuid "62b45d86-4022-487a-9667-eaf2d19db720", :page 269, :position {:bounding {:x1 89.98910522460938, :y1 513.7323608398438, :x2 750.0604095458984, :y2 565.1954345703125, :width 839.9999999999999, :height 1092}, :rects ({:x1 314.56959533691406, :y1 513.7323608398438, :x2 568.5416717529297, :y2 541.1184692382812, :width 839.9999999999999, :height 1092} {:x1 613.5490570068359, :y1 513.7323608398438, :x2 750.0604095458984, :y2 541.1184692382812, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 517.04150390625, :x2 750.0604095458984, :y2 538.0375366210938, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 537.809326171875, :x2 210.27333068847656, :y2 565.1954345703125, :width 839.9999999999999, :height 1092} {:x1 255.10462951660156, :y1 537.809326171875, :x2 375.4464569091797, :y2 565.1954345703125, :width 839.9999999999999, :height 1092} {:x1 425.22666931152344, :y1 537.809326171875, :x2 524.7696380615234, :y2 565.1954345703125, :width 839.9999999999999, :height 1092} {:x1 594.5071868896484, :y1 537.809326171875, :x2 653.8716888427734, :y2 565.1954345703125, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 542.3736572265625, :x2 589.5242767333984, :y2 563.3696899414062, :width 839.9999999999999, :height 1092}), :page 269}, :content {:text "names.zip(ids) { ... }produces a sequence of name-idPairs, and applies thelambda to eachPair. The result is aListof initializedPersonobjects."}, :properties {:color "yellow"}} {:id #uuid "62b45d88-1d90-46a8-9c5a-8085e882a532", :page 269, :position {:bounding {:x1 89.98910522460938, :y1 513.7323608398438, :x2 750.0604095458984, :y2 565.1954345703125, :width 839.9999999999999, :height 1092}, :rects ({:x1 314.56959533691406, :y1 513.7323608398438, :x2 568.5416717529297, :y2 541.1184692382812, :width 839.9999999999999, :height 1092} {:x1 613.5490570068359, :y1 513.7323608398438, :x2 750.0604095458984, :y2 541.1184692382812, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 517.04150390625, :x2 750.0604095458984, :y2 538.0375366210938, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 537.809326171875, :x2 210.27333068847656, :y2 565.1954345703125, :width 839.9999999999999, :height 1092} {:x1 255.10462951660156, :y1 537.809326171875, :x2 375.4464569091797, :y2 565.1954345703125, :width 839.9999999999999, :height 1092} {:x1 425.22666931152344, :y1 537.809326171875, :x2 524.7696380615234, :y2 565.1954345703125, :width 839.9999999999999, :height 1092} {:x1 594.5071868896484, :y1 537.809326171875, :x2 653.8716888427734, :y2 565.1954345703125, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 542.3736572265625, :x2 589.5242767333984, :y2 563.3696899414062, :width 839.9999999999999, :height 1092}), :page 269}, :content {:text "names.zip(ids) { ... }produces a sequence of name-idPairs, and applies thelambda to eachPair. The result is aListof initializedPersonobjects."}, :properties {:color "blue"}} {:id #uuid "62b45d8b-7ebc-45cc-9346-6c588e313f1e", :page 269, :position {:bounding {:x1 89.98910522460938, :y1 513.7323608398438, :x2 750.0604095458984, :y2 565.1954345703125, :width 839.9999999999999, :height 1092}, :rects ({:x1 314.56959533691406, :y1 513.7323608398438, :x2 568.5416717529297, :y2 541.1184692382812, :width 839.9999999999999, :height 1092} {:x1 613.5490570068359, :y1 513.7323608398438, :x2 750.0604095458984, :y2 541.1184692382812, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 517.04150390625, :x2 750.0604095458984, :y2 538.0375366210938, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 537.809326171875, :x2 210.27333068847656, :y2 565.1954345703125, :width 839.9999999999999, :height 1092} {:x1 255.10462951660156, :y1 537.809326171875, :x2 375.4464569091797, :y2 565.1954345703125, :width 839.9999999999999, :height 1092} {:x1 425.22666931152344, :y1 537.809326171875, :x2 524.7696380615234, :y2 565.1954345703125, :width 839.9999999999999, :height 1092} {:x1 594.5071868896484, :y1 537.809326171875, :x2 653.8716888427734, :y2 565.1954345703125, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 542.3736572265625, :x2 589.5242767333984, :y2 563.3696899414062, :width 839.9999999999999, :height 1092}), :page 269}, :content {:text "names.zip(ids) { ... }produces a sequence of name-idPairs, and applies thelambda to eachPair. The result is aListof initializedPersonobjects."}, :properties {:color "blue"}} {:id #uuid "62b45d90-5e03-49b5-a826-4e67be653e94", :page 269, :position {:bounding {:x1 89.98910522460938, :y1 513.7323608398438, :x2 750.0604095458984, :y2 565.1954345703125, :width 839.9999999999999, :height 1092}, :rects ({:x1 314.56959533691406, :y1 513.7323608398438, :x2 568.5416717529297, :y2 541.1184692382812, :width 839.9999999999999, :height 1092} {:x1 613.5490570068359, :y1 513.7323608398438, :x2 750.0604095458984, :y2 541.1184692382812, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 517.04150390625, :x2 750.0604095458984, :y2 538.0375366210938, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 537.809326171875, :x2 210.27333068847656, :y2 565.1954345703125, :width 839.9999999999999, :height 1092} {:x1 255.10462951660156, :y1 537.809326171875, :x2 375.4464569091797, :y2 565.1954345703125, :width 839.9999999999999, :height 1092} {:x1 425.22666931152344, :y1 537.809326171875, :x2 524.7696380615234, :y2 565.1954345703125, :width 839.9999999999999, :height 1092} {:x1 594.5071868896484, :y1 537.809326171875, :x2 653.8716888427734, :y2 565.1954345703125, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 542.3736572265625, :x2 589.5242767333984, :y2 563.3696899414062, :width 839.9999999999999, :height 1092}), :page 269}, :content {:text "names.zip(ids) { ... }produces a sequence of name-idPairs, and applies thelambda to eachPair. The result is aListof initializedPersonobjects."}, :properties {:color "blue"}} {:id #uuid "62b45e0d-0e64-434d-96d6-8ad5b96572e3", :page 269, :position {:bounding {:x1 89.43281555175781, :y1 922.7555541992188, :x2 742.2042083740234, :y2 950.1416625976562, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.43281555175781, :y1 922.7555541992188, :x2 232.09141540527344, :y2 950.1416625976562, :width 839.9999999999999, :height 1092} {:x1 371.62403869628906, :y1 922.7555541992188, :x2 742.2042083740234, :y2 950.1416625976562, :width 839.9999999999999, :height 1092} {:x1 237.0326385498047, :y1 926.064697265625, :x2 366.66419982910156, :y2 947.0607299804688, :width 839.9999999999999, :height 1092}), :page 269}, :content {:text "The second call tozipWithNext()performs an additional operation after zipping."}, :properties {:color "yellow"}} {:id #uuid "62b45e11-ddf4-4f89-a472-4392672a38e6", :page 270, :position {:bounding {:x1 89.98910522460938, :y1 186.62503051757812, :x2 750.0117645263672, :y2 238.088134765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 184.98472595214844, :y1 186.62503051757812, :x2 239.25819396972656, :y2 214.01116943359375, :width 839.9999999999999, :height 1092} {:x1 289.6510772705078, :y1 186.62503051757812, :x2 607.8005828857422, :y2 214.01116943359375, :width 839.9999999999999, :height 1092} {:x1 652.7740325927734, :y1 186.62503051757812, :x2 683.8400115966797, :y2 214.01116943359375, :width 839.9999999999999, :height 1092} {:x1 734.2192230224609, :y1 186.62503051757812, :x2 750.0117645263672, :y2 214.01116943359375, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 189.9342041015625, :x2 750.0117645263672, :y2 210.93023681640625, :width 839.9999999999999, :height 1092} {:x1 129.87014770507812, :y1 210.7020263671875, :x2 312.3866424560547, :y2 238.088134765625, :width 839.9999999999999, :height 1092} {:x1 362.1387481689453, :y1 210.7020263671875, :x2 508.5526580810547, :y2 238.088134765625, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 214.01116943359375, :x2 357.1713104248047, :y2 235.0072021484375, :width 839.9999999999999, :height 1092}), :page 270}, :content {:text "flatten()takes aListcontaining elements that are themselvesLists—aListofLists—and flattens it into aListof single elements:"}, :properties {:color "yellow"}} {:id #uuid "62b45e42-2467-49de-b440-0a7566f36728", :page 270, :position {:bounding {:x1 89.98910522460938, :y1 495.560546875, :x2 775.1557464599609, :y2 522.9466552734375, :width 839.9999999999999, :height 1092}, :rects ({:x1 183.0448760986328, :y1 495.560546875, :x2 677.9409027099609, :y2 522.9466552734375, :width 839.9999999999999, :height 1092} {:x1 770.7911224365234, :y1 495.560546875, :x2 775.1557464599609, :y2 522.9466552734375, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 498.86968994140625, :x2 770.8116302490234, :y2 519.86572265625, :width 839.9999999999999, :height 1092}), :page 270}, :content {:text "flatten()helps us understand another important operation on collections:flatMap()."}, :properties {:color "yellow"}} {:id #uuid "62b46089-5376-44d6-a9a7-8337ba88fcd1", :page 209, :position {:bounding {:x1 126.2471923828125, :y1 505.9586486816406, :x2 335.63694763183594, :y2 525.1289367675781, :width 839.9999999999999, :height 1092}, :rects ({:x1 126.2471923828125, :y1 505.9586486816406, :x2 335.63694763183594, :y2 525.1289367675781, :width 839.9999999999999, :height 1092}), :page 209}, :content {:text "Pair(input *2,\"High\")"}, :properties {:color "yellow"}} {:id #uuid "62b46267-302a-4b64-98a6-277a2ba80195", :page 270, :position {:bounding {:x1 89.98910522460938, :y1 121.953857421875, :x2 236.3566131591797, :y2 162.12017822265625, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98910522460938, :y1 121.953857421875, :x2 236.3566131591797, :y2 162.12017822265625, :width 839.9999999999999, :height 1092}), :page 270}, :content {:text "Flattening"}, :properties {:color "yellow"}} {:id #uuid "62b462ca-a2d4-417c-a21a-bc08c152ff7f", :page 270, :position {:bounding {:x1 108.11814880371094, :y1 685.3805923461914, :x2 425.3567352294922, :y2 745.4731826782227, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 685.3805923461914, :x2 280.3227996826172, :y2 704.5508804321289, :width 839.9999999999999, :height 1092} {:x1 370.98216247558594, :y1 685.3805923461914, :x2 425.3567352294922, :y2 704.5508804321289, :width 839.9999999999999, :height 1092} {:x1 126.2471923828125, :y1 705.8346328735352, :x2 380.02552795410156, :y2 725.0049209594727, :width 839.9999999999999, :height 1092} {:x1 108.11814880371094, :y1 726.3028945922852, :x2 117.18783569335938, :y2 745.4731826782227, :width 839.9999999999999, :height 1092}), :page 270}, :content {:text "intRange.map { a ->// [1]intRange.map { b -> a to b }}"}, :properties {:color "blue"}} {:id #uuid "62b4630b-a540-434e-9457-a4458833941a", :page 271, :position {:bounding {:x1 89.43281555175781, :y1 329.5606689453125, :x2 750.5908050537109, :y2 381.0238037109375, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.43281555175781, :y1 329.5606689453125, :x2 416.68992614746094, :y2 356.94677734375, :width 839.9999999999999, :height 1092} {:x1 503.3627166748047, :y1 329.5606689453125, :x2 750.5908050537109, :y2 356.94677734375, :width 839.9999999999999, :height 1092} {:x1 420.06321716308594, :y1 332.86981201171875, :x2 750.5908050537109, :y2 353.8658447265625, :width 839.9999999999999, :height 1092} {:x1 174.14439392089844, :y1 353.63763427734375, :x2 415.87339782714844, :y2 381.0238037109375, :width 839.9999999999999, :height 1092} {:x1 524.2303924560547, :y1 353.63763427734375, :x2 531.2166595458984, :y2 381.0238037109375, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 356.93255615234375, :x2 524.2198333740234, :y2 377.9285888671875, :width 839.9999999999999, :height 1092}), :page 271}, :content {:text "The lambda in each case is identical: everyintRangeelement is combined with everyintRangeelement to produce all possiblea to b Pairs"}, :properties {:color "yellow"}} {:id #uuid "62b463ce-6f01-4711-bf05-832a71b4c803", :page 270, :position {:bounding {:x1 108.11814880371094, :y1 849.0982818603516, :x2 425.3567352294922, :y2 909.1908721923828, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 849.0982818603516, :x2 280.3227996826172, :y2 868.2685699462891, :width 839.9999999999999, :height 1092} {:x1 370.98216247558594, :y1 849.0982818603516, :x2 425.3567352294922, :y2 868.2685699462891, :width 839.9999999999999, :height 1092} {:x1 126.2471923828125, :y1 869.5523223876953, :x2 380.02552795410156, :y2 888.7226104736328, :width 839.9999999999999, :height 1092} {:x1 108.11814880371094, :y1 890.0205841064453, :x2 271.28868103027344, :y2 909.1908721923828, :width 839.9999999999999, :height 1092}), :page 270}, :content {:text "intRange.map { a ->// [2]intRange.map { b -> a to b }}.flatten() eq\"[\""}, :properties {:color "blue"}} {:id #uuid "62b52048-95b9-4645-85a7-cbadddb3589b", :page 271, :position {:bounding {:x1 89.98910522460938, :y1 353.6376037597656, :x2 750.5391998291016, :y2 429.1634216308594, :width 839.9999999999999, :height 1092}, :rects ({:x1 568.1518707275391, :y1 353.6376037597656, :x2 621.2086334228516, :y2 381.0237731933594, :width 839.9999999999999, :height 1092} {:x1 679.8463287353516, :y1 353.6376037597656, :x2 750.5391998291016, :y2 381.0237731933594, :width 839.9999999999999, :height 1092} {:x1 592.6814117431641, :y1 358.2019958496094, :x2 750.5391998291016, :y2 377.3722839355469, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 377.7003479003906, :x2 583.9258117675781, :y2 405.0864562988281, :width 839.9999999999999, :height 1092} {:x1 630.3944244384766, :y1 377.7003479003906, :x2 750.0483551025391, :y2 405.0864562988281, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 382.2646789550781, :x2 750.0483551025391, :y2 401.4349670410156, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 401.7773132324219, :x2 173.5132293701172, :y2 429.1634216308594, :width 839.9999999999999, :height 1092} {:x1 258.3282012939453, :y1 401.7773132324219, :x2 262.5959014892578, :y2 429.1634216308594, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 406.3416442871094, :x2 258.3363494873047, :y2 425.5119323730469, :width 839.9999999999999, :height 1092}), :page 271}, :content {:text " in[1],map()helpfullypreserves the extra information that we have produced threeLists, one for eachelement inintRange."}, :properties {:color "blue"}} {:id #uuid "62b5208a-e7a3-40c4-a465-64e107215fbd", :page 271, :position {:bounding {:x1 89.98910522460938, :y1 484.3207702636719, :x2 750.0535430908203, :y2 559.8608703613281, :width 839.9999999999999, :height 1092}, :rects ({:x1 285.3719940185547, :y1 484.3207702636719, :x2 553.3728790283203, :y2 511.7069396972656, :width 839.9999999999999, :height 1092} {:x1 659.5634918212891, :y1 484.3207702636719, :x2 750.0279083251953, :y2 511.7069396972656, :width 839.9999999999999, :height 1092} {:x1 317.8217010498047, :y1 488.8851623535156, :x2 750.0279083251953, :y2 508.0554504394531, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 508.3977355957031, :x2 626.2767028808594, :y2 535.7839050292969, :width 839.9999999999999, :height 1092} {:x1 671.9585723876953, :y1 508.3977355957031, :x2 750.0535430908203, :y2 535.7839050292969, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 512.9621276855469, :x2 750.0535430908203, :y2 532.1324157714844, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 532.4747009277344, :x2 276.52330017089844, :y2 559.8608703613281, :width 839.9999999999999, :height 1092}), :page 271}, :content {:text "[2]shows the application of theflatten()function toremove this additional structure and flatten the result into a singleList, which isan acceptable approach"}, :properties {:color "blue"}} {:id #uuid "62b52093-b327-4e6f-82b6-c1c695f7a668", :page 271, :position {:bounding {:x1 299.0087432861328, :y1 556.5516662597656, :x2 393.53919982910156, :y2 583.9378356933594, :width 839.9999999999999, :height 1092}, :rects ({:x1 299.0087432861328, :y1 556.5516662597656, :x2 299.02256774902344, :y2 583.9378356933594, :width 839.9999999999999, :height 1092} {:x1 303.7863006591797, :y1 559.8608703613281, :x2 393.53919982910156, :y2 580.8569030761719, :width 839.9999999999999, :height 1092}), :page 271}, :content {:text "flatMap()"}, :properties {:color "red"}} {:id #uuid "62b5209e-a76e-402d-844c-9a065fb6d7a9", :page 271, :position {:bounding {:x1 108.11814880371094, :y1 970.6812286376953, :x2 416.2759552001953, :y2 989.8515167236328, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 970.6812286376953, :x2 416.2759552001953, :y2 989.8515167236328, :width 839.9999999999999, :height 1092}), :page 271}, :content {:text "books.map { it.authors }.flatten()"}, :properties {:color "yellow"}} {:id #uuid "62b522ad-1aaf-445a-b529-e3128522918d", :page 274, :position {:bounding {:x1 198.7471466064453, :y1 758.7668571472168, :x2 235.0143585205078, :y2 777.9371452331543, :width 839.9999999999999, :height 1092}, :rects ({:x1 198.7471466064453, :y1 758.7668571472168, :x2 235.0143585205078, :y2 777.9371452331543, :width 839.9999999999999, :height 1092}), :page 274}, :content {:text "ages"}, :properties {:color "yellow"}} {:id #uuid "62b522bc-a9d1-482f-9a63-2defb0f28198", :page 274, :position {:bounding {:x1 89.29017639160156, :y1 839.1137847900391, :x2 472.60804748535156, :y2 866.4998931884766, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.29017639160156, :y1 839.1137847900391, :x2 102.82633972167969, :y2 866.4998931884766, :width 839.9999999999999, :height 1092} {:x1 141.2525177001953, :y1 839.1137847900391, :x2 472.60804748535156, :y2 866.4998931884766, :width 839.9999999999999, :height 1092} {:x1 107.24806213378906, :y1 842.4229278564453, :x2 137.17005920410156, :y2 863.4189605712891, :width 839.9999999999999, :height 1092}), :page 274}, :content {:text "AMapuses keys to provide fast access to its value"}, :properties {:color "yellow"}} {:id #uuid "62b522c7-ded4-4e34-b6ca-0a5eaf04e71a", :page 274, :position {:bounding {:x1 89.98910522460938, :y1 863.1907501220703, :x2 751.9979400634766, :y2 914.6538238525391, :width 839.9999999999999, :height 1092}, :rects ({:x1 491.6587677001953, :y1 863.1907501220703, :x2 658.5063629150391, :y2 890.5768585205078, :width 839.9999999999999, :height 1092} {:x1 662.2450103759766, :y1 866.4998931884766, :x2 751.9979400634766, :y2 887.4959259033203, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 887.2677154541016, :x2 303.00099182128906, :y2 914.6538238525391, :width 839.9999999999999, :height 1092} {:x1 337.79075622558594, :y1 887.2677154541016, :x2 342.15541076660156, :y2 914.6538238525391, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 891.8320465087891, :x2 337.8019256591797, :y2 911.0023345947266, :width 839.9999999999999, :height 1092}), :page 274}, :content {:text ". The library functiongroupBy()is one way to create such aMap:"}, :properties {:color "yellow"}} {:id #uuid "62b5236c-3dc9-4f42-b9e7-27c394db40b1", :page 275, :position {:bounding {:x1 126.2471923828125, :y1 249.19949340820312, :x2 389.10951232910156, :y2 268.3697814941406, :width 839.9999999999999, :height 1092}, :rects ({:x1 126.2471923828125, :y1 249.19949340820312, :x2 389.10951232910156, :y2 268.3697814941406, :width 839.9999999999999, :height 1092}), :page 275}, :content {:text "people().groupBy(Person::age)"}, :properties {:color "green"}} {:id #uuid "62b5238d-f804-43bf-928e-97ec731b2fd7", :page 275, :position {:bounding {:x1 108.11814880371094, :y1 290.13604736328125, :x2 325.67234802246094, :y2 370.6968994140625, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 290.13604736328125, :x2 271.25791931152344, :y2 309.30633544921875, :width 839.9999999999999, :height 1092} {:x1 126.2471923828125, :y1 310.59002685546875, :x2 307.5432891845703, :y2 329.76031494140625, :width 839.9999999999999, :height 1092} {:x1 126.2471923828125, :y1 331.058349609375, :x2 325.67234802246094, :y2 350.2286376953125, :width 839.9999999999999, :height 1092} {:x1 126.2471923828125, :y1 351.526611328125, :x2 307.5432891845703, :y2 370.6968994140625, :width 839.9999999999999, :height 1092}), :page 275}, :content {:text "map[21] eq listOf(Person(\"Alice\",21),Person(\"Charlie\",21),Person(\"Franz\",21))"}, :properties {:color "yellow"}} {:id #uuid "62b52391-04a6-4ecd-a8cd-9fe5f478a2ad", :page 275, :position {:bounding {:x1 108.11814880371094, :y1 269.6677551269531, :x2 488.8336944580078, :y2 288.8380432128906, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 269.6677551269531, :x2 488.8336944580078, :y2 288.8380432128906, :width 839.9999999999999, :height 1092}), :page 275}, :content {:text "map[15] eq listOf(Person(\"Arthricia\",15))"}, :properties {:color "yellow"}} {:id #uuid "62b52523-bd0d-464c-9f8c-88f00ab0b676", :page 275, :position {:bounding {:x1 89.98910522460938, :y1 574.8804321289062, :x2 750.0117340087891, :y2 626.3435668945312, :width 839.9999999999999, :height 1092}, :rects ({:x1 179.73570251464844, :y1 574.8804321289062, :x2 379.1627960205078, :y2 602.2665405273438, :width 839.9999999999999, :height 1092} {:x1 426.52467346191406, :y1 574.8804321289062, :x2 676.8912506103516, :y2 602.2665405273438, :width 839.9999999999999, :height 1092} {:x1 734.2191925048828, :y1 574.8804321289062, :x2 750.0117340087891, :y2 602.2665405273438, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 578.1895751953125, :x2 750.0117340087891, :y2 599.1856079101562, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 598.9573974609375, :x2 168.0354766845703, :y2 626.3435668945312, :width 839.9999999999999, :height 1092}), :page 275}, :content {:text "groupBy()’s parameter produces aMapwhere each key connects to aListofelements. "}, :properties {:color "blue"}} {:id #uuid "62b52529-d1f6-4ef4-b185-55b97d4b996f", :page 275, :position {:bounding {:x1 89.98910522460938, :y1 657.3954162597656, :x2 750.0287628173828, :y2 708.8584899902344, :width 839.9999999999999, :height 1092}, :rects ({:x1 535.4146881103516, :y1 657.3954162597656, :x2 580.9777984619141, :y2 684.7815246582031, :width 839.9999999999999, :height 1092} {:x1 674.1266021728516, :y1 657.3954162597656, :x2 750.0287628173828, :y2 684.7815246582031, :width 839.9999999999999, :height 1092} {:x1 587.5608062744141, :y1 660.7045593261719, :x2 750.0287628173828, :y2 681.7005920410156, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 681.4723815917969, :x2 389.9187927246094, :y2 708.8584899902344, :width 839.9999999999999, :height 1092}), :page 275}, :content {:text " Withfilter()you mustrepeat the grouping for each new key:"}, :properties {:color "yellow"}} {:id #uuid "62b52536-662e-4152-af5d-963f92985722", :page 275, :position {:bounding {:x1 89.41854858398438, :y1 633.3184204101562, :x2 750.0208892822266, :y2 684.7815246582031, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.41854858398438, :y1 633.3184204101562, :x2 440.4419860839844, :y2 660.7045593261719, :width 839.9999999999999, :height 1092} {:x1 532.3463897705078, :y1 633.3184204101562, :x2 635.4174346923828, :y2 660.7045593261719, :width 839.9999999999999, :height 1092} {:x1 737.3999786376953, :y1 633.3184204101562, :x2 750.0208892822266, :y2 660.7045593261719, :width 839.9999999999999, :height 1092} {:x1 446.42237854003906, :y1 636.6275939941406, :x2 750.0208892822266, :y2 657.6236267089844, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 657.3954162597656, :x2 531.0184020996094, :y2 684.7815246582031, :width 839.9999999999999, :height 1092}), :page 275}, :content {:text "You can produce the same groups using thefilter()function, butgroupBy()ispreferable because it only performs the grouping once"}, :properties {:color "red"}} {:id #uuid "62b52545-ba02-4f0b-9972-8549106b1349", :page 275, :position {:bounding {:x1 108.11814880371094, :y1 849.0982666015625, :x2 461.5918731689453, :y2 888.7225952148438, :width 839.9999999999999, :height 1092}, :rects ({:x1 126.2471923828125, :y1 849.0982666015625, :x2 452.538330078125, :y2 868.2685546875, :width 839.9999999999999, :height 1092} {:x1 108.11814880371094, :y1 869.5523071289062, :x2 461.5918731689453, :y2 888.7225952148438, :width 839.9999999999999, :height 1092}), :page 275}, :content {:text "people().groupBy { it.name.first() }// groupBy() produces map-speed access:"}, :properties {:color "yellow"}} {:id #uuid "62b5255a-cdc5-4cd6-91b4-bc32771fa92f", :page 276, :position {:bounding {:x1 108.11814880371094, :y1 126.4183349609375, :x2 325.6615753173828, :y2 186.51092529296875, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 126.4183349609375, :x2 262.18809509277344, :y2 145.588623046875, :width 839.9999999999999, :height 1092} {:x1 126.2471923828125, :y1 146.87237548828125, :x2 325.6615753173828, :y2 166.04266357421875, :width 839.9999999999999, :height 1092} {:x1 108.11814880371094, :y1 167.34063720703125, :x2 117.19110107421875, :y2 186.51092529296875, :width 839.9999999999999, :height 1092}), :page 276}, :content {:text "people().filter {it.name.first() =='A'}"}, :properties {:color "red"}} {:id #uuid "62b525a3-933d-4cce-b901-f9376dff2428", :page 276, :position {:bounding {:x1 89.98910522460938, :y1 740.2099304199219, :x2 750.0609283447266, :y2 791.6730346679688, :width 839.9999999999999, :height 1092}, :rects ({:x1 245.4196319580078, :y1 740.2099304199219, :x2 595.7868194580078, :y2 767.5960388183594, :width 839.9999999999999, :height 1092} {:x1 637.2979888916016, :y1 740.2099304199219, :x2 750.0609283447266, :y2 767.5960388183594, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 743.5190734863281, :x2 750.0609283447266, :y2 764.5151062011719, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 764.2868957519531, :x2 685.1247253417969, :y2 791.6730346679688, :width 839.9999999999999, :height 1092}), :page 276}, :content {:text "associateWith()allows you to take a list of keys and build aMapby associatingeach of these keys with a value created by its parameter (here, the lambda):"}, :properties {:color "red"}} {:id #uuid "62b525d3-3380-40f6-abaf-8227778ddf6f", :page 277, :position {:bounding {:x1 108.11814880371094, :y1 228.73121643066406, :x2 434.40362548828125, :y2 268.36976623535156, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 228.73121643066406, :x2 380.0198211669922, :y2 247.90150451660156, :width 839.9999999999999, :height 1092} {:x1 126.2471923828125, :y1 249.19947814941406, :x2 434.40362548828125, :y2 268.36976623535156, :width 839.9999999999999, :height 1092}), :page 277}, :content {:text "valmap: Map<Person, String> =people().associateWith { it.name }"}, :properties {:color "yellow"}} {:id #uuid "62b5261b-6d98-456e-8135-11b2cea1ef8d", :page 277, :position {:bounding {:x1 89.98910522460938, :y1 506.0014953613281, :x2 757.3547515869141, :y2 557.4645690917969, :width 839.9999999999999, :height 1092}, :rects ({:x1 224.73741149902344, :y1 506.0014953613281, :x2 582.9030914306641, :y2 533.3876037597656, :width 839.9999999999999, :height 1092} {:x1 737.4284820556641, :y1 506.0014953613281, :x2 757.3547515869141, :y2 533.3876037597656, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 509.3106384277344, :x2 757.3547515869141, :y2 530.3066711425781, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 530.0784606933594, :x2 627.3039855957031, :y2 557.4645690917969, :width 839.9999999999999, :height 1092}), :page 277}, :content {:text "associateBy()reverses the order of association produced byassociateWith()—the selector (the lambda in the following example) becomes the key:"}, :properties {:color "red"}} {:id #uuid "62b526f2-1a8d-4f4b-9a1f-533823384075", :page 278, :position {:bounding {:x1 89.98910522460938, :y1 502.29290771484375, :x2 750.3220520019531, :y2 577.8330078125, :width 839.9999999999999, :height 1092}, :rects ({:x1 206.3230743408203, :y1 502.29290771484375, :x2 433.4290313720703, :y2 529.6790771484375, :width 839.9999999999999, :height 1092} {:x1 469.90028381347656, :y1 502.29290771484375, :x2 750.1159210205078, :y2 529.6790771484375, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 505.60211181640625, :x2 750.1159210205078, :y2 526.59814453125, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 526.3699340820312, :x2 750.3220520019531, :y2 553.7560424804688, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 530.9342651367188, :x2 750.3220520019531, :y2 550.1045532226562, :width 839.9999999999999, :height 1092} {:x1 124.89215087890625, :y1 550.4468994140625, :x2 295.2356719970703, :y2 577.8330078125, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 553.7560424804688, :x2 119.91108703613281, :y2 574.7520751953125, :width 839.9999999999999, :height 1092}), :page 278}, :content {:text "getOrElse()tries to look up a value in aMap. Its associated lambda computes adefault value when a key is not present. Because it’s a lambda, we compute the defaultkeyonly when necessary:"}, :properties {:color "blue"}} {:id #uuid "62b5281f-18b1-4ec2-b80a-7196b7e6de24", :page 278, :position {:bounding {:x1 89.98910522460938, :y1 865.6298065185547, :x2 401.7544708251953, :y2 893.0159149169922, :width 839.9999999999999, :height 1092}, :rects ({:x1 198.4923553466797, :y1 865.6298065185547, :x2 293.2656707763672, :y2 893.0159149169922, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 868.9389495849609, :x2 401.7544708251953, :y2 889.9349822998047, :width 839.9999999999999, :height 1092}), :page 278}, :content {:text "getOrPut()works on aMutableMap"}, :properties {:color "red"}} {:id #uuid "62b52826-3be9-4629-9860-d927f76d9dd7", :page 279, :position {:bounding {:x1 89.29017639160156, :y1 513.7323303222656, :x2 630.0125885009766, :y2 541.1184997558594, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.29017639160156, :y1 513.7323303222656, :x2 237.63172912597656, :y2 541.1184997558594, :width 839.9999999999999, :height 1092} {:x1 322.24342346191406, :y1 513.7323303222656, :x2 326.6080780029297, :y2 541.1184997558594, :width 839.9999999999999, :height 1092} {:x1 456.0930938720703, :y1 513.7323303222656, :x2 485.5270538330078, :y2 541.1184997558594, :width 839.9999999999999, :height 1092} {:x1 242.48133850097656, :y1 517.0414733886719, :x2 630.0125885009766, :y2 538.0375061035156, :width 839.9999999999999, :height 1092}), :page 279}, :content {:text "All three functionsfilter(),filterKeys()andfilterValues()"}, :properties {:color "red"}} {:id #uuid "62b528de-9b83-4e4f-a38f-c65023d1a64c", :page 279, :position {:bounding {:x1 89.98910522460938, :y1 621.3940887451172, :x2 504.7898864746094, :y2 661.5604095458984, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98910522460938, :y1 621.3940887451172, :x2 504.7898864746094, :y2 661.5604095458984, :width 839.9999999999999, :height 1092}), :page 279}, :content {:text "Applying Operations to Maps"}, :properties {:color "yellow"}} {:id #uuid "62b52a5f-585d-4252-9c3b-f814e8a26975", :page 279, :position {:bounding {:x1 131.5104522705078, :y1 750.5653114318848, :x2 334.8864288330078, :y2 777.9514198303223, :width 839.9999999999999, :height 1092}, :rects ({:x1 131.5104522705078, :y1 750.5653114318848, :x2 334.8864288330078, :y2 777.9514198303223, :width 839.9999999999999, :height 1092}), :page 279}, :content {:text "Transforming a collection"}, :properties {:color "red"}} {:id #uuid "62b52a62-b6fb-47f7-8fe9-e38be78bb5e7", :page 279, :position {:bounding {:x1 131.5104522705078, :y1 776.9957313537598, :x2 358.55467224121094, :y2 804.3819007873535, :width 839.9999999999999, :height 1092}, :rects ({:x1 131.5104522705078, :y1 776.9957313537598, :x2 358.55467224121094, :y2 804.3819007873535, :width 839.9999999999999, :height 1092}), :page 279}, :content {:text "The key-value data structure"}, :properties {:color "red"}} {:id #uuid "62b52adc-4f71-4e06-9846-0982d4541f45", :page 280, :position {:bounding {:x1 108.11814880371094, :y1 228.731201171875, :x2 506.9445343017578, :y2 288.8380126953125, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 228.731201171875, :x2 198.7490692138672, :y2 247.9014892578125, :width 839.9999999999999, :height 1092} {:x1 452.5700225830078, :y1 228.731201171875, :x2 506.9445343017578, :y2 247.9014892578125, :width 839.9999999999999, :height 1092} {:x1 126.2471923828125, :y1 249.199462890625, :x2 334.72486877441406, :y2 268.3697509765625, :width 839.9999999999999, :height 1092} {:x1 108.11814880371094, :y1 269.667724609375, :x2 380.9524383544922, :y2 288.8380126953125, :width 839.9999999999999, :height 1092}), :page 280}, :content {:text "even.map {// [1]\"${it.key}=${it.value}\"} eq listOf(\"2=two\",\"4=four\")"}, :properties {:color "green"}} {:id #uuid "62b52adf-8285-42e4-ad79-557467816c01", :page 280, :position {:bounding {:x1 108.11814880371094, :y1 310.59002685546875, :x2 506.9445343017578, :y2 370.6968994140625, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 310.59002685546875, :x2 343.76173400878906, :y2 329.76031494140625, :width 839.9999999999999, :height 1092} {:x1 452.5700225830078, :y1 310.59002685546875, :x2 506.9445343017578, :y2 329.76031494140625, :width 839.9999999999999, :height 1092} {:x1 126.2471923828125, :y1 331.058349609375, :x2 244.0773162841797, :y2 350.2286376953125, :width 839.9999999999999, :height 1092} {:x1 108.11814880371094, :y1 351.526611328125, :x2 380.9524383544922, :y2 370.6968994140625, :width 839.9999999999999, :height 1092}), :page 280}, :content {:text "even.map { (key, value) ->// [2]\"$key=$value\"} eq listOf(\"2=two\",\"4=four\")"}, :properties {:color "green"}} {:id #uuid "62b52b75-7eea-4ff7-8eff-7ff23d8f5074", :page 280, :position {:bounding {:x1 108.11814880371094, :y1 392.4631805419922, :x2 506.9445343017578, :y2 473.02403259277344, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 392.4631805419922, :x2 407.21376037597656, :y2 411.6334686279297, :width 839.9999999999999, :height 1092} {:x1 452.5700225830078, :y1 392.4631805419922, :x2 506.9445343017578, :y2 411.6334686279297, :width 839.9999999999999, :height 1092} {:x1 126.2471923828125, :y1 412.9171600341797, :x2 506.93885803222656, :y2 432.0874481201172, :width 839.9999999999999, :height 1092} {:x1 126.2471923828125, :y1 433.38548278808594, :x2 344.69435119628906, :y2 452.55577087402344, :width 839.9999999999999, :height 1092} {:x1 144.37623596191406, :y1 453.85374450683594, :x2 317.5078887939453, :y2 473.02403259277344, :width 839.9999999999999, :height 1092}), :page 280}, :content {:text "even.mapKeys { (num, _) -> -num }// [3].mapValues { (_, str) ->\"minus $str\"} eqmapOf(-2to\"minus two\",-4to\"minus four\")"}, :properties {:color "green"}} {:id #uuid "62b52bac-4772-4cfd-932c-5e638a6ffcc3", :page 280, :position {:bounding {:x1 108.11814880371094, :y1 494.7760467529297, :x2 506.9445343017578, :y2 575.3511199951172, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 494.7760467529297, :x2 343.76173400878906, :y2 513.9463348388672, :width 839.9999999999999, :height 1092} {:x1 126.2471923828125, :y1 515.2443084716797, :x2 325.6507110595703, :y2 534.4145965576172, :width 839.9999999999999, :height 1092} {:x1 108.11814880371094, :y1 535.7125701904297, :x2 506.9445343017578, :y2 554.8828582763672, :width 839.9999999999999, :height 1092} {:x1 126.2471923828125, :y1 556.1808319091797, :x2 289.38697814941406, :y2 575.3511199951172, :width 839.9999999999999, :height 1092}), :page 280}, :content {:text "even.map { (key, value) ->-key to\"minus $value\"}.toMap() eq mapOf(-2to\"minus two\",// [4]-4to\"minus four\""}, :properties {:color "yellow"}} {:id #uuid "62b52c7c-1f5c-409f-b606-cd042c4e91ec", :page 281, :position {:bounding {:x1 89.98910522460938, :y1 350.0146484375, :x2 702.1600494384766, :y2 377.4007568359375, :width 839.9999999999999, :height 1092}, :rects ({:x1 145.1750030517578, :y1 350.0146484375, :x2 448.3031768798828, :y2 377.4007568359375, :width 839.9999999999999, :height 1092} {:x1 488.7282257080078, :y1 350.0146484375, :x2 702.1600494384766, :y2 377.4007568359375, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 353.32379150390625, :x2 483.4191436767578, :y2 374.31982421875, :width 839.9999999999999, :height 1092}), :page 281}, :content {:text "any()checks whether any of the entries in aMapsatisfy the given predicate,"}, :properties {:color "yellow"}} {:id #uuid "62b52d9d-b02f-4ca2-ab0b-63a9d4d60e67", :page 281, :position {:bounding {:x1 89.98910522460938, :y1 408.481201171875, :x2 750.7074737548828, :y2 459.94427490234375, :width 839.9999999999999, :height 1092}, :rects ({:x1 225.92127990722656, :y1 408.481201171875, :x2 750.7074737548828, :y2 435.8673095703125, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 411.79034423828125, :x2 750.7074737548828, :y2 432.786376953125, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 432.55816650390625, :x2 481.1464538574219, :y2 459.94427490234375, :width 839.9999999999999, :height 1092}), :page 281}, :content {:text "maxByOrNull()finds the maximum entry based on the given criteria. There maynot be a maximum entry, so the result is nullable."}, :properties {:color "yellow"}} {:id #uuid "62b52dcd-ef6a-4f69-b2d9-be51cb40dd81", :page 282, :position {:bounding {:x1 131.5104522705078, :y1 258.2996826171875, :x2 708.5562286376953, :y2 309.76275634765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 131.5104522705078, :y1 258.2996826171875, :x2 201.91026306152344, :y2 285.685791015625, :width 839.9999999999999, :height 1092} {:x1 296.9683074951172, :y1 258.2996826171875, :x2 362.15281677246094, :y2 285.685791015625, :width 839.9999999999999, :height 1092} {:x1 409.6508331298828, :y1 258.2996826171875, :x2 708.5562286376953, :y2 285.685791015625, :width 839.9999999999999, :height 1092} {:x1 209.5323944091797, :y1 261.60882568359375, :x2 708.5562286376953, :y2 282.6048583984375, :width 839.9999999999999, :height 1092} {:x1 211.27256774902344, :y1 282.37664794921875, :x2 416.23536682128906, :y2 309.76275634765625, :width 839.9999999999999, :height 1092} {:x1 131.5104522705078, :y1 285.685791015625, :x2 501.5023956298828, :y2 306.68182373046875, :width 839.9999999999999, :height 1092}), :page 282}, :content {:text "A KotlinSequenceis like aList, but you canonlyiterate through aSequence—you cannot index into aSequence"}, :properties {:color "yellow"}} {:id #uuid "62b52ec6-e170-41e1-bec9-3978e55b96ba", :page 282, :position {:bounding {:x1 89.98910522460938, :y1 439.20501708984375, :x2 750.2727203369141, :y2 490.6680908203125, :width 839.9999999999999, :height 1092}, :rects ({:x1 319.3820343017578, :y1 439.20501708984375, :x2 750.2727203369141, :y2 466.59112548828125, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 463.281982421875, :x2 168.4004364013672, :y2 490.6680908203125, :width 839.9999999999999, :height 1092}), :page 282}, :content {:text "e first result must be produced before starting the nextoperation"}, :properties {:color "yellow"}} {:id #uuid "62b5a54e-4101-4f80-906c-46761f48f04c", :page 236, :position {:bounding {:x1 83.34375, :y1 169.90625, :x2 380.966064453125, :y2 223.90625, :width 778, :height 1011.4000000000001}, :rects ({:x1 189.0625, :y1 169.90625, :x2 216.859375, :y2 223.90625, :width 778, :height 1011.4000000000001} {:x1 83.34375, :y1 176, :x2 216.859375, :y2 216, :width 778, :height 1011.4000000000001} {:x1 227.703125, :y1 176, :x2 380.966064453125, :y2 216, :width 778, :height 1011.4000000000001}), :page 236}, :content {:text "break&continue"}, :properties {:color "yellow"}} {:id #uuid "62b5b396-d50a-4d15-a122-92cc6ddb3c61", :page 282, :position {:bounding {:x1 83.34375, :y1 829.1875, :x2 642.9639282226562, :y2 855.1875, :width 778, :height 1011.4000000000001}, :rects ({:x1 83.34375, :y1 829.1875, :x2 642.9639282226562, :y2 855.1875, :width 778, :height 1011.4000000000001}), :page 282}, :content {:text "Eager evaluation is intuitive and straightforward, but can be suboptimal."}, :properties {:color "yellow"}} {:id #uuid "62b5b3de-21d2-45b2-823a-91a16f6aeb2c", :page 282, :position {:bounding {:x1 83.34375, :y1 851.484375, :x2 694.8612518310547, :y2 899.78125, :width 778, :height 1011.4000000000001}, :rects ({:x1 235.13792419433594, :y1 851.484375, :x2 694.8612518310547, :y2 877.484375, :width 778, :height 1011.4000000000001} {:x1 83.34375, :y1 873.78125, :x2 270.6772766113281, :y2 899.78125, :width 778, :height 1011.4000000000001} {:x1 83.34375, :y1 877.78125, :x2 323.27191162109375, :y2 895.78125, :width 778, :height 1011.4000000000001}), :page 282}, :content {:text " it would make more sense to stop after encountering the firstelement that satisfies theany()"}, :properties {:color "yellow"}} {:id #uuid "62b5b3f3-f6d0-4830-ade6-a8bd1fd5b7f7", :page 282, :position {:bounding {:x1 83.34375, :y1 873.78125, :x2 694.8440551757812, :y2 922.078125, :width 778, :height 1011.4000000000001}, :rects ({:x1 332.0111083984375, :y1 873.78125, :x2 694.8440551757812, :y2 899.78125, :width 778, :height 1011.4000000000001} {:x1 83.34375, :y1 896.078125, :x2 681.4105224609375, :y2 922.078125, :width 778, :height 1011.4000000000001}), :page 282}, :content {:text "For a long sequence, this optimization might bemuch faster than evaluating every element and then searching for a single match."}, :properties {:color "red"}} {:id #uuid "62b5b3fd-383b-4386-ac16-b6c6b57bc796", :page 283, :position {:bounding {:x1 83.34375, :y1 113.015625, :x2 513.0773315429688, :y2 139.015625, :width 778, :height 1011.4000000000001}, :rects ({:x1 83.34375, :y1 113.015625, :x2 513.0773315429688, :y2 139.015625, :width 778, :height 1011.4000000000001} {:x1 356.625, :y1 117.015625, :x2 513.0773315429688, :y2 135.015625, :width 778, :height 1011.4000000000001}), :page 283}, :content {:text "Eager evaluation is sometimes calledhorizontal evaluation"}, :properties {:color "red"}} {:id #uuid "62b5b42f-1ab6-404a-b400-39c5efaf1c49", :page 282, :position {:bounding {:x1 100.140625, :y1 604.578125, :x2 327.65625, :y2 660.484375, :width 778, :height 1011.4000000000001}, :rects ({:x1 100.140625, :y1 604.578125, :x2 327.65625, :y2 622.578125, :width 778, :height 1011.4000000000001} {:x1 116.9375, :y1 623.53125, :x2 251.27310180664062, :y2 641.53125, :width 778, :height 1011.4000000000001} {:x1 116.9375, :y1 642.484375, :x2 318.4265441894531, :y2 660.484375, :width 778, :height 1011.4000000000001}), :page 282}, :content {:text "list.filter { it %2==0}.map { it * it }.any { it <10} eqtrue"}, :properties {:color "red"}} {:id #uuid "62b5b920-8b83-4d75-9ca9-ed6cb9ca83b3", :page 283, :position {:bounding {:x1 83.34375, :y1 392.078125, :x2 695.0064086914062, :y2 462.671875, :width 778, :height 1011.4000000000001}, :rects ({:x1 422.38653564453125, :y1 392.078125, :x2 695.0064086914062, :y2 418.078125, :width 778, :height 1011.4000000000001} {:x1 83.34375, :y1 414.375, :x2 694.9170532226562, :y2 440.375, :width 778, :height 1011.4000000000001} {:x1 83.34375, :y1 418.375, :x2 694.9170532226562, :y2 436.375, :width 778, :height 1011.4000000000001} {:x1 83.34375, :y1 436.671875, :x2 389.5360412597656, :y2 462.671875, :width 778, :height 1011.4000000000001}), :page 283}, :content {:text "Each following line shows the resultsfrom the previous operation. Before the next operation is performed, all elements onthe current horizontal level are processed."}, :properties {:color "blue"}} {:id #uuid "62b5b92d-300a-4924-85fe-f7b01e832d3d", :page 283, :position {:bounding {:x1 82.671875, :y1 468.53125, :x2 695.1915893554688, :y2 539.125, :width 778, :height 1011.4000000000001}, :rects ({:x1 374.4375, :y1 468.53125, :x2 695.1915893554688, :y2 494.53125, :width 778, :height 1011.4000000000001} {:x1 489.0625, :y1 472.53125, :x2 695.1915893554688, :y2 490.53125, :width 778, :height 1011.4000000000001} {:x1 82.671875, :y1 490.828125, :x2 694.6964111328125, :y2 516.828125, :width 778, :height 1011.4000000000001} {:x1 82.671875, :y1 494.828125, :x2 694.6964111328125, :y2 512.828125, :width 778, :height 1011.4000000000001} {:x1 83.34375, :y1 513.125, :x2 164.28125, :y2 539.125, :width 778, :height 1011.4000000000001} {:x1 83.34375, :y1 517.125, :x2 160.1261749267578, :y2 535.125, :width 778, :height 1011.4000000000001}), :page 283}, :content {:text "lazy evaluation: a result is computed onlywhen needed. Performing lazy operations on sequences is sometimes calledverticalevaluation:"}, :properties {:color "red"}} {:id #uuid "62b5bd11-8de1-4ae0-b88e-0f9a130dfe68", :page 283, :position {:bounding {:x1 75.2833222746849, :y1 743.3764572143555, :x2 633.9426240324974, :y2 787.4509811401367, :width 709.9999999999999, :height 923}, :rects ({:x1 75.2833222746849, :y1 743.3764572143555, :x2 633.9426240324974, :y2 767.1110763549805, :width 709.9999999999999, :height 923} {:x1 76.06782239675522, :y1 763.7163619995117, :x2 341.3429688811302, :y2 787.4509811401367, :width 709.9999999999999, :height 923}), :page 283}, :content {:text "With lazy evaluation, an operation is performed on an element only when thatelement’s associated result is requested"}, :properties {:color "red"}} {:id #uuid "62b5bda9-3c9c-4487-bf03-7e194cb0d914", :page 284, :position {:bounding {:x1 76.06782239675522, :y1 103.14013671875, :x2 634.3669556975365, :y2 147.2147216796875, :width 709.9999999999999, :height 923}, :rects ({:x1 113.0248231291771, :y1 103.14013671875, :x2 429.4538087248802, :y2 126.87481689453125, :width 709.9999999999999, :height 923} {:x1 500.0963563323021, :y1 103.14013671875, :x2 634.3669556975365, :y2 126.87481689453125, :width 709.9999999999999, :height 923} {:x1 76.06782239675522, :y1 105.43658447265625, :x2 634.3669556975365, :y2 123.69403076171875, :width 709.9999999999999, :height 923} {:x1 76.06782239675522, :y1 123.48004150390625, :x2 506.3946046233177, :y2 147.2147216796875, :width 709.9999999999999, :height 923}), :page 284}, :content {:text "Listoperations except indexing are also available forSequences, so you can usuallymake this single change and gain the benefits of lazy evaluation."}, :properties {:color "red"}} {:id #uuid "62b5bfb4-54e2-4d61-a15a-d84eab42db94", :page 284, :position {:bounding {:x1 76.06782239675522, :y1 152.54928588867188, :x2 633.9663819670677, :y2 196.63809204101562, :width 709.9999999999999, :height 923}, :rects ({:x1 553.535534799099, :y1 152.54928588867188, :x2 633.9663819670677, :y2 176.28390502929688, :width 709.9999999999999, :height 923} {:x1 76.06782239675522, :y1 172.90347290039062, :x2 365.64869397878647, :y2 196.63809204101562, :width 709.9999999999999, :height 923} {:x1 404.44459241628647, :y1 172.90347290039062, :x2 477.9224061369896, :y2 196.63809204101562, :width 709.9999999999999, :height 923} {:x1 550.4754151701927, :y1 172.90347290039062, :x2 554.1280030608177, :y2 196.63809204101562, :width 709.9999999999999, :height 923} {:x1 76.06782239675522, :y1 176.55490112304688, :x2 550.5343751311302, :y2 194.81234741210938, :width 709.9999999999999, :height 923}), :page 284}, :content {:text "We performthe identical chain of operations, first on aList, then on aSequence."}, :properties {:color "blue"}} {:id #uuid "62b5c49c-fa52-4446-8ccf-c24eb62645e4", :page 284, :position {:bounding {:x1 106.7060517668724, :y1 628.7113037109375, :x2 290.6141785979271, :y2 697.0482788085938, :width 709.9999999999999, :height 923}, :rects ({:x1 106.7060517668724, :y1 628.7113037109375, :x2 137.3696717619896, :y2 645.1430053710938, :width 709.9999999999999, :height 923} {:x1 122.0394257903099, :y1 646.0130004882812, :x2 275.2827882170677, :y2 662.4447631835938, :width 709.9999999999999, :height 923} {:x1 122.0394257903099, :y1 663.3147583007812, :x2 252.30410474538803, :y2 679.7465209960938, :width 709.9999999999999, :height 923} {:x1 122.0394257903099, :y1 680.6165161132812, :x2 290.6141785979271, :y2 697.0482788085938, :width 709.9999999999999, :height 923}), :page 284}, :content {:text "list.filter(Int::isEven).map(Int::square).any(Int::lessThanTen)"}, :properties {:color "red"}} {:id #uuid "62b5c49f-37cc-4b56-b276-da3baf8d6edf", :page 284, :position {:bounding {:x1 106.7060517668724, :y1 749.7951049804688, :x2 290.6141785979271, :y2 818.1177368164062, :width 709.9999999999999, :height 923}, :rects ({:x1 106.7060517668724, :y1 749.7951049804688, :x2 236.99398511648178, :y2 766.2267456054688, :width 709.9999999999999, :height 923} {:x1 122.0394257903099, :y1 767.0968627929688, :x2 275.2827882170677, :y2 783.5285034179688, :width 709.9999999999999, :height 923} {:x1 122.0394257903099, :y1 784.3986206054688, :x2 252.30410474538803, :y2 800.8302612304688, :width 709.9999999999999, :height 923} {:x1 122.0394257903099, :y1 801.6860961914062, :x2 290.6141785979271, :y2 818.1177368164062, :width 709.9999999999999, :height 923}), :page 284}, :content {:text "list.asSequence().filter(Int::isEven).map(Int::square).any(Int::lessThanTen)"}, :properties {:color "red"}} {:id #uuid "62b5c4d4-e739-49f0-a4d6-bfeb62944c26", :page 285, :position {:bounding {:x1 106.7060517668724, :y1 279.5381622314453, :x2 221.66389173269272, :y2 365.16261291503906, :width 709.9999999999999, :height 923}, :rects ({:x1 106.7060517668724, :y1 279.5381622314453, :x2 206.31634229421616, :y2 295.96986389160156, :width 709.9999999999999, :height 923} {:x1 106.7060517668724, :y1 296.8399200439453, :x2 183.35369580984116, :y2 313.27162170410156, :width 709.9999999999999, :height 923} {:x1 106.7060517668724, :y1 314.1416778564453, :x2 183.35369580984116, :y2 330.57337951660156, :width 709.9999999999999, :height 923} {:x1 106.7060517668724, :y1 331.42921447753906, :x2 183.35369580984116, :y2 347.86085510253906, :width 709.9999999999999, :height 923} {:x1 106.7060517668724, :y1 348.73097229003906, :x2 221.66389173269272, :y2 365.16261291503906, :width 709.9999999999999, :height 923}), :page 285}, :content {:text ">>> Sequence:1.isEven()2.isEven()2.square()4.lessThanTen()"}, :properties {:color "red"}} {:id #uuid "62b5c4d8-d94b-42f3-b9fb-e9dc85daebc9", :page 285, :position {:bounding {:x1 106.7060517668724, :y1 141.16693115234375, :x2 221.66389173269272, :y2 261.380615234375, :width 709.9999999999999, :height 923}, :rects ({:x1 106.7060517668724, :y1 141.16693115234375, :x2 183.35369580984116, :y2 157.59857177734375, :width 709.9999999999999, :height 923} {:x1 106.7060517668724, :y1 158.45440673828125, :x2 183.35369580984116, :y2 174.88604736328125, :width 709.9999999999999, :height 923} {:x1 106.7060517668724, :y1 175.75616455078125, :x2 183.35369580984116, :y2 192.18780517578125, :width 709.9999999999999, :height 923} {:x1 106.7060517668724, :y1 193.05792236328125, :x2 183.35369580984116, :y2 209.48956298828125, :width 709.9999999999999, :height 923} {:x1 106.7060517668724, :y1 210.34539794921875, :x2 183.35369580984116, :y2 226.777099609375, :width 709.9999999999999, :height 923} {:x1 106.7060517668724, :y1 227.64715576171875, :x2 183.35369580984116, :y2 244.078857421875, :width 709.9999999999999, :height 923} {:x1 106.7060517668724, :y1 244.94891357421875, :x2 221.66389173269272, :y2 261.380615234375, :width 709.9999999999999, :height 923}), :page 285}, :content {:text "1.isEven()2.isEven()3.isEven()4.isEven()2.square()4.square()4.lessThanTen()"}, :properties {:color "red"}} {:id #uuid "62b5c60f-bc1a-4422-97a9-61051d57a671", :page 285, :position {:bounding {:x1 130.07497876882553, :y1 451.8568420410156, :x2 613.0642213225365, :y2 475.5914611816406, :width 709.9999999999999, :height 923}, :rects ({:x1 130.07497876882553, :y1 451.8568420410156, :x2 373.78175061941147, :y2 475.5914611816406, :width 709.9999999999999, :height 923} {:x1 415.86973279714584, :y1 451.8568420410156, :x2 506.41529554128647, :y2 475.5914611816406, :width 709.9999999999999, :height 923} {:x1 582.2547120451927, :y1 451.8568420410156, :x2 613.0642213225365, :y2 475.5914611816406, :width 709.9999999999999, :height 923} {:x1 377.9570741057396, :y1 454.1675109863281, :x2 578.0916261076927, :y2 472.4249572753906, :width 709.9999999999999, :height 923}), :page 285}, :content {:text " more elements are processed for theListcode than theSequencecode"}, :properties {:color "red"}} {:id #uuid "62b5c616-7763-4f61-8923-56b1cbdb8c68", :page 285, :position {:bounding {:x1 76.06782239675522, :y1 480.5124206542969, :x2 636.5135011076927, :y2 504.2470397949219, :width 709.9999999999999, :height 923}, :rects ({:x1 76.06782239675522, :y1 480.5124206542969, :x2 170.80587476491928, :y2 504.2470397949219, :width 709.9999999999999, :height 923} {:x1 253.2075623869896, :y1 480.5124206542969, :x2 267.3356141448021, :y2 504.2470397949219, :width 709.9999999999999, :height 923} {:x1 324.4685487151146, :y1 480.5124206542969, :x2 356.5172852873802, :y2 504.2470397949219, :width 709.9999999999999, :height 923} {:x1 438.94825452566147, :y1 480.5124206542969, :x2 557.889294564724, :y2 504.2470397949219, :width 709.9999999999999, :height 923} {:x1 632.819226205349, :y1 480.5124206542969, :x2 636.5135011076927, :y2 504.2470397949219, :width 709.9999999999999, :height 923} {:x1 178.28083509206772, :y1 482.8088684082031, :x2 632.863903939724, :y2 501.0662536621094, :width 709.9999999999999, :height 923}), :page 285}, :content {:text "Calling eitherfilter()ormap()on aSequenceproduces anotherSequence."}, :properties {:color "yellow"}} {:id #uuid "62b676ce-0aec-4d8c-88c2-607a2da3cc8d", :page 285, :position {:bounding {:x1 89.98909378051758, :y1 616.4017944335938, :x2 750.2192726135254, :y2 667.8648986816406, :width 839.9999999999999, :height 1092}, :rects ({:x1 394.1133460998535, :y1 616.4017944335938, :x2 750.2192726135254, :y2 643.7879028320312, :width 839.9999999999999, :height 1092} {:x1 89.98909378051758, :y1 640.478759765625, :x2 327.7083168029785, :y2 667.8648986816406, :width 839.9999999999999, :height 1092}), :page 285}, :content {:text " postponed operations and will perform thoseoperations only when needed:"}, :properties {:color "blue"}} {:id #uuid "62b67b18-b523-4977-9d70-304104e75a03", :page 286, :position {:bounding {:x1 89.98909378051758, :y1 228.38885498046875, :x2 751.9873390197754, :y2 303.92889404296875, :width 839.9999999999999, :height 1092}, :rects ({:x1 641.0492897033691, :y1 228.38885498046875, :x2 750.0398292541504, :y2 255.77496337890625, :width 839.9999999999999, :height 1092} {:x1 89.98909378051758, :y1 252.4658203125, :x2 698.7343330383301, :y2 279.8519287109375, :width 839.9999999999999, :height 1092} {:x1 89.98909378051758, :y1 257.03021240234375, :x2 751.9873390197754, :y2 276.20050048828125, :width 839.9999999999999, :height 1092} {:x1 89.98909378051758, :y1 276.54278564453125, :x2 418.2403144836426, :y2 303.92889404296875, :width 839.9999999999999, :height 1092} {:x1 509.7955665588379, :y1 276.54278564453125, :x2 616.7984352111816, :y2 303.92889404296875, :width 839.9999999999999, :height 1092} {:x1 89.98909378051758, :y1 281.107177734375, :x2 692.5354957580566, :y2 302.10321044921875, :width 839.9999999999999, :height 1092}), :page 286}, :content {:text ". To do this, aterminal operation executes all stored computations. In the previous examples,any()is a terminal operation because it takes aSequenceand returns aBoolean"}, :properties {:color "yellow"}} {:id #uuid "62b67b79-04a6-4223-bc9c-e0b0e571478e", :page 286, :position {:bounding {:x1 243.0233497619629, :y1 300.6197509765625, :x2 752.1770973205566, :y2 328.00592041015625, :width 839.9999999999999, :height 1092}, :rects ({:x1 326.4226722717285, :y1 300.6197509765625, :x2 589.1499366760254, :y2 328.00592041015625, :width 839.9999999999999, :height 1092} {:x1 676.0379371643066, :y1 300.6197509765625, :x2 704.3175392150879, :y2 328.00592041015625, :width 839.9999999999999, :height 1092} {:x1 747.8124122619629, :y1 300.6197509765625, :x2 752.1770973205566, :y2 328.00592041015625, :width 839.9999999999999, :height 1092} {:x1 243.0233497619629, :y1 303.92889404296875, :x2 747.8087501525879, :y2 324.9249267578125, :width 839.9999999999999, :height 1092}), :page 286}, :content {:text "toList()is terminal because it converts theSequenceto aList,"}, :properties {:color "yellow"}} {:id #uuid "62b67b87-6049-4a98-93f8-8c94fb2949e4", :page 286, :position {:bounding {:x1 89.98909378051758, :y1 121.78265380859375, :x2 750.0181617736816, :y2 173.23150634765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 477.41696548461914, :y1 121.78265380859375, :x2 512.5583229064941, :y2 149.16876220703125, :width 839.9999999999999, :height 1092} {:x1 720.9825782775879, :y1 121.78265380859375, :x2 750.0181617736816, :y2 149.16876220703125, :width 839.9999999999999, :height 1092} {:x1 517.0557594299316, :y1 125.07757568359375, :x2 750.0181617736816, :y2 146.0736083984375, :width 839.9999999999999, :height 1092} {:x1 89.98909378051758, :y1 145.8453369140625, :x2 467.3304634094238, :y2 173.23150634765625, :width 839.9999999999999, :height 1092}), :page 286}, :content {:text " TheTransformingSequencejustholds the operations but does not perform them"}, :properties {:color "blue"}} {:id #uuid "62b67e94-0e21-4054-a6f8-3911dc5758b2", :page 286, :position {:bounding {:x1 89.98909378051758, :y1 880.5780639648438, :x2 750.2951393127441, :y2 956.1181640625, :width 839.9999999999999, :height 1092}, :rects ({:x1 495.1024513244629, :y1 880.5780639648438, :x2 750.2951393127441, :y2 907.9641723632812, :width 839.9999999999999, :height 1092} {:x1 89.98909378051758, :y1 904.655029296875, :x2 750.2544746398926, :y2 932.0411987304688, :width 839.9999999999999, :height 1092} {:x1 89.98909378051758, :y1 909.2194213867188, :x2 750.2544746398926, :y2 928.3897094726562, :width 839.9999999999999, :height 1092} {:x1 89.98909378051758, :y1 928.7319946289062, :x2 387.4557075500488, :y2 956.1181640625, :width 839.9999999999999, :height 1092}), :page 286}, :content {:text "The first argument is the initialelement in the sequence, followed by a lambda defining how the next element iscalculated from the previous element:"}, :properties {:color "red"}} {:id #uuid "62b681aa-117f-405f-ae48-e4fd1786e31a", :page 287, :position {:bounding {:x1 89.98909378051758, :y1 350.0146789550781, :x2 749.9662208557129, :y2 401.4777526855469, :width 839.9999999999999, :height 1092}, :rects ({:x1 655.2221412658691, :y1 350.0146789550781, :x2 659.4645118713379, :y2 377.4007873535156, :width 839.9999999999999, :height 1092} {:x1 742.7060279846191, :y1 350.0146789550781, :x2 749.9662208557129, :y2 377.4007873535156, :width 839.9999999999999, :height 1092} {:x1 662.9439430236816, :y1 353.3238220214844, :x2 749.9662208557129, :y2 374.3198547363281, :width 839.9999999999999, :height 1092} {:x1 89.98909378051758, :y1 374.0916442871094, :x2 342.2154884338379, :y2 401.4777526855469, :width 839.9999999999999, :height 1092}), :page 287}, :content {:text ".Sequencesare treated as if they are infinite"}, :properties {:color "red"}} {:id #uuid "62b681b1-ae8a-4077-a32c-ea39e115bcec", :page 287, :position {:bounding {:x1 158.9412727355957, :y1 398.1686096191406, :x2 596.5722389221191, :y2 425.5547180175781, :width 839.9999999999999, :height 1092}, :rects ({:x1 158.9412727355957, :y1 398.1686096191406, :x2 430.1172981262207, :y2 425.5547180175781, :width 839.9999999999999, :height 1092} {:x1 514.7593116760254, :y1 398.1686096191406, :x2 531.4764747619629, :y2 425.5547180175781, :width 839.9999999999999, :height 1092} {:x1 586.3055763244629, :y1 398.1686096191406, :x2 596.5722389221191, :y2 425.5547180175781, :width 839.9999999999999, :height 1092} {:x1 430.00497817993164, :y1 401.4777526855469, :x2 586.3155860900879, :y2 422.4737854003906, :width 839.9999999999999, :height 1092}), :page 287}, :content {:text "followed by a terminal operation (toList()orsum())."}, :properties {:color "blue"}} {:id #uuid "62b68273-6fe1-477d-9c85-7c1505f796c1", :page 287, :position {:bounding {:x1 89.43281936645508, :y1 432.5581359863281, :x2 750.1094093322754, :y2 484.0212707519531, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.43281936645508, :y1 432.5581359863281, :x2 343.3262367248535, :y2 459.9443054199219, :width 839.9999999999999, :height 1092} {:x1 532.2179908752441, :y1 432.5581359863281, :x2 750.1094093322754, :y2 459.9443054199219, :width 839.9999999999999, :height 1092} {:x1 348.80224990844727, :y1 435.8673400878906, :x2 750.1094093322754, :y2 456.8633117675781, :width 839.9999999999999, :height 1092} {:x1 89.98909378051758, :y1 456.6351013183594, :x2 566.3214302062988, :y2 484.0212707519531, :width 839.9999999999999, :height 1092} {:x1 89.98909378051758, :y1 461.1994934082031, :x2 649.7868385314941, :y2 480.3697814941406, :width 839.9999999999999, :height 1092}), :page 287}, :content {:text "There’s an overloaded version ofgenerateSequence()that doesn’t require the firstparameter, only a lambda that returns the next element in theSequence"}, :properties {:color "blue"}} {:id #uuid "62b6a5f0-cc7f-447b-bf24-e36a65b7e2bd", :page 287, :position {:bounding {:x1 89.98909378051758, :y1 480.7121276855469, :x2 750.0029640197754, :y2 532.1752014160156, :width 839.9999999999999, :height 1092}, :rects ({:x1 393.01526260375977, :y1 480.7121276855469, :x2 665.9224586486816, :y2 508.0982360839844, :width 839.9999999999999, :height 1092} {:x1 670.2326393127441, :y1 484.0212707519531, :x2 750.0029640197754, :y2 505.0173034667969, :width 839.9999999999999, :height 1092} {:x1 89.98909378051758, :y1 504.7890930175781, :x2 305.99109268188477, :y2 532.1752014160156, :width 839.9999999999999, :height 1092} {:x1 345.764102935791, :y1 504.7890930175781, :x2 497.7644386291504, :y2 532.1752014160156, :width 839.9999999999999, :height 1092} {:x1 89.98909378051758, :y1 509.3534240722656, :x2 340.7830238342285, :y2 528.5237121582031, :width 839.9999999999999, :height 1092}), :page 287}, :content {:text "The following example generates aSequenceuntil the “termination flag”XXXappears in its input"}, :properties {:color "yellow"}} {:id #uuid "62b6a954-e579-4ff5-8df3-badf4d0c1c5a", :page 287, :position {:bounding {:x1 166.5351448059082, :y1 944.4219779968262, :x2 639.2346534729004, :y2 971.8080863952637, :width 839.9999999999999, :height 1092}, :rects ({:x1 166.5351448059082, :y1 944.4219779968262, :x2 201.07907485961914, :y2 971.8080863952637, :width 839.9999999999999, :height 1092} {:x1 250.8683204650879, :y1 944.4219779968262, :x2 491.88034439086914, :y2 971.8080863952637, :width 839.9999999999999, :height 1092} {:x1 561.5439796447754, :y1 944.4219779968262, :x2 574.1648902893066, :y2 971.8080863952637, :width 839.9999999999999, :height 1092} {:x1 628.9680519104004, :y1 944.4219779968262, :x2 639.2346534729004, :y2 971.8080863952637, :width 839.9999999999999, :height 1092} {:x1 206.00928115844727, :y1 947.7311210632324, :x2 628.9780006408691, :y2 968.7271537780762, :width 839.9999999999999, :height 1092}), :page 287}, :content {:text " andnullif the predicate fails (when theStringis\"XXX\")."}, :properties {:color "yellow"}} {:id #uuid "62b6a971-1122-4e37-a926-f27af0bb3733", :page 287, :position {:bounding {:x1 89.98909378051758, :y1 896.2680473327637, :x2 652.5854835510254, :y2 923.6541557312012, :width 839.9999999999999, :height 1092}, :rects ({:x1 204.9537696838379, :y1 896.2680473327637, :x2 617.5421485900879, :y2 923.6541557312012, :width 839.9999999999999, :height 1092} {:x1 89.98909378051758, :y1 899.5771903991699, :x2 652.5854835510254, :y2 920.5732231140137, :width 839.9999999999999, :height 1092}), :page 287}, :content {:text "removeAt(0)removes and produces the zeroeth element from theLis"}, :properties {:color "yellow"}} {:id #uuid "62b6a98f-4902-4900-80c2-edad31ac22d4", :page 287, :position {:bounding {:x1 89.98909378051758, :y1 920.3450126647949, :x2 750.1458473205566, :y2 971.8080863952637, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98909378051758, :y1 920.3450126647949, :x2 280.92184829711914, :y2 947.7311210632324, :width 839.9999999999999, :height 1092} {:x1 351.184268951416, :y1 920.3450126647949, :x2 449.8382911682129, :y2 947.7311210632324, :width 839.9999999999999, :height 1092} {:x1 564.7247657775879, :y1 920.3450126647949, :x2 750.1458473205566, :y2 947.7311210632324, :width 839.9999999999999, :height 1092} {:x1 286.0994300842285, :y1 923.6541557312012, :x2 750.1458473205566, :y2 944.6501884460449, :width 839.9999999999999, :height 1092} {:x1 89.98909378051758, :y1 944.4219779968262, :x2 162.34592056274414, :y2 971.8080863952637, :width 839.9999999999999, :height 1092}), :page 287}, :content {:text "returns the receiver (theStringproduced byremoveAt(0)) if it satisfies the givenpredicate"}, :properties {:color "yellow"}} {:id #uuid "62b6ab06-1daa-4ea5-b7c0-e048fdfc4813", :page 288, :position {:bounding {:x1 89.41855239868164, :y1 121.78271484375, :x2 753.5177955627441, :y2 173.23150634765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.41855239868164, :y1 121.78271484375, :x2 375.1792640686035, :y2 149.1688232421875, :width 839.9999999999999, :height 1092} {:x1 460.3293800354004, :y1 121.78271484375, :x2 753.5177955627441, :y2 149.1688232421875, :width 839.9999999999999, :height 1092} {:x1 380.567325592041, :y1 125.07757568359375, :x2 753.5177955627441, :y2 146.0736083984375, :width 839.9999999999999, :height 1092} {:x1 89.98909378051758, :y1 145.84539794921875, :x2 126.19731521606445, :y2 173.23150634765625, :width 839.9999999999999, :height 1092}), :page 288}, :content {:text "You can only iterate once through aSequence. Further attempts produce an excep-tion."}, :properties {:color "yellow"}} {:id #uuid "62b6ae17-364a-4c70-b1a5-7a8dc7f637c8", :page 288, :position {:bounding {:x1 89.26166152954102, :y1 204.3118896484375, :x2 750.5364723205566, :y2 255.7750244140625, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98909378051758, :y1 204.3118896484375, :x2 326.9879493713379, :y2 231.69805908203125, :width 839.9999999999999, :height 1092} {:x1 413.1311378479004, :y1 204.3118896484375, :x2 611.6083106994629, :y2 231.69805908203125, :width 839.9999999999999, :height 1092} {:x1 634.3739356994629, :y1 204.3118896484375, :x2 750.5364723205566, :y2 231.69805908203125, :width 839.9999999999999, :height 1092} {:x1 333.3547706604004, :y1 207.62109375, :x2 750.5364723205566, :y2 228.61712646484375, :width 839.9999999999999, :height 1092} {:x1 89.26166152954102, :y1 228.38885498046875, :x2 306.18689346313477, :y2 255.7750244140625, :width 839.9999999999999, :height 1092}), :page 288}, :content {:text "Here’s an implementation fortakeIf(), defined using a genericTso it can workwith any type of argument:"}, :properties {:color "red"}} {:id #uuid "62b6ae5b-d594-4ecd-910e-4d62f01c5345", :page 288, :position {:bounding {:x1 89.98909378051758, :y1 355.3349914550781, :x2 488.8264503479004, :y2 456.3641052246094, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98909378051758, :y1 355.3349914550781, :x2 244.0680274963379, :y2 374.5052795410156, :width 839.9999999999999, :height 1092} {:x1 108.11813735961914, :y1 375.8032531738281, :x2 334.70093154907227, :y2 394.9735412597656, :width 839.9999999999999, :height 1092} {:x1 89.98909378051758, :y1 396.2572937011719, :x2 153.4244728088379, :y2 415.4275817871094, :width 839.9999999999999, :height 1092} {:x1 108.11813735961914, :y1 416.7255554199219, :x2 488.8264503479004, :y2 435.8958435058594, :width 839.9999999999999, :height 1092} {:x1 89.98909378051758, :y1 437.1938171386719, :x2 99.95935440063477, :y2 456.3641052246094, :width 839.9999999999999, :height 1092}), :page 288}, :content {:text "fun<T> T.takeIf(predicate: (T) -> Boolean): T? {returnif(predicate(this))thiselsenull}"}, :properties {:color "red"}} {:id #uuid "62b6af9e-a7f1-4f80-bea7-dcfe0914014d", :page 288, :position {:bounding {:x1 89.29018020629883, :y1 830.7838172912598, :x2 750.0505104064941, :y2 882.2468910217285, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.29018020629883, :y1 830.7838172912598, :x2 186.56453323364258, :y2 858.1699256896973, :width 839.9999999999999, :height 1092} {:x1 214.90976333618164, :y1 830.7838172912598, :x2 533.3981056213379, :y2 858.1699256896973, :width 839.9999999999999, :height 1092} {:x1 618.8836402893066, :y1 830.7838172912598, :x2 750.0505104064941, :y2 858.1699256896973, :width 839.9999999999999, :height 1092} {:x1 190.76147842407227, :y1 834.092960357666, :x2 750.0505104064941, :y2 855.0889930725098, :width 839.9999999999999, :height 1092} {:x1 89.98909378051758, :y1 854.860782623291, :x2 335.8808937072754, :y2 882.2468910217285, :width 839.9999999999999, :height 1092} {:x1 363.1942481994629, :y1 854.860782623291, :x2 508.5803565979004, :y2 882.2468910217285, :width 839.9999999999999, :height 1092} {:x1 89.98909378051758, :y1 859.4251747131348, :x2 359.45468521118164, :y2 878.5954627990723, :width 839.9999999999999, :height 1092}), :page 288}, :content {:text "An ordinaryifexpression can always be used instead oftakeIf(), but introducingan extra identifier can make theifexpression clumsy."}, :properties {:color "red"}} {:id #uuid "62bac9c6-3984-4818-b772-d7b4f22ff5f5", :page 247, :position {:bounding {:x1 86.78125, :y1 176.234375, :x2 642.6474609375, :y2 232.234375, :width 809.9999999999999, :height 1053}, :rects ({:x1 86.78125, :y1 176.234375, :x2 642.6474609375, :y2 232.234375, :width 809.9999999999999, :height 1053}), :page 247}, :content {:text "The Importance of Lambdas"}, :properties {:color "yellow"}} {:id #uuid "62bd3563-815c-4936-aa86-7a870e5f1e26", :page 271, :position {:bounding {:x1 81.85884094238281, :y1 111.6697998046875, :x2 239.73143005371094, :y2 125.36285400390625, :width 636, :height 826.8000000000001}, :rects ({:x1 81.85884094238281, :y1 111.6697998046875, :x2 239.73143005371094, :y2 125.36285400390625, :width 636, :height 826.8000000000001}), :page 271}, :content {:text "intRange.flatMap { a ->"}, :properties {:color "yellow"}} {:id #uuid "62bd3655-359c-4778-bd73-090f546ee14f", :page 271, :position {:bounding {:x1 234.13946533203125, :y1 322.2434387207031, :x2 534.7202758789062, :y2 344.1523132324219, :width 636, :height 826.8000000000001}, :rects ({:x1 234.13946533203125, :y1 322.2434387207031, :x2 380.87518310546875, :y2 344.1523132324219, :width 636, :height 826.8000000000001} {:x1 418.4514465332031, :y1 322.2434387207031, :x2 534.7202758789062, :y2 344.1523132324219, :width 636, :height 826.8000000000001} {:x1 384.48980712890625, :y1 325.4099426269531, :x2 414.6962890625, :y2 340.9287414550781, :width 636, :height 826.8000000000001}), :page 271}, :content {:text "we just need a single flatListof all combinations"}, :properties {:color "yellow"}} {:id #uuid "62bd8210-aa9c-4496-95cd-ac62ca32a0af", :page 293, :position {:bounding {:x1 89.99999237060547, :y1 855.4817199707031, :x2 511.3512191772461, :y2 895.4817199707031, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999237060547, :y1 855.4817199707031, :x2 511.3512191772461, :y2 895.4817199707031, :width 839.9999999999999, :height 1092}), :page 293}, :content {:text "Manipulating Local Functions"}, :properties {:color "yellow"}} {:id #uuid "62bd8215-dacf-4610-b4f8-3023672c0903", :page 291, :position {:bounding {:x1 89.99999237060547, :y1 898.8801879882812, :x2 181.68761444091797, :y2 938.8801879882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999237060547, :y1 898.8801879882812, :x2 181.68761444091797, :y2 938.8801879882812, :width 839.9999999999999, :height 1092}), :page 291}, :content {:text "Labels"}, :properties {:color "yellow"}} {:id #uuid "62bd8225-49a8-42eb-9316-cee1230888e8", :page 289, :position {:bounding {:x1 131.51041412353516, :y1 261.75779724121094, :x2 644.2949600219727, :y2 289.25779724121094, :width 839.9999999999999, :height 1092}, :rects ({:x1 131.51041412353516, :y1 261.75779724121094, :x2 644.2949600219727, :y2 289.25779724121094, :width 839.9999999999999, :height 1092}), :page 289}, :content {:text "You can define functions anywhere—even inside other functions."}, :properties {:color "yellow"}} {:id #uuid "62bd82ac-36ff-4b86-9601-ab3e0f7cb715", :page 289, :position {:bounding {:x1 89.99999237060547, :y1 781.7317276000977, :x2 320.3019027709961, :y2 809.2317276000977, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999237060547, :y1 781.7317276000977, :x2 320.3019027709961, :y2 809.2317276000977, :width 839.9999999999999, :height 1092} {:x1 248.28124237060547, :y1 785.8984146118164, :x2 310.7325668334961, :y2 805.0651016235352, :width 839.9999999999999, :height 1092}), :page 289}, :content {:text "Local functions areclosures: "}, :properties {:color "red"}} {:id #uuid "62bd82bf-f001-4526-bdb2-159aaf7dba01", :page 289, :position {:bounding {:x1 196.52672576904297, :y1 829.8827896118164, :x2 461.7113265991211, :y2 857.3827896118164, :width 839.9999999999999, :height 1092}, :rects ({:x1 196.52672576904297, :y1 829.8827896118164, :x2 461.7113265991211, :y2 857.3827896118164, :width 839.9999999999999, :height 1092}), :page 289}, :content {:text "which is defined in its outer scope"}, :properties {:color "red"}} {:id #uuid "62bd82c2-2418-4ee8-af99-5ad6c7c6de44", :page 289, :position {:bounding {:x1 89.99999237060547, :y1 829.8827896118164, :x2 750.4306259155273, :y2 881.4582901000977, :width 839.9999999999999, :height 1092}, :rects ({:x1 545.4143905639648, :y1 829.8827896118164, :x2 750.4306259155273, :y2 857.3827896118164, :width 839.9999999999999, :height 1092} {:x1 154.80467987060547, :y1 853.9582901000977, :x2 186.21614837646484, :y2 881.4582901000977, :width 839.9999999999999, :height 1092} {:x1 241.01561737060547, :y1 853.9582901000977, :x2 245.39061737060547, :y2 881.4582901000977, :width 839.9999999999999, :height 1092} {:x1 89.99999237060547, :y1 857.0312271118164, :x2 241.03783416748047, :y2 877.8645401000977, :width 839.9999999999999, :height 1092}), :page 289}, :content {:text " you don’t repeatedly passlogMsgintolog()."}, :properties {:color "red"}} {:id #uuid "62bd8358-3867-4846-835b-ad32cac4d6c2", :page 289, :position {:bounding {:x1 89.41405487060547, :y1 888.3463287353516, :x2 410.99385833740234, :y2 915.8463287353516, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.41405487060547, :y1 888.3463287353516, :x2 410.99385833740234, :y2 915.8463287353516, :width 839.9999999999999, :height 1092}), :page 289}, :content {:text "You can create local extension functions:"}, :properties {:color "red"}} {:id #uuid "62bd835f-6f2e-44fc-9574-b2885a2cdf0a", :page 290, :position {:bounding {:x1 165.1387710571289, :y1 384.80467224121094, :x2 640.9797134399414, :y2 412.30467224121094, :width 839.9999999999999, :height 1092}, :rects ({:x1 165.1387710571289, :y1 384.80467224121094, :x2 640.9797134399414, :y2 412.30467224121094, :width 839.9999999999999, :height 1092}), :page 290}, :content {:text "demonstration class and example values for use in this atom"}, :properties {:color "yellow"}} {:id #uuid "62bd83a4-063f-43d6-b097-b6f4fd2574b6", :page 290, :position {:bounding {:x1 108.12499237060547, :y1 841.601541519165, :x2 506.99092864990234, :y2 942.617166519165, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.12499237060547, :y1 841.601541519165, :x2 506.99092864990234, :y2 860.7682285308838, :width 839.9999999999999, :height 1092} {:x1 126.24999237060547, :y1 862.0572910308838, :x2 479.75923919677734, :y2 881.2239170074463, :width 839.9999999999999, :height 1092} {:x1 144.37499237060547, :y1 882.5260410308838, :x2 488.8385238647461, :y2 901.6926670074463, :width 839.9999999999999, :height 1092} {:x1 144.37499237060547, :y1 902.9947910308838, :x2 244.0987777709961, :y2 922.1614170074463, :width 839.9999999999999, :height 1092} {:x1 126.24999237060547, :y1 923.4504795074463, :x2 136.22396087646484, :y2 942.617166519165, :width 839.9999999999999, :height 1092}), :page 290}, :content {:text "funinteresting(session: Session): Boolean {if(session.title.contains(\"Kotlin\") &&session.speakerinfavoriteSpeakers) {returntrue}"}, :properties {:color "blue"}} {:id #uuid "62bd83b1-97fc-4805-9bdb-9a38520c3e33", :page 291, :position {:bounding {:x1 108.12499237060547, :y1 147.03125, :x2 425.3878707885742, :y2 166.19793701171875, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.12499237060547, :y1 147.03125, :x2 425.3878707885742, :y2 166.19793701171875, :width 839.9999999999999, :height 1092}), :page 291}, :content {:text "sessions.any(::interesting) eqtrue"}, :properties {:color "red"}} {:id #uuid "62bd845c-ae5b-44d3-b471-d99632951abc", :page 291, :position {:bounding {:x1 89.99999237060547, :y1 207.16143798828125, :x2 753.4653549194336, :y2 234.66143798828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 224.6744613647461, :y1 207.16143798828125, :x2 753.4653549194336, :y2 234.66143798828125, :width 839.9999999999999, :height 1092} {:x1 89.99999237060547, :y1 210.234375, :x2 219.64205169677734, :y2 231.06768798828125, :width 839.9999999999999, :height 1092}), :page 291}, :content {:text "interesting()is only used once, so we might be inclined to define it as a lambda."}, :properties {:color "yellow"}} {:id #uuid "62bd846e-521b-4ef4-9d87-d5525bfddbee", :page 291, :position {:bounding {:x1 89.99999237060547, :y1 231.2369384765625, :x2 752.0118026733398, :y2 282.8125, :width 839.9999999999999, :height 1092}, :rects ({:x1 359.3551559448242, :y1 231.2369384765625, :x2 395.12853240966797, :y2 258.7369384765625, :width 839.9999999999999, :height 1092} {:x1 467.20052337646484, :y1 231.2369384765625, :x2 616.2469711303711, :y2 258.7369384765625, :width 839.9999999999999, :height 1092} {:x1 401.13280487060547, :y1 234.30987548828125, :x2 752.0118026733398, :y2 255.1431884765625, :width 839.9999999999999, :height 1092} {:x1 89.99999237060547, :y1 255.3125, :x2 483.39974212646484, :y2 282.8125, :width 839.9999999999999, :height 1092}), :page 291}, :content {:text ", thereturnexpressions withininteresting()complicate the task of turning it into a lambda."}, :properties {:color "yellow"}} {:id #uuid "62bd8480-92e7-4378-aaf1-38d53d13c0d4", :page 291, :position {:bounding {:x1 154.10155487060547, :y1 279.38800048828125, :x2 319.32649993896484, :y2 306.88800048828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 154.10155487060547, :y1 279.38800048828125, :x2 319.32649993896484, :y2 306.88800048828125, :width 839.9999999999999, :height 1092}), :page 291}, :content {:text "anonymous function."}, :properties {:color "red"}} {:id #uuid "62bd849e-24f4-4c25-895b-67d6cadfc4b8", :page 291, :position {:bounding {:x1 89.99999237060547, :y1 303.4635009765625, :x2 750.4728622436523, :y2 355.05206298828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 352.52425384521484, :y1 303.4635009765625, :x2 750.4728622436523, :y2 330.9635009765625, :width 839.9999999999999, :height 1092} {:x1 89.99999237060547, :y1 327.55206298828125, :x2 570.9552841186523, :y2 355.05206298828125, :width 839.9999999999999, :height 1092} {:x1 617.6692733764648, :y1 327.55206298828125, :x2 691.3072128295898, :y2 355.05206298828125, :width 839.9999999999999, :height 1092} {:x1 89.99999237060547, :y1 331.71875, :x2 609.0886459350586, :y2 350.8853759765625, :width 839.9999999999999, :height 1092}), :page 291}, :content {:text " an anonymous function has no name. Anonymousfunctions are conceptually similar to lambdas but use thefunkeyword."}, :properties {:color "red"}} {:id #uuid "62bd84c0-b0a3-4544-a328-2154a328916e", :page 291, :position {:bounding {:x1 126.24999237060547, :y1 519.2577743530273, :x2 416.33992767333984, :y2 538.4244613647461, :width 839.9999999999999, :height 1092}, :rects ({:x1 126.24999237060547, :y1 519.2577743530273, :x2 416.33992767333984, :y2 538.4244613647461, :width 839.9999999999999, :height 1092}), :page 291}, :content {:text "fun(session: Session): Boolean {"}, :properties {:color "blue"}} {:id #uuid "62bd852b-3fdd-4339-a46f-9df694e55683", :page 291, :position {:bounding {:x1 89.99999237060547, :y1 815.1431884765625, :x2 750.5112228393555, :y2 866.71875, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999237060547, :y1 815.1431884765625, :x2 750.5112228393555, :y2 842.6431884765625, :width 839.9999999999999, :height 1092} {:x1 89.99999237060547, :y1 839.21875, :x2 304.41234588623047, :y2 866.71875, :width 839.9999999999999, :height 1092}), :page 291}, :content {:text "If a lambda becomes too complicated and hard to read, replace it with a local functionor an anonymous function."}, :properties {:color "red"}} {:id #uuid "62bd8624-a1fb-47f0-8897-346f339ea632", :page 292, :position {:bounding {:x1 126.24999237060547, :y1 290.28643798828125, :x2 425.3769760131836, :y2 391.3150634765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 126.24999237060547, :y1 290.28643798828125, :x2 262.22664642333984, :y2 309.453125, :width 839.9999999999999, :height 1092} {:x1 126.24999237060547, :y1 310.75518798828125, :x2 289.41307830810547, :y2 329.921875, :width 839.9999999999999, :height 1092} {:x1 144.37499237060547, :y1 331.22393798828125, :x2 280.3646469116211, :y2 350.390625, :width 839.9999999999999, :height 1092} {:x1 144.37499237060547, :y1 351.69268798828125, :x2 198.77898406982422, :y2 370.859375, :width 839.9999999999999, :height 1092} {:x1 370.98958587646484, :y1 351.69268798828125, :x2 425.3769760131836, :y2 370.859375, :width 839.9999999999999, :height 1092} {:x1 126.24999237060547, :y1 372.1484375, :x2 136.22396087646484, :y2 391.3150634765625, :width 839.9999999999999, :height 1092}), :page 292}, :content {:text "result +=\"$it\"if(it == value) {result eq\"123\"return// [1]}"}, :properties {:color "red"}} {:id #uuid "62bedb6c-9898-42e3-8e30-24ef65b0dd76", :page 292, :position {:bounding {:x1 89.98910522460938, :y1 466.4627566561103, :x2 750.0845489501953, :y2 517.9258609041572, :width 839.9999999999999, :height 1092}, :rects ({:x1 727.7892608642578, :y1 466.4627566561103, :x2 750.0845489501953, :y2 493.8488955721259, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 490.53972198814154, :x2 364.4155731201172, :y2 517.9258609041572, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 495.10408356040716, :x2 429.7290802001953, :y2 514.2743716463447, :width 839.9999999999999, :height 1092}), :page 292}, :content {:text " Inline[1]this means returning frommain()"}, :properties {:color "red"}} {:id #uuid "62bedb77-7385-46e5-a9ea-710714ef9ed5", :page 292, :position {:bounding {:x1 89.98910522460938, :y1 490.5397033691406, :x2 750.0756988525391, :y2 542.0028381347656, :width 839.9999999999999, :height 1092}, :rects ({:x1 438.91127014160156, :y1 490.5397033691406, :x2 750.0756988525391, :y2 517.9258728027344, :width 839.9999999999999, :height 1092} {:x1 480.0274200439453, :y1 495.1040954589844, :x2 750.0756988525391, :y2 514.2743835449219, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 514.6166687011719, :x2 146.44387817382812, :y2 542.0028381347656, :width 839.9999999999999, :height 1092}), :page 292}, :content {:text "Line[2]is never called and you see nooutput."}, :properties {:color "yellow"}} {:id #uuid "62bedc8b-71a2-4ae9-94a7-099c490d8d3e", :page 292, :position {:bounding {:x1 89.43281555175781, :y1 548.1076354980469, :x2 750.0307769775391, :y2 599.5564880371094, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.43281555175781, :y1 548.1076354980469, :x2 750.0307769775391, :y2 575.4937438964844, :width 839.9999999999999, :height 1092} {:x1 168.3248291015625, :y1 552.6720275878906, :x2 750.0307769775391, :y2 571.8423156738281, :width 839.9999999999999, :height 1092} {:x1 149.82493591308594, :y1 572.1703796386719, :x2 154.18959045410156, :y2 599.5564880371094, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 575.4795227050781, :x2 149.8200225830078, :y2 596.4755554199219, :width 839.9999999999999, :height 1092}), :page 292}, :content {:text "To returnonlyfrom a lambda, and not from the surrounding function, use alabeledreturn:"}, :properties {:color "red"}} {:id #uuid "62bedcc8-116c-43bb-a733-ad94fb8a204f", :page 292, :position {:bounding {:x1 108.11814880371094, :y1 754.1739807128906, :x2 235.00550842285156, :y2 773.3442687988281, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 754.1739807128906, :x2 235.00550842285156, :y2 773.3442687988281, :width 839.9999999999999, :height 1092}), :page 292}, :content {:text "list.forEach {"}, :properties {:color "green"}} {:id #uuid "62bedcca-27d8-4469-891a-45eaa668cb5a", :page 292, :position {:bounding {:x1 126.2471923828125, :y1 795.1105651855469, :x2 407.23692321777344, :y2 814.2808532714844, :width 839.9999999999999, :height 1092}, :rects ({:x1 126.2471923828125, :y1 795.1105651855469, :x2 407.23692321777344, :y2 814.2808532714844, :width 839.9999999999999, :height 1092}), :page 292}, :content {:text "if(it == value)return@forEach"}, :properties {:color "green"}} {:id #uuid "62bedcdd-017f-4163-85a5-65ec2bc4f5e4", :page 292, :position {:bounding {:x1 173.3618927001953, :y1 913.6553611755371, :x2 664.0137481689453, :y2 941.0415306091309, :width 839.9999999999999, :height 1092}, :rects ({:x1 173.3618927001953, :y1 913.6553611755371, :x2 173.3759307861328, :y2 941.0415306091309, :width 839.9999999999999, :height 1092} {:x1 322.8710174560547, :y1 913.6553611755371, :x2 584.9195709228516, :y2 941.0415306091309, :width 839.9999999999999, :height 1092} {:x1 659.6490631103516, :y1 913.6553611755371, :x2 664.0137481689453, :y2 941.0415306091309, :width 839.9999999999999, :height 1092} {:x1 178.30934143066406, :y1 916.9645652770996, :x2 659.6578521728516, :y2 937.9605979919434, :width 839.9999999999999, :height 1092}), :page 292}, :content {:text "return@forEachtells it to returnonlyto the nameforEach."}, :properties {:color "green"}} {:id #uuid "62bedcea-517b-432c-bd72-4511962079c4", :page 293, :position {:bounding {:x1 108.11814880371094, :y1 269.66778564453125, :x2 443.48573303222656, :y2 350.22857666015625, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 269.66778564453125, :x2 272.1781463623047, :y2 288.83807373046875, :width 839.9999999999999, :height 1092} {:x1 389.11122131347656, :y1 269.66778564453125, :x2 443.48573303222656, :y2 288.83807373046875, :width 839.9999999999999, :height 1092} {:x1 126.2471923828125, :y1 290.13604736328125, :x2 262.2227020263672, :y2 309.30633544921875, :width 839.9999999999999, :height 1092} {:x1 126.2471923828125, :y1 310.59002685546875, :x2 370.98048400878906, :y2 329.76031494140625, :width 839.9999999999999, :height 1092} {:x1 389.11122131347656, :y1 310.59002685546875, :x2 443.48573303222656, :y2 329.76031494140625, :width 839.9999999999999, :height 1092} {:x1 108.11814880371094, :y1 331.05828857421875, :x2 118.08840942382812, :y2 350.22857666015625, :width 839.9999999999999, :height 1092}), :page 293}, :content {:text "list.forEach tag@{// [1]result +=\"$it\"if(it == value)return@tag// [2]}"}, :properties {:color "green"}} {:id #uuid "62bee007-ed7a-4a44-935e-fd3d2ec0d599", :page 293, :position {:bounding {:x1 116.21987915039062, :y1 405.0436706542969, :x2 606.4172515869141, :y2 458.0329284667969, :width 839.9999999999999, :height 1092}, :rects ({:x1 116.21987915039062, :y1 405.0436706542969, :x2 337.20640563964844, :y2 432.4297790527344, :width 839.9999999999999, :height 1092} {:x1 372.02342224121094, :y1 405.0436706542969, :x2 376.38807678222656, :y2 432.4297790527344, :width 839.9999999999999, :height 1092} {:x1 131.5104522705078, :y1 409.6080017089844, :x2 376.38807678222656, :y2 428.7782897949219, :width 839.9999999999999, :height 1092} {:x1 116.21987915039062, :y1 430.6468200683594, :x2 155.6810302734375, :y2 458.0329284667969, :width 839.9999999999999, :height 1092} {:x1 265.3459014892578, :y1 430.6468200683594, :x2 537.3816070556641, :y2 458.0329284667969, :width 839.9999999999999, :height 1092} {:x1 602.0526275634766, :y1 430.6468200683594, :x2 606.4172515869141, :y2 458.0329284667969, :width 839.9999999999999, :height 1092} {:x1 116.21987915039062, :y1 435.2112121582031, :x2 602.0619659423828, :y2 454.3815002441406, :width 839.9999999999999, :height 1092}), :page 293}, :content {:text "•[1]This lambda is labeledtag.•[2]return@tagreturns from the lambda, not frommain()."}, :properties {:color "green"}} {:id #uuid "62bee023-3a25-4812-9c46-c0a074416511", :page 293, :position {:bounding {:x1 144.37623596191406, :y1 666.6524658203125, :x2 280.3495330810547, :y2 685.82275390625, :width 839.9999999999999, :height 1092}, :rects ({:x1 144.37623596191406, :y1 666.6524658203125, :x2 280.3495330810547, :y2 685.82275390625, :width 839.9999999999999, :height 1092}), :page 293}, :content {:text "return@anytrue"}, :properties {:color "red"}} {:id #uuid "62bee032-b26b-48a2-ba96-5d0ef2bbb6c6", :page 293, :position {:bounding {:x1 89.07623291015625, :y1 802.727294921875, :x2 649.2794342041016, :y2 830.1134033203125, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.07623291015625, :y1 802.727294921875, :x2 159.2019500732422, :y2 830.1134033203125, :width 839.9999999999999, :height 1092} {:x1 228.9594268798828, :y1 802.727294921875, :x2 580.2708282470703, :y2 830.1134033203125, :width 839.9999999999999, :height 1092} {:x1 644.9147491455078, :y1 802.727294921875, :x2 649.2794342041016, :y2 830.1134033203125, :width 839.9999999999999, :height 1092} {:x1 164.14559936523438, :y1 806.0364379882812, :x2 644.9240875244141, :y2 827.032470703125, :width 839.9999999999999, :height 1092}), :page 293}, :content {:text "We mustreturnto a label so it exits only the lambda and notmain()."}, :properties {:color "red"}} {:id #uuid "62bee05e-a3ba-4455-8308-445a53b3d42b", :page 293, :position {:bounding {:x1 108.11814880371094, :y1 605.2619018554688, :x2 216.8794403076172, :y2 624.4321899414062, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 605.2619018554688, :x2 216.8794403076172, :y2 624.4321899414062, :width 839.9999999999999, :height 1092}), :page 293}, :content {:text "sessions.any"}, :properties {:color "red"}} {:id #uuid "62bee124-d9dd-4ee1-ad66-a8552cd2f26d", :page 294, :position {:bounding {:x1 288.97804260253906, :y1 121.78265380859375, :x2 601.5110015869141, :y2 149.1688232421875, :width 839.9999999999999, :height 1092}, :rects ({:x1 288.97804260253906, :y1 121.78265380859375, :x2 288.9917755126953, :y2 149.1688232421875, :width 839.9999999999999, :height 1092} {:x1 366.66029357910156, :y1 121.78265380859375, :x2 601.5110015869141, :y2 149.1688232421875, :width 839.9999999999999, :height 1092} {:x1 292.87464904785156, :y1 125.07757568359375, :x2 362.6752471923828, :y2 146.0736083984375, :width 839.9999999999999, :height 1092}), :page 294}, :content {:text "first()creates an anonymous functio"}, :properties {:color "yellow"}} {:id #uuid "62bee132-f2db-475f-ac52-6899fddaf54f", :page 294, :position {:bounding {:x1 89.98910522460938, :y1 121.78265380859375, :x2 750.0176544189453, :y2 173.23150634765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 615.9854888916016, :y1 121.78265380859375, :x2 615.9992828369141, :y2 149.1688232421875, :width 839.9999999999999, :height 1092} {:x1 703.6522979736328, :y1 121.78265380859375, :x2 750.0176544189453, :y2 149.1688232421875, :width 839.9999999999999, :height 1092} {:x1 619.8820953369141, :y1 125.07757568359375, :x2 750.0176544189453, :y2 146.0736083984375, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 145.84539794921875, :x2 148.6650390625, :y2 173.23150634765625, :width 839.9999999999999, :height 1092}), :page 294}, :content {:text "second()uses alambda"}, :properties {:color "yellow"}} {:id #uuid "62bee136-23e6-40fd-86b4-83bdca4f7192", :page 294, :position {:bounding {:x1 186.85182189941406, :y1 145.84539794921875, :x2 560.7238922119141, :y2 173.23150634765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 186.85182189941406, :y1 145.84539794921875, :x2 186.8654022216797, :y2 173.23150634765625, :width 839.9999999999999, :height 1092} {:x1 265.87364196777344, :y1 145.84539794921875, :x2 560.7238922119141, :y2 173.23150634765625, :width 839.9999999999999, :height 1092} {:x1 191.4604034423828, :y1 149.154541015625, :x2 261.26100158691406, :y2 170.15057373046875, :width 839.9999999999999, :height 1092}), :page 294}, :content {:text "third()returns a reference to a local function"}, :properties {:color "yellow"}} {:id #uuid "62bee142-430b-4de8-8c6e-80425991ca17", :page 294, :position {:bounding {:x1 89.98910522460938, :y1 145.84539794921875, :x2 750.0684356689453, :y2 197.3084716796875, :width 839.9999999999999, :height 1092}, :rects ({:x1 564.9218902587891, :y1 145.84539794921875, :x2 564.9356231689453, :y2 173.23150634765625, :width 839.9999999999999, :height 1092} {:x1 653.8294830322266, :y1 145.84539794921875, :x2 750.0684356689453, :y2 173.23150634765625, :width 839.9999999999999, :height 1092} {:x1 569.4317169189453, :y1 149.154541015625, :x2 750.0684356689453, :y2 170.15057373046875, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 169.92236328125, :x2 198.2482452392578, :y2 197.3084716796875, :width 839.9999999999999, :height 1092} {:x1 275.88670349121094, :y1 169.92236328125, :x2 597.3806915283203, :y2 197.3084716796875, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 174.4866943359375, :x2 271.94444274902344, :y2 193.656982421875, :width 839.9999999999999, :height 1092}), :page 294}, :content {:text "fourth()achieves thesame effect asthird()but uses a more compact expression body"}, :properties {:color "yellow"}} {:id #uuid "62bee150-1cd8-4fb4-aac9-d307d5b4fd26", :page 294, :position {:bounding {:x1 89.98910522460938, :y1 169.92236328125, :x2 750.0055694580078, :y2 221.38543701171875, :width 839.9999999999999, :height 1092}, :rects ({:x1 679.1331329345703, :y1 169.92236328125, :x2 750.0055694580078, :y2 197.3084716796875, :width 839.9999999999999, :height 1092} {:x1 605.3902740478516, :y1 173.23150634765625, :x2 750.0055694580078, :y2 194.2275390625, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 193.99932861328125, :x2 338.5471954345703, :y2 221.38543701171875, :width 839.9999999999999, :height 1092}), :page 294}, :content {:text "fifth()producesthe same effect using a lambda:"}, :properties {:color "yellow"}} {:id #uuid "62bee165-d8f5-4d69-9c0b-29a4b70ecc27", :page 294, :position {:bounding {:x1 108.11814880371094, :y1 337.47698974609375, :x2 380.9524383544922, :y2 356.64727783203125, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 337.47698974609375, :x2 380.9524383544922, :y2 356.64727783203125, :width 839.9999999999999, :height 1092}), :page 294}, :content {:text "valfunc =fun(i: Int) = i +1"}, :properties {:color "yellow"}} {:id #uuid "62bee17c-d61c-4c59-b3b8-c1c7db1a79be", :page 293, :position {:bounding {:x1 89.98910522460938, :y1 463.5244445800781, :x2 748.0376129150391, :y2 490.9105529785156, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98910522460938, :y1 463.5244445800781, :x2 406.4121398925781, :y2 490.9105529785156, :width 839.9999999999999, :height 1092} {:x1 634.8446197509766, :y1 463.5244445800781, :x2 748.0376129150391, :y2 490.9105529785156, :width 839.9999999999999, :height 1092} {:x1 410.8774871826172, :y1 466.8335876464844, :x2 630.2489776611328, :y2 487.8296203613281, :width 839.9999999999999, :height 1092}), :page 293}, :content {:text "Let’s replace the anonymous function inInterestingSessions.ktwith a lambda"}, :properties {:color "red"}} {:id #uuid "62bee186-b72a-4802-82b4-1897ac27d389", :page 291, :position {:bounding {:x1 162.50527954101562, :y1 580.4860534667969, :x2 262.22047424316406, :y2 599.6563415527344, :width 839.9999999999999, :height 1092}, :rects ({:x1 162.50527954101562, :y1 580.4860534667969, :x2 262.22047424316406, :y2 599.6563415527344, :width 839.9999999999999, :height 1092}), :page 291}, :content {:text "returntrue"}, :properties {:color "red"}} {:id #uuid "62bee1a4-bc33-4932-b35c-896adddabd24", :page 291, :position {:bounding {:x1 131.5104522705078, :y1 727.2157745361328, :x2 753.6061706542969, :y2 778.6788482666016, :width 839.9999999999999, :height 1092}, :rects ({:x1 137.98104858398438, :y1 727.2157745361328, :x2 753.6061706542969, :y2 754.6018829345703, :width 839.9999999999999, :height 1092} {:x1 164.74465942382812, :y1 731.7801055908203, :x2 753.6061706542969, :y2 750.9503936767578, :width 839.9999999999999, :height 1092} {:x1 131.5104522705078, :y1 751.2927398681641, :x2 219.80152893066406, :y2 778.6788482666016, :width 839.9999999999999, :height 1092}), :page 291}, :content {:text "1]An anonymous function looks like a regular function without a func-tion name."}, :properties {:color "blue"}} {:id #uuid "62bee219-4916-4527-b8c8-d1a4f7635bcd", :page 294, :position {:bounding {:x1 108.11814880371094, :y1 460.2580871582031, :x2 417.2105255126953, :y2 479.4283752441406, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 460.2580871582031, :x2 417.2105255126953, :y2 479.4283752441406, :width 839.9999999999999, :height 1092}), :page 294}, :content {:text "valfunc2 = { s: String ->\"$s!\"}"}, :properties {:color "yellow"}} {:id #uuid "62bee231-caff-489f-8636-5595a99328f3", :page 294, :position {:bounding {:x1 108.11814880371094, :y1 583.0534973144531, :x2 280.3517303466797, :y2 622.6921081542969, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 583.0534973144531, :x2 280.3517303466797, :y2 602.2237854003906, :width 839.9999999999999, :height 1092} {:x1 108.11814880371094, :y1 603.5217590332031, :x2 235.03623962402344, :y2 622.6921081542969, :width 839.9999999999999, :height 1092}), :page 294}, :content {:text "fungreet() =\"Hi!\"return::greet"}, :properties {:color "yellow"}} {:id #uuid "62bee23c-8c77-45cd-8df9-518345f18426", :page 294, :position {:bounding {:x1 89.98910522460938, :y1 664.9123840332031, :x2 343.79624938964844, :y2 684.0826721191406, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98910522460938, :y1 664.9123840332031, :x2 343.79624938964844, :y2 684.0826721191406, :width 839.9999999999999, :height 1092}), :page 294}, :content {:text "funfourth() =fun() =\"Hi!\""}, :properties {:color "yellow"}} {:id #uuid "62bee24f-fafe-4d0f-9c43-34b0ad66ad73", :page 294, :position {:bounding {:x1 89.98910522460938, :y1 705.8346252441406, :x2 299.3788604736328, :y2 725.0049133300781, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98910522460938, :y1 705.8346252441406, :x2 299.3788604736328, :y2 725.0049133300781, :width 839.9999999999999, :height 1092}), :page 294}, :content {:text "funfifth() = {\"Hi!\"}"}, :properties {:color "yellow"}} {:id #uuid "62bee47c-26cf-4fc2-85e3-50bce9fbadb8", :page 294, :position {:bounding {:x1 108.11814880371094, :y1 767.2394580841064, :x2 488.7891387939453, :y2 868.2685718536377, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 767.2394580841064, :x2 425.33714294433594, :y2 786.409746170044, :width 839.9999999999999, :height 1092} {:x1 108.11814880371094, :y1 787.693437576294, :x2 488.7891387939453, :y2 806.8637256622314, :width 839.9999999999999, :height 1092} {:x1 108.11814880371094, :y1 808.1617603302002, :x2 425.33714294433594, :y2 827.3320484161377, :width 839.9999999999999, :height 1092} {:x1 108.11814880371094, :y1 828.6300220489502, :x2 434.4109649658203, :y2 847.8003101348877, :width 839.9999999999999, :height 1092} {:x1 108.11814880371094, :y1 849.0982837677002, :x2 425.33714294433594, :y2 868.2685718536377, :width 839.9999999999999, :height 1092}), :page 294}, :content {:text "valfunRef1: (Int) -> Int = first()valfunRef2: (String) -> String = second()valfunRef3: () -> String = third()valfunRef4: () -> String = fourth()valfunRef5: () -> String = fifth()"}, :properties {:color "blue"}} {:id #uuid "62bee49a-312a-46f8-a406-2a4410b2eff9", :page 295, :position {:bounding {:x1 290.2769012451172, :y1 312.7010498046875, :x2 753.2226104736328, :y2 340.0872802734375, :width 839.9999999999999, :height 1092}, :rects ({:x1 290.2769012451172, :y1 312.7010498046875, :x2 335.7918243408203, :y2 340.0872802734375, :width 839.9999999999999, :height 1092} {:x1 404.53016662597656, :y1 312.7010498046875, :x2 753.2226104736328, :y2 340.0872802734375, :width 839.9999999999999, :height 1092} {:x1 340.20130920410156, :y1 316.01025390625, :x2 400.03224182128906, :y2 337.0062255859375, :width 839.9999999999999, :height 1092}), :page 295}, :content {:text " EachfunRefis then called with an appropriate argument."}, :properties {:color "yellow"}} {:id #uuid "62bee4a5-bb5d-450b-b3cf-3018661fc10b", :page 295, :position {:bounding {:x1 89.98910522460938, :y1 336.778076171875, :x2 753.6684875488281, :y2 388.2412109375, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98910522460938, :y1 336.778076171875, :x2 753.6684875488281, :y2 364.1641845703125, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 360.85498046875, :x2 502.9223327636719, :y2 388.2412109375, :width 839.9999999999999, :height 1092}), :page 295}, :content {:text "Finally, each function is called and then the returned function reference is immedi-ately called by adding an appropriate argument list"}, :properties {:color "blue"}} {:id #uuid "62bee4c1-00c7-44dc-a79f-1a1e4c6417c0", :page 296, :position {:bounding {:x1 89.98854064941406, :y1 183.862548828125, :x2 345.7709503173828, :y2 241.3734130859375, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98854064941406, :y1 183.862548828125, :x2 345.7709503173828, :y2 241.3734130859375, :width 839.9999999999999, :height 1092}), :page 296}, :content {:text "Folding Lists"}, :properties {:color "yellow"}} {:id #uuid "62bee4dd-93d4-4059-94a6-2050b107b1cf", :page 296, :position {:bounding {:x1 131.5104522705078, :y1 261.3663330078125, :x2 711.7982940673828, :y2 288.75244140625, :width 839.9999999999999, :height 1092}, :rects ({:x1 195.5825958251953, :y1 261.3663330078125, :x2 711.7982940673828, :y2 288.75244140625, :width 839.9999999999999, :height 1092} {:x1 131.5104522705078, :y1 264.67547607421875, :x2 191.3413848876953, :y2 285.6715087890625, :width 839.9999999999999, :height 1092}), :page 296}, :content {:text "fold()combines all elements of a list, in order, to generate a single result."}, :properties {:color "yellow"}} {:id #uuid "62bee4ec-36e3-41f3-8a6d-546145d5ea11", :page 296, :position {:bounding {:x1 158.83172607421875, :y1 338.09027099609375, :x2 406.73497009277344, :y2 365.4764404296875, :width 839.9999999999999, :height 1092}, :rects ({:x1 158.83172607421875, :y1 338.09027099609375, :x2 201.33164978027344, :y2 365.4764404296875, :width 839.9999999999999, :height 1092} {:x1 271.07984924316406, :y1 338.09027099609375, :x2 406.73497009277344, :y2 365.4764404296875, :width 839.9999999999999, :height 1092} {:x1 206.2660369873047, :y1 341.39947509765625, :x2 266.0970001220703, :y2 362.3955078125, :width 839.9999999999999, :height 1092}), :page 296}, :content {:text "Here,fold()sums a sequence:"}, :properties {:color "yellow"}} {:id #uuid "62bee523-aabf-44cb-a486-99fcce42081a", :page 296, :position {:bounding {:x1 89.26165771484375, :y1 610.3968505859375, :x2 750.2920074462891, :y2 661.8599243164062, :width 839.9999999999999, :height 1092}, :rects ({:x1 440.96376037597656, :y1 610.3968505859375, :x2 750.2920074462891, :y2 637.782958984375, :width 839.9999999999999, :height 1092} {:x1 89.26165771484375, :y1 634.4738159179688, :x2 236.4307098388672, :y2 661.8599243164062, :width 839.9999999999999, :height 1092}), :page 296}, :content {:text " combine the current accumulated valuewith each element."}, :properties {:color "blue"}} {:id #uuid "62bee53e-d5d3-44e6-b30c-e00a83454448", :page 296, :position {:bounding {:x1 89.50413513183594, :y1 634.4738159179688, :x2 750.0628204345703, :y2 731.0098876953125, :width 839.9999999999999, :height 1092}, :rects ({:x1 303.6864776611328, :y1 634.4738159179688, :x2 375.64317321777344, :y2 661.8599243164062, :width 839.9999999999999, :height 1092} {:x1 393.04795837402344, :y1 634.4738159179688, :x2 559.5213165283203, :y2 661.8599243164062, :width 839.9999999999999, :height 1092} {:x1 576.9058990478516, :y1 634.4738159179688, :x2 620.0880279541016, :y2 661.8599243164062, :width 839.9999999999999, :height 1092} {:x1 633.7748565673828, :y1 634.4738159179688, :x2 750.0628204345703, :y2 661.8599243164062, :width 839.9999999999999, :height 1092} {:x1 240.1135711669922, :y1 637.782958984375, :x2 750.0628204345703, :y2 658.7789916992188, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 658.55078125, :x2 114.8759765625, :y2 685.9368896484375, :width 839.9999999999999, :height 1092} {:x1 150.2243194580078, :y1 658.55078125, :x2 372.43907165527344, :y2 685.9368896484375, :width 839.9999999999999, :height 1092} {:x1 403.2036590576172, :y1 658.55078125, :x2 448.0995635986328, :y2 685.9368896484375, :width 839.9999999999999, :height 1092} {:x1 473.46620178222656, :y1 658.55078125, :x2 674.7416534423828, :y2 685.9368896484375, :width 839.9999999999999, :height 1092} {:x1 709.9995880126953, :y1 658.55078125, :x2 750.0155792236328, :y2 685.9368896484375, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 663.1151123046875, :x2 750.0155792236328, :y2 684.1111450195312, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 682.6277465820312, :x2 445.3970031738281, :y2 710.0138549804688, :width 839.9999999999999, :height 1092} {:x1 485.6615753173828, :y1 682.6277465820312, :x2 515.0955352783203, :y2 710.0138549804688, :width 839.9999999999999, :height 1092} {:x1 560.2032012939453, :y1 682.6277465820312, :x2 680.2283477783203, :y2 710.0138549804688, :width 839.9999999999999, :height 1092} {:x1 720.5689239501953, :y1 682.6277465820312, :x2 750.0028839111328, :y2 710.0138549804688, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 687.1920776367188, :x2 750.0028839111328, :y2 708.1881103515625, :width 839.9999999999999, :height 1092} {:x1 89.50413513183594, :y1 710.0138549804688, :x2 129.395751953125, :y2 731.0098876953125, :width 839.9999999999999, :height 1092}), :page 296}, :content {:text "fold()first adds0(the initial value) and1to get1. That becomesthesum, which is then added to the10to get11, which becomes the newsum. Theoperation is repeated for two more elements:100and1000. This produces111and1111"}, :properties {:color "blue"}} {:id #uuid "62bee547-105b-481d-8a79-692e9017ffd5", :page 296, :position {:bounding {:x1 108.11814880371094, :y1 485.50469970703125, :x2 325.64854431152344, :y2 545.5972290039062, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 485.50469970703125, :x2 325.64854431152344, :y2 504.67498779296875, :width 839.9999999999999, :height 1092} {:x1 126.2471923828125, :y1 505.95867919921875, :x2 189.6825714111328, :y2 525.1289672851562, :width 839.9999999999999, :height 1092} {:x1 108.11814880371094, :y1 526.4269409179688, :x2 117.18783569335938, :y2 545.5972290039062, :width 839.9999999999999, :height 1092}), :page 296}, :content {:text "list.fold(0) { sum, n ->sum + n}"}, :properties {:color "blue"}} {:id #uuid "62bee57a-5817-4836-86aa-878ea3317e58", :page 296, :position {:bounding {:x1 89.98910522460938, :y1 730.7673950195312, :x2 750.1628570556641, :y2 782.23046875, :width 839.9999999999999, :height 1092}, :rects ({:x1 278.7391815185547, :y1 730.7673950195312, :x2 278.75318908691406, :y2 758.153564453125, :width 839.9999999999999, :height 1092} {:x1 349.4298553466797, :y1 730.7673950195312, :x2 750.1628570556641, :y2 758.153564453125, :width 839.9999999999999, :height 1092} {:x1 284.1595916748047, :y1 734.0765991210938, :x2 750.1628570556641, :y2 755.0726318359375, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 754.8443603515625, :x2 565.6226501464844, :y2 782.23046875, :width 839.9999999999999, :height 1092}), :page 296}, :content {:text "fold()doesn’t really know it’s doing a “sum”—the choiceof identifier name was ours, to make it easier to understand."}, :properties {:color "blue"}} {:id #uuid "62bee60e-487d-49f4-99d0-e4bd890dcd7d", :page 296, :position {:bounding {:x1 89.43281555175781, :y1 789.2339096069336, :x2 750.4909210205078, :y2 840.6970062255859, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.43281555175781, :y1 789.2339096069336, :x2 307.99143981933594, :y2 816.6200332641602, :width 839.9999999999999, :height 1092} {:x1 373.60667419433594, :y1 789.2339096069336, :x2 430.41371154785156, :y2 816.6200332641602, :width 839.9999999999999, :height 1092} {:x1 571.8137359619141, :y1 789.2339096069336, :x2 714.7090606689453, :y2 816.6200332641602, :width 839.9999999999999, :height 1092} {:x1 313.7851104736328, :y1 792.5430679321289, :x2 750.4909210205078, :y2 813.5391006469727, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 813.3108825683594, :x2 128.74615478515625, :y2 840.6970062255859, :width 839.9999999999999, :height 1092}), :page 296}, :content {:text "To illuminate the steps in afold(), here’sSumViaFold.ktusing an ordinaryforloop:"}, :properties {:color "yellow"}} {:id #uuid "62bee616-3423-4d85-b9fa-cf66296994d5", :page 297, :position {:bounding {:x1 108.11814880371094, :y1 290.1360168457031, :x2 479.720947265625, :y2 350.2286071777344, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 290.1360168457031, :x2 262.19874572753906, :y2 309.3063049316406, :width 839.9999999999999, :height 1092} {:x1 126.2471923828125, :y1 310.5900573730469, :x2 479.720947265625, :y2 329.7603454589844, :width 839.9999999999999, :height 1092} {:x1 108.11814880371094, :y1 331.0583190917969, :x2 118.08840942382812, :y2 350.2286071777344, :width 839.9999999999999, :height 1092}), :page 297}, :content {:text "for(iinlist) {accumulator = operation(accumulator, i)}"}, :properties {:color "yellow"}} {:id #uuid "62bee61c-6d0c-4a1d-b756-0e8b58b2da1e", :page 297, :position {:bounding {:x1 108.11814880371094, :y1 249.19949340820312, :x2 407.2081298828125, :y2 288.8380432128906, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 249.19949340820312, :x2 244.0680389404297, :y2 268.3697814941406, :width 839.9999999999999, :height 1092} {:x1 126.2471923828125, :y1 269.6677551269531, :x2 407.2081298828125, :y2 288.8380432128906, :width 839.9999999999999, :height 1092}), :page 297}, :content {:text "valoperation ={ sum: Int, i: Int -> sum + i }"}, :properties {:color "yellow"}} {:id #uuid "62bee6a1-35de-42f5-8658-d93f72a2865d", :page 297, :position {:bounding {:x1 89.98910522460938, :y1 411.4194641113281, :x2 750.0378570556641, :y2 462.8825988769531, :width 839.9999999999999, :height 1092}, :rects ({:x1 157.64138793945312, :y1 411.4194641113281, :x2 521.2355041503906, :y2 438.8056335449219, :width 839.9999999999999, :height 1092} {:x1 626.4148712158203, :y1 411.4194641113281, :x2 750.0378570556641, :y2 438.8056335449219, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 414.7286682128906, :x2 750.0378570556641, :y2 435.7247009277344, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 435.4964904785156, :x2 441.9722595214844, :y2 462.8825988769531, :width 839.9999999999999, :height 1092}), :page 297}, :content {:text "fold()accumulates values by successively applyingoperationto combine thecurrent element with the accumulator value."}, :properties {:color "yellow"}} {:id #uuid "62bee6d1-d97d-4d38-8d99-43c5ee72f73b", :page 297, :position {:bounding {:x1 89.29017639160156, :y1 469.8717346191406, :x2 750.2121734619141, :y2 545.4118347167969, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.29017639160156, :y1 469.8717346191406, :x2 164.54734802246094, :y2 497.2579040527344, :width 839.9999999999999, :height 1092} {:x1 236.76161193847656, :y1 469.8717346191406, :x2 750.2121734619141, :y2 497.2579040527344, :width 839.9999999999999, :height 1092} {:x1 170.7211151123047, :y1 473.1809387207031, :x2 750.2121734619141, :y2 494.1769714355469, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 493.9486999511719, :x2 653.1821594238281, :y2 521.3348693847656, :width 839.9999999999999, :height 1092} {:x1 694.2097930908203, :y1 493.9486999511719, :x2 749.9982452392578, :y2 521.3348693847656, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 498.5130920410156, :x2 749.9982452392578, :y2 517.6833801269531, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 518.0257263183594, :x2 143.24716186523438, :y2 545.4118347167969, :width 839.9999999999999, :height 1092}), :page 297}, :content {:text "Althoughfold()is an important concept and the only way to accumulate valuesin pure functional languages, you may sometimes still use an ordinaryforloop inKotlin."}, :properties {:color "green"}} {:id #uuid "62beea39-839e-4c67-a358-f88819ca1774", :page 297, :position {:bounding {:x1 89.98910522460938, :y1 552.4152603149414, :x2 565.9171295166016, :y2 579.8013687133789, :width 839.9999999999999, :height 1092}, :rects ({:x1 205.93797302246094, :y1 552.4152603149414, :x2 565.9171295166016, :y2 579.8013687133789, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 555.7244033813477, :x2 199.6813201904297, :y2 576.7204360961914, :width 839.9999999999999, :height 1092}), :page 297}, :content {:text "foldRight()processes elements starting from right to left"}, :properties {:color "blue"}} {:id #uuid "62beea44-0b34-431b-9a68-86c6bd59a7a7", :page 297, :position {:bounding {:x1 108.11814880371094, :y1 747.9693374633789, :x2 398.1653594970703, :y2 808.0761489868164, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 747.9693374633789, :x2 370.97312927246094, :y2 767.1396255493164, :width 839.9999999999999, :height 1092} {:x1 126.2471923828125, :y1 768.4375991821289, :x2 271.2562713623047, :y2 787.6078872680664, :width 839.9999999999999, :height 1092} {:x1 108.11814880371094, :y1 788.9058609008789, :x2 398.1653594970703, :y2 808.0761489868164, :width 839.9999999999999, :height 1092}), :page 297}, :content {:text "list.fold(\"*\") { acc, elem ->\"($acc) + $elem\"} eq\"((((*) + a) + b) + c) + d\""}, :properties {:color "blue"}} {:id #uuid "62beea47-a266-4133-9e4d-aa0eba50b29b", :page 297, :position {:bounding {:x1 108.11814880371094, :y1 809.3741226196289, :x2 416.2886199951172, :y2 869.4667129516602, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 809.3741226196289, :x2 416.2886199951172, :y2 828.5444107055664, :width 839.9999999999999, :height 1092} {:x1 126.2471923828125, :y1 829.8424453735352, :x2 271.2562713623047, :y2 849.0127334594727, :width 839.9999999999999, :height 1092} {:x1 108.11814880371094, :y1 850.2964248657227, :x2 398.1653594970703, :y2 869.4667129516602, :width 839.9999999999999, :height 1092}), :page 297}, :content {:text "list.foldRight(\"*\") { elem, acc ->\"$elem + ($acc)\"} eq\"a + (b + (c + (d + (*))))\""}, :properties {:color "blue"}} {:id #uuid "62beeba0-0505-4784-af6a-6a5b854f83bc", :page 297, :position {:bounding {:x1 89.98910522460938, :y1 910.1893081665039, :x2 751.9967193603516, :y2 961.6523818969727, :width 839.9999999999999, :height 1092}, :rects ({:x1 153.39083862304688, :y1 910.1893081665039, :x2 370.5076141357422, :y2 937.5754776000977, :width 839.9999999999999, :height 1092} {:x1 383.9477996826172, :y1 910.1893081665039, :x2 513.4464874267578, :y2 937.5754776000977, :width 839.9999999999999, :height 1092} {:x1 586.7620391845703, :y1 910.1893081665039, :x2 638.7564239501953, :y2 937.5754776000977, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 913.4984512329102, :x2 751.9967193603516, :y2 934.4945449829102, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 934.2662734985352, :x2 387.9177551269531, :y2 961.6523818969727, :width 839.9999999999999, :height 1092} {:x1 402.7329559326172, :y1 934.2662734985352, :x2 520.1882476806641, :y2 961.6523818969727, :width 839.9999999999999, :height 1092} {:x1 540.0915069580078, :y1 934.2662734985352, :x2 571.9516754150391, :y2 961.6523818969727, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 938.8306045532227, :x2 536.1119537353516, :y2 959.8265762329102, :width 839.9999999999999, :height 1092}), :page 297}, :content {:text "fold()first applies the operation toa, as we can see in(*) + a, whilefoldRight()first processes the right-hand elementd, and processesalast."}, :properties {:color "yellow"}} {:id #uuid "62beec31-cc36-42ff-88dc-cfb19ef93ee9", :page 298, :position {:bounding {:x1 89.98910522460938, :y1 145.8453369140625, :x2 754.9821319580078, :y2 221.38543701171875, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98910522460938, :y1 145.8453369140625, :x2 558.5121765136719, :y2 173.23150634765625, :width 839.9999999999999, :height 1092} {:x1 656.5110626220703, :y1 145.8453369140625, :x2 685.9450225830078, :y2 173.23150634765625, :width 839.9999999999999, :height 1092} {:x1 567.5204010009766, :y1 149.154541015625, :x2 754.9821319580078, :y2 170.15057373046875, :width 839.9999999999999, :height 1092} {:x1 175.32826232910156, :y1 169.92236328125, :x2 264.95692443847656, :y2 197.3084716796875, :width 839.9999999999999, :height 1092} {:x1 335.82237243652344, :y1 169.92236328125, :x2 365.25636291503906, :y2 197.3084716796875, :width 839.9999999999999, :height 1092} {:x1 486.0467071533203, :y1 169.92236328125, :x2 752.3160552978516, :y2 197.3084716796875, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 173.23150634765625, :x2 752.3160552978516, :y2 194.2275390625, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 193.99932861328125, :x2 342.22947692871094, :y2 221.38543701171875, :width 839.9999999999999, :height 1092}), :page 298}, :content {:text "Sometimes the first element can act as an initial value.reduce()andreduc-eRight()behave likefold()andfoldRight()but use the first and last element,respectively, as the initial value:"}, :properties {:color "red"}} {:id #uuid "62beec54-5af5-4679-b9bd-5e52c8b0bf85", :page 298, :position {:bounding {:x1 108.11814880371094, :y1 418.6654052734375, :x2 425.3510284423828, :y2 458.30401611328125, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 418.6654052734375, :x2 425.3510284423828, :y2 437.83575439453125, :width 839.9999999999999, :height 1092} {:x1 126.2471923828125, :y1 439.13372802734375, :x2 298.4518280029297, :y2 458.30401611328125, :width 839.9999999999999, :height 1092}), :page 298}, :content {:text "chars.reduce { a, e ->\"$a $e\"} eq\"A B C D E F G H I\""}, :properties {:color "red"}} {:id #uuid "62beec57-29ca-4b5a-96e1-2a78ea88e4f3", :page 298, :position {:bounding {:x1 108.11814880371094, :y1 459.60198974609375, :x2 470.68080139160156, :y2 499.24053955078125, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 459.60198974609375, :x2 470.68080139160156, :y2 478.77227783203125, :width 839.9999999999999, :height 1092} {:x1 126.2471923828125, :y1 480.07025146484375, :x2 298.4518280029297, :y2 499.24053955078125, :width 839.9999999999999, :height 1092}), :page 298}, :content {:text "chars.reduceRight { a, e ->\"$a $e\"} eq\"A B C D E F G H I\""}, :properties {:color "red"}} {:id #uuid "62beed82-b789-449d-a410-41e0d37fa228", :page 298, :position {:bounding {:x1 89.98910522460938, :y1 559.418701171875, :x2 750.3515167236328, :y2 607.8008422851562, :width 839.9999999999999, :height 1092}, :rects ({:x1 297.7108917236328, :y1 559.418701171875, :x2 468.66871643066406, :y2 586.8048095703125, :width 839.9999999999999, :height 1092} {:x1 519.1382598876953, :y1 559.418701171875, :x2 663.1140289306641, :y2 586.8048095703125, :width 839.9999999999999, :height 1092} {:x1 733.6344146728516, :y1 559.418701171875, :x2 750.3515167236328, :y2 586.8048095703125, :width 839.9999999999999, :height 1092} {:x1 473.8798370361328, :y1 562.7278442382812, :x2 750.3515167236328, :y2 583.723876953125, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 586.8048095703125, :x2 169.75938415527344, :y2 607.8008422851562, :width 839.9999999999999, :height 1092}), :page 298}, :content {:text "The final value in theListis the result of thefold()orreduce()"}, :properties {:color "green"}} {:id #uuid "62beed8c-b756-4803-93ef-be40a8666ee0", :page 298, :position {:bounding {:x1 89.98910522460938, :y1 535.3417129516602, :x2 753.4539947509766, :y2 586.804817199707, :width 839.9999999999999, :height 1092}, :rects ({:x1 224.6803436279297, :y1 535.3417129516602, :x2 254.1143341064453, :y2 562.7278518676758, :width 839.9999999999999, :height 1092} {:x1 413.81578063964844, :y1 535.3417129516602, :x2 491.46754455566406, :y2 562.7278518676758, :width 839.9999999999999, :height 1092} {:x1 541.4608306884766, :y1 535.3417129516602, :x2 753.4539947509766, :y2 562.7278518676758, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 538.6508865356445, :x2 753.4539947509766, :y2 559.6468887329102, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 559.4186782836914, :x2 288.5374298095703, :y2 586.804817199707, :width 839.9999999999999, :height 1092}), :page 298}, :content {:text "runningFold()andrunningReduce()produce aListcontaining all the interme-diate steps of the process"}, :properties {:color "green"}} {:id #uuid "62beede3-9abb-47b2-b6eb-98312fa8a66d", :page 298, :position {:bounding {:x1 108.11814880371094, :y1 787.6934814453125, :x2 389.0930633544922, :y2 847.80029296875, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 787.6934814453125, :x2 389.0930633544922, :y2 806.86376953125, :width 839.9999999999999, :height 1092} {:x1 126.2471923828125, :y1 808.1617431640625, :x2 189.6825714111328, :y2 827.33203125, :width 839.9999999999999, :height 1092} {:x1 108.11814880371094, :y1 828.6300048828125, :x2 343.7742462158203, :y2 847.80029296875, :width 839.9999999999999, :height 1092}), :page 298}, :content {:text "list.runningFold(7) { sum, n ->sum + n} eq\"[7, 18, 31, 48, 67]\""}, :properties {:color "green"}} {:id #uuid "62beede7-abd9-4bf9-8c29-3808f3d95757", :page 298, :position {:bounding {:x1 108.11814880371094, :y1 910.4888916015625, :x2 380.01820373535156, :y2 970.595703125, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 910.4888916015625, :x2 380.01820373535156, :y2 929.6591796875, :width 839.9999999999999, :height 1092} {:x1 126.2471923828125, :y1 930.9571533203125, :x2 189.6825714111328, :y2 950.12744140625, :width 839.9999999999999, :height 1092} {:x1 108.11814880371094, :y1 951.4254150390625, :x2 316.59165954589844, :y2 970.595703125, :width 839.9999999999999, :height 1092}), :page 298}, :content {:text "list.runningReduce { sum, n ->sum + n} eq\"[11, 24, 41, 60]\""}, :properties {:color "green"}} {:id #uuid "62beee11-5216-4ca6-9f99-12838671d711", :page 299, :position {:bounding {:x1 89.98910522460938, :y1 121.78265380859375, :x2 753.2364654541016, :y2 173.23150634765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 224.1240692138672, :y1 121.78265380859375, :x2 753.2364654541016, :y2 149.1688232421875, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 125.07757568359375, :x2 753.2364654541016, :y2 146.0736083984375, :width 839.9999999999999, :height 1092} {:x1 244.53529357910156, :y1 145.84539794921875, :x2 394.83238220214844, :y2 173.23150634765625, :width 839.9999999999999, :height 1092} {:x1 434.62635803222656, :y1 145.84539794921875, :x2 481.5399932861328, :y2 173.23150634765625, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 149.154541015625, :x2 429.64527893066406, :y2 170.15057373046875, :width 839.9999999999999, :height 1092}), :page 299}, :content {:text "runningFold()first stores the initial value (7), then stores each intermediate result.runningReduce()keeps track of eachsumvalue."}, :properties {:color "green"}} {:id #uuid "62beee48-09eb-4116-991f-4c741984c831", :page 300, :position {:bounding {:x1 89.98910522460938, :y1 183.8721923828125, :x2 294.70201110839844, :y2 241.383056640625, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98910522460938, :y1 183.8721923828125, :x2 294.70201110839844, :y2 241.383056640625, :width 839.9999999999999, :height 1092}), :page 300}, :content {:text "Recursion"}, :properties {:color "yellow"}} {:id #uuid "62beeecd-e789-4c1c-8fb7-f85065021c70", :page 300, :position {:bounding {:x1 116.21987915039062, :y1 449.6887512207031, :x2 473.1325225830078, :y2 503.4910583496094, :width 839.9999999999999, :height 1092}, :rects ({:x1 116.21987915039062, :y1 449.6887512207031, :x2 123.28036499023438, :y2 477.0748596191406, :width 839.9999999999999, :height 1092} {:x1 256.13160705566406, :y1 449.6887512207031, :x2 268.7525177001953, :y2 477.0748596191406, :width 839.9999999999999, :height 1092} {:x1 131.5104522705078, :y1 452.9978942871094, :x2 284.6873321533203, :y2 473.9939270019531, :width 839.9999999999999, :height 1092} {:x1 116.21987915039062, :y1 476.1049499511719, :x2 123.28036499023438, :y2 503.4910583496094, :width 839.9999999999999, :height 1092} {:x1 256.13160705566406, :y1 476.1049499511719, :x2 268.7525177001953, :y2 503.4910583496094, :width 839.9999999999999, :height 1092} {:x1 116.21987915039062, :y1 480.6692810058594, :x2 473.1325225830078, :y2 499.8395690917969, :width 839.9999999999999, :height 1092}), :page 300}, :content {:text "•factorial(1)is1•factorial(n)isn * factorial(n - 1)"}, :properties {:color "green"}} {:id #uuid "62beeede-5588-4b03-b562-71ac6026b909", :page 300, :position {:bounding {:x1 89.98910522460938, :y1 515.4725036621094, :x2 750.2905426025391, :y2 566.9355773925781, :width 839.9999999999999, :height 1092}, :rects ({:x1 204.88246154785156, :y1 515.4725036621094, :x2 750.2905426025391, :y2 542.8586120605469, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 518.7816467285156, :x2 750.2905426025391, :y2 539.7776794433594, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 539.5494689941406, :x2 289.67457580566406, :y2 566.9355773925781, :width 839.9999999999999, :height 1092}), :page 300}, :content {:text "factorial()is recursive because it uses the result from the same function appliedto its modified argument."}, :properties {:color "green"}} {:id #uuid "62beef4b-1746-43c6-ae56-0e75865ec929", :page 300, :position {:bounding {:x1 108.11814880371094, :y1 707.4321594238281, :x2 353.76600646972656, :y2 726.6024475097656, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 707.4321594238281, :x2 353.76600646972656, :y2 726.6024475097656, :width 839.9999999999999, :height 1092}), :page 300}, :content {:text "returnn * factorial(n -1)"}, :properties {:color "green"}} {:id #uuid "62beef91-baea-4fc4-b8f8-c78b45255a9d", :page 300, :position {:bounding {:x1 89.26165771484375, :y1 869.637866973877, :x2 750.5678863525391, :y2 945.1779670715332, :width 839.9999999999999, :height 1092}, :rects ({:x1 417.0699920654297, :y1 869.637866973877, :x2 750.3172149658203, :y2 897.0240364074707, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 893.7148323059082, :x2 750.5678863525391, :y2 921.101001739502, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 898.279224395752, :x2 750.5678863525391, :y2 917.4495124816895, :width 839.9999999999999, :height 1092} {:x1 89.26165771484375, :y1 917.7918586730957, :x2 600.2411041259766, :y2 945.1779670715332, :width 839.9999999999999, :height 1092} {:x1 89.26165771484375, :y1 922.3561897277832, :x2 595.4701690673828, :y2 941.5264778137207, :width 839.9999999999999, :height 1092}), :page 300}, :content {:text "When calling a function, the informationabout that function and its arguments are stored in acall stack. You see the call stackwhen an exception is thrown and Kotlin displays thestack trace:"}, :properties {:color "blue"}} {:id #uuid "62beefab-5307-4c84-8442-bb3f7e2a805a", :page 301, :position {:bounding {:x1 89.43281555175781, :y1 536.8536376953125, :x2 750.3332061767578, :y2 588.3167724609375, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.43281555175781, :y1 536.8536376953125, :x2 750.3332061767578, :y2 564.2398071289062, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 560.9306030273438, :x2 146.65203857421875, :y2 588.3167724609375, :width 839.9999999999999, :height 1092}), :page 301}, :content {:text "The stack trace displays the state of the call stack at the moment the exception isthrown"}, :properties {:color "blue"}} {:id #uuid "62beefba-c3df-4116-8d03-98195eae9f9d", :page 301, :position {:bounding {:x1 267, :y1 594.125, :x2 590, :y2 773.125, :width 839.9999999999999, :height 1092}, :rects (), :page 301}, :content {:text "[:span]", :image 1656680376651}, :properties {:color "blue"}} {:id #uuid "62bef01d-b51a-4771-89b0-e2e2e7a56925", :page 301, :position {:bounding {:x1 89.07623291015625, :y1 862.1780242919922, :x2 750.4552764892578, :y2 937.7180633544922, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.07623291015625, :y1 862.1780242919922, :x2 750.3004150390625, :y2 889.5641326904297, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 886.2550506591797, :x2 372.8578186035156, :y2 913.6411590576172, :width 839.9999999999999, :height 1092} {:x1 557.3076934814453, :y1 886.2550506591797, :x2 750.4552764892578, :y2 913.6411590576172, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 890.8193817138672, :x2 750.4552764892578, :y2 909.9896697998047, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 910.3319549560547, :x2 601.2705383300781, :y2 937.7180633544922, :width 839.9999999999999, :height 1092}), :page 301}, :content {:text "When you call a recursive function, each recursive invocation adds a frame to thecall stack. This can easily produce aStackOverflowError, which means that yourcall stack became too large and exhausted the available memory."}, :properties {:color "blue"}} {:id #uuid "62bef028-784a-4086-893c-28a32c6e6d69", :page 301, :position {:bounding {:x1 362.24742126464844, :y1 968.7842102050781, :x2 507.51344299316406, :y2 996.1703186035156, :width 839.9999999999999, :height 1092}, :rects ({:x1 362.24742126464844, :y1 968.7842102050781, :x2 507.51344299316406, :y2 996.1703186035156, :width 839.9999999999999, :height 1092} {:x1 367.0739288330078, :y1 973.3485412597656, :x2 503.07777404785156, :y2 992.5188293457031, :width 839.9999999999999, :height 1092}), :page 301}, :content {:text "infinite recursion:"}, :properties {:color "blue"}} {:id #uuid "62bef180-6bae-4659-9acf-1bd4ce17588a", :page 303, :position {:bounding {:x1 89.43281555175781, :y1 442.8707580566406, :x2 753.3788146972656, :y2 494.3195495605469, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.43281555175781, :y1 442.8707580566406, :x2 750.4221954345703, :y2 470.2568664550781, :width 839.9999999999999, :height 1092} {:x1 603.5645294189453, :y1 447.4350891113281, :x2 750.4221954345703, :y2 466.6053771972656, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 466.9334411621094, :x2 753.3788146972656, :y2 494.3195495605469, :width 839.9999999999999, :height 1092}), :page 303}, :content {:text "This recursion quickly becomes expensive. If you uncomment line[1], you’ll discoverthat it takes far too long to complete, and all those recursive calls overflow the stack."}, :properties {:color "blue"}} {:id #uuid "62bef19a-1042-436c-94c7-9e9bc19948d4", :page 304, :position {:bounding {:x1 116.21987915039062, :y1 778.5504684448242, :x2 667.5432281494141, :y2 869.423942565918, :width 839.9999999999999, :height 1092}, :rects ({:x1 273.73460388183594, :y1 778.5504684448242, :x2 667.5432281494141, :y2 805.936637878418, :width 839.9999999999999, :height 1092} {:x1 116.21987915039062, :y1 815.8640670776367, :x2 637.2047271728516, :y2 843.2502365112305, :width 839.9999999999999, :height 1092} {:x1 116.21987915039062, :y1 820.4284591674805, :x2 637.2047271728516, :y2 839.598747253418, :width 839.9999999999999, :height 1092} {:x1 116.21987915039062, :y1 842.0378341674805, :x2 365.9803924560547, :y2 869.423942565918, :width 839.9999999999999, :height 1092} {:x1 116.21987915039062, :y1 846.602165222168, :x2 123.28036499023438, :y2 865.7724533081055, :width 839.9999999999999, :height 1092}), :page 304}, :content {:text " Kotlin produces the following warning messages:•A function is marked as tail-recursive but no tail calls are found•Recursive call is not a tail call"}, :properties {:color "red"}} {:id #uuid "62bef22d-62fc-449b-aaaf-94990c24f48a", :page 305, :position {:bounding {:x1 89.98910522460938, :y1 537.8093299865723, :x2 750.3220520019531, :y2 613.3493690490723, :width 839.9999999999999, :height 1092}, :rects ({:x1 565.0818023681641, :y1 537.8093299865723, :x2 600.9328155517578, :y2 565.1954383850098, :width 839.9999999999999, :height 1092} {:x1 680.7306671142578, :y1 537.8093299865723, :x2 750.0365142822266, :y2 565.1954383850098, :width 839.9999999999999, :height 1092} {:x1 605.8324737548828, :y1 541.1184730529785, :x2 750.0365142822266, :y2 562.1145057678223, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 561.8862953186035, :x2 750.3220520019531, :y2 589.272403717041, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 566.450626373291, :x2 750.3220520019531, :y2 585.6209144592285, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 585.9632606506348, :x2 194.29942321777344, :y2 613.3493690490723, :width 839.9999999999999, :height 1092}), :page 305}, :content {:text " Thetailreckeywordis now successful, because the code was rewritten to delegate all activities to therecursive call"}, :properties {:color "blue"}} {:id #uuid "62bef3a2-f660-41af-86fc-cee32308b4c4", :page 380, :position {:bounding {:x1 89.98910522460938, :y1 183.87216186523438, :x2 385.9395446777344, :y2 241.38302612304688, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98910522460938, :y1 183.87216186523438, :x2 385.9395446777344, :y2 241.38302612304688, :width 839.9999999999999, :height 1092}), :page 380}, :content {:text "Sealed Classes"}, :properties {:color "yellow"}} {:id #uuid "62bef411-598f-49e1-9241-79b5232b65e3", :page 322, :position {:bounding {:x1 89.43281555175781, :y1 623.562141418457, :x2 751.0527496337891, :y2 675.0252151489258, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.43281555175781, :y1 623.562141418457, :x2 751.0527496337891, :y2 650.9482498168945, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 647.6391067504883, :x2 127.01271057128906, :y2 675.0252151489258, :width 839.9999999999999, :height 1092} {:x1 206.7367401123047, :y1 647.6391067504883, :x2 378.4955291748047, :y2 675.0252151489258, :width 839.9999999999999, :height 1092} {:x1 423.2725372314453, :y1 647.6391067504883, :x2 472.71144104003906, :y2 675.0252151489258, :width 839.9999999999999, :height 1092} {:x1 492.60792541503906, :y1 647.6391067504883, :x2 551.5726470947266, :y2 675.0252151489258, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 652.2034378051758, :x2 488.6283721923828, :y2 673.1994705200195, :width 839.9999999999999, :height 1092}), :page 322}, :content {:text "The syntax for inheritance is similar to implementing an interface. To inherit a newclassDerivedfrom an existing classBase, use a:(colon):"}, :properties {:color "red"}} {:id #uuid "62bef477-65ab-47ea-8f03-07215d26ccd4", :page 555, :position {:bounding {:x1 89.98910522460938, :y1 631.5354995727539, :x2 749.9999542236328, :y2 682.9986038208008, :width 839.9999999999999, :height 1092}, :rects ({:x1 264.2265167236328, :y1 631.5354995727539, :x2 617.1170196533203, :y2 658.9216384887695, :width 839.9999999999999, :height 1092} {:x1 693.3539581298828, :y1 631.5354995727539, :x2 749.9999542236328, :y2 658.9216384887695, :width 839.9999999999999, :height 1092} {:x1 620.2101593017578, :y1 634.8446426391602, :x2 749.9999542236328, :y2 655.840705871582, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 655.612434387207, :x2 239.8662872314453, :y2 682.9986038208008, :width 839.9999999999999, :height 1092}), :page 555}, :content {:text " This library requires subclass initialization insetUp()insteadof in a constructor:"}, :properties {:color "yellow"}} {:id #uuid "62bef4c7-7eb6-4b8a-8afb-bec86ac24f3f", :page 556, :position {:bounding {:x1 89.98910522460938, :y1 219.90203857421875, :x2 750.2017974853516, :y2 295.44207763671875, :width 839.9999999999999, :height 1092}, :rects ({:x1 503.5635528564453, :y1 219.90203857421875, :x2 750.0935821533203, :y2 247.28814697265625, :width 839.9999999999999, :height 1092} {:x1 147.32879638671875, :y1 243.97900390625, :x2 180.07713317871094, :y2 271.3651123046875, :width 839.9999999999999, :height 1092} {:x1 247.3737335205078, :y1 243.97900390625, :x2 750.2017974853516, :y2 271.3651123046875, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 247.28814697265625, :x2 750.2017974853516, :y2 268.2841796875, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 268.05596923828125, :x2 190.6127471923828, :y2 295.44207763671875, :width 839.9999999999999, :height 1092}), :page 556}, :content {:text " However, we can’t just defineitemsas aString—if we do that, we must provide a non-null initializer in theconstructor. "}, :properties {:color "yellow"}} {:id #uuid "62bef4ca-709b-463b-804f-c21f087fb889", :page 555, :position {:bounding {:x1 108.11814880371094, :y1 803.02685546875, :x2 407.2385711669922, :y2 883.5877075195312, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 803.02685546875, :x2 407.2385711669922, :y2 822.1971435546875, :width 839.9999999999999, :height 1092} {:x1 108.11814880371094, :y1 823.4808654785156, :x2 307.5193634033203, :y2 842.6511535644531, :width 839.9999999999999, :height 1092} {:x1 126.2471923828125, :y1 843.9491271972656, :x2 407.2244415283203, :y2 863.1194152832031, :width 839.9999999999999, :height 1092} {:x1 108.11814880371094, :y1 864.4174194335938, :x2 118.08840942382812, :y2 883.5877075195312, :width 839.9999999999999, :height 1092}), :page 555}, :content {:text "privatevaritems: String? =nulloverridefunsetUp() {items =\"socks, jacket, laptop\"}"}, :properties {:color "yellow"}} {:id #uuid "62bef4d9-77c1-4360-9b4a-f0373778a7b4", :page 556, :position {:bounding {:x1 89.98910522460938, :y1 268.05596923828125, :x2 750.0933380126953, :y2 343.5960693359375, :width 839.9999999999999, :height 1092}, :rects ({:x1 190.59861755371094, :y1 268.05596923828125, :x2 481.7182159423828, :y2 295.44207763671875, :width 839.9999999999999, :height 1092} {:x1 552.8288726806641, :y1 268.05596923828125, :x2 750.0871124267578, :y2 295.44207763671875, :width 839.9999999999999, :height 1092} {:x1 487.27333068847656, :y1 271.3651123046875, :x2 750.0871124267578, :y2 292.36114501953125, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 292.1329345703125, :x2 526.4087219238281, :y2 319.51904296875, :width 839.9999999999999, :height 1092} {:x1 579.0596466064453, :y1 292.1329345703125, :x2 750.0933380126953, :y2 319.51904296875, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 296.69732666015625, :x2 750.0933380126953, :y2 315.86761474609375, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 316.20989990234375, :x2 173.15940856933594, :y2 343.5960693359375, :width 839.9999999999999, :height 1092}), :page 556}, :content {:text "Using a stub value such as an emptyStringis a bad practice becauseyou never know whether it’s actually been initialized.nullindicates that it’s notinitialized."}, :properties {:color "blue"}} {:id #uuid "62bef4e7-fa02-4a70-b780-e780fffe83c4", :page 556, :position {:bounding {:x1 89.98910522460938, :y1 349.5439758300781, :x2 750.3949127197266, :y2 401.0070495605469, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98910522460938, :y1 349.5439758300781, :x2 159.62547302246094, :y2 376.9300842285156, :width 839.9999999999999, :height 1092} {:x1 218.2332000732422, :y1 349.5439758300781, :x2 315.7306671142578, :y2 376.9300842285156, :width 839.9999999999999, :height 1092} {:x1 394.26036071777344, :y1 349.5439758300781, :x2 592.9165191650391, :y2 376.9300842285156, :width 839.9999999999999, :height 1092} {:x1 641.4772491455078, :y1 349.5439758300781, :x2 750.3949127197266, :y2 376.9300842285156, :width 839.9999999999999, :height 1092} {:x1 163.9886932373047, :y1 352.8531188964844, :x2 750.3949127197266, :y2 373.8491516113281, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 373.6209411621094, :x2 213.3492889404297, :y2 401.0070495605469, :width 839.9999999999999, :height 1092} {:x1 339.5166473388672, :y1 373.6209411621094, :x2 343.98500061035156, :y2 401.0070495605469, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 378.1852722167969, :x2 339.53538513183594, :y2 397.3555603027344, :width 839.9999999999999, :height 1092}), :page 556}, :content {:text "Definingitemsas a nullableString?means we must check fornullin all memberfunctions, as incheckSocks()."}, :properties {:color "blue"}} {:id #uuid "62bef4f6-3dcb-42b9-a2ab-090281f97246", :page 556, :position {:bounding {:x1 108.11814880371094, :y1 595.2060956954956, :x2 343.77760314941406, :y2 614.3763837814331, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 595.2060956954956, :x2 343.77760314941406, :y2 614.3763837814331, :width 839.9999999999999, :height 1092}), :page 556}, :content {:text "lateinitvaritems: String"}, :properties {:color "green"}} {:id #uuid "62bef4fa-b0a4-493d-85c1-0ae42fa58b7f", :page 556, :position {:bounding {:x1 89.98910522460938, :y1 852.4217329025269, :x2 750.0029449462891, :y2 903.8848066329956, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.98910522460938, :y1 852.4217329025269, :x2 284.4015350341797, :y2 879.8078413009644, :width 839.9999999999999, :height 1092} {:x1 418.46571350097656, :y1 852.4217329025269, :x2 543.3307037353516, :y2 879.8078413009644, :width 839.9999999999999, :height 1092} {:x1 659.4065704345703, :y1 852.4217329025269, :x2 663.7712554931641, :y2 879.8078413009644, :width 839.9999999999999, :height 1092} {:x1 292.3754119873047, :y1 855.7308759689331, :x2 750.0029449462891, :y2 876.7269086837769, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 876.4986982345581, :x2 140.86639404296875, :y2 903.8848066329956, :width 839.9999999999999, :height 1092} {:x1 200.67469787597656, :y1 876.4986982345581, :x2 545.5007476806641, :y2 903.8848066329956, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 881.0630292892456, :x2 195.69239807128906, :y2 900.2333173751831, :width 839.9999999999999, :height 1092}), :page 556}, :content {:text "Compare this version ofcheckSocks()with the one inSuitcase.kt.lateinitmeansitemsis safely defined as a non-nullable property."}, :properties {:color "green"}} {:id #uuid "62bef52a-24db-4e04-8ec4-ad087a974633", :page 556, :position {:bounding {:x1 89.98910522460938, :y1 909.8327436447144, :x2 752.4387969970703, :y2 961.2958173751831, :width 839.9999999999999, :height 1092}, :rects ({:x1 174.87184143066406, :y1 909.8327436447144, :x2 752.4387969970703, :y2 937.2188520431519, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 913.1418867111206, :x2 752.4387969970703, :y2 934.1379194259644, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 933.9097089767456, :x2 149.07302856445312, :y2 961.2958173751831, :width 839.9999999999999, :height 1092} {:x1 183.95774841308594, :y1 933.9097089767456, :x2 188.32240295410156, :y2 961.2958173751831, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 938.4740400314331, :x2 183.9546661376953, :y2 957.6443281173706, :width 839.9999999999999, :height 1092}), :page 556}, :content {:text "lateinitcan be used on a property inside the body of a class, a top-level property,or localvar."}, :properties {:color "green"}} {:id #uuid "62bef5c5-e4e5-4577-a14c-4bf59139ff93", :page 557, :position {:bounding {:x1 89.98910522460938, :y1 894.9415130615234, :x2 750.1092681884766, :y2 946.4046478271484, :width 839.9999999999999, :height 1092}, :rects ({:x1 235.83448791503906, :y1 894.9415130615234, :x2 420.45213317871094, :y2 922.3276824951172, :width 839.9999999999999, :height 1092} {:x1 512.6483306884766, :y1 894.9415130615234, :x2 750.1092681884766, :y2 922.3276824951172, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 898.2506561279297, :x2 750.1092681884766, :y2 919.2466888427734, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 919.0184783935547, :x2 605.4560852050781, :y2 946.4046478271484, :width 839.9999999999999, :height 1092} {:x1 635.1298980712891, :y1 919.0184783935547, :x2 706.3633575439453, :y2 946.4046478271484, :width 839.9999999999999, :height 1092} {:x1 89.98910522460938, :y1 923.5828704833984, :x2 630.1494293212891, :y2 942.7531585693359, :width 839.9999999999999, :height 1092}), :page 557}, :content {:text ".isInitializedwill tell you whether alateinitproperty been initialized. Theproperty must be in your current scope, and is accessed using the::operator:"}, :properties {:color "red"}} {:id #uuid "62bef66b-78a9-4b03-8751-da1c8f94dc19", :page 558, :position {:bounding {:x1 108.11814880371094, :y1 228.731201171875, :x2 443.4969024658203, :y2 268.3697814941406, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.11814880371094, :y1 228.731201171875, :x2 307.53416442871094, :y2 247.9014892578125, :width 839.9999999999999, :height 1092} {:x1 108.11814880371094, :y1 249.19949340820312, :x2 443.4969024658203, :y2 268.3697814941406, :width 839.9999999999999, :height 1092}), :page 558}, :content {:text "lateinitvarx: Stringfunstatus() =\"${::x.isInitialized}\""}, :properties {:color "yellow"}} {:id #uuid "62c24ae1-df4d-43c4-9e49-0e224addb3bc", :page 309, :position {:bounding {:x1 90, :y1 338.4895782470703, :x2 573.4088745117188, :y2 365.9895782470703, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 338.4895782470703, :x2 573.4088745117188, :y2 365.9895782470703, :width 839.9999999999999, :height 1092} {:x1 182.31768798828125, :y1 342.65625, :x2 459.86773681640625, :y2 361.8229064941406, :width 839.9999999999999, :height 1092}), :page 309}, :content {:text "It describeswhata class should do, but nothowit should do it"}, :properties {:color "yellow"}} {:id #uuid "62c254d7-0e86-4c88-83c7-9cdd50281fb4", :page 309, :position {:bounding {:x1 90, :y1 609.34375, :x2 753.7344970703125, :y2 685.5, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 609.34375, :x2 750.6831665039062, :y2 637.34375, :width 839.9999999999999, :height 1092} {:x1 90, :y1 633.421875, :x2 753.7344970703125, :y2 661.421875, :width 839.9999999999999, :height 1092} {:x1 90, :y1 638.421875, :x2 753.7344970703125, :y2 657.421875, :width 839.9999999999999, :height 1092} {:x1 90, :y1 657.5, :x2 666.8587036132812, :y2 685.5, :width 839.9999999999999, :height 1092} {:x1 90, :y1 662.5, :x2 488.492431640625, :y2 681.5, :width 839.9999999999999, :height 1092}), :page 309}, :content {:text "Code using a particular interface only knows what functions can be called forthat interface. The interface establishes a “protocol” between classes. (Some object-oriented languages have a keyword calledprotocolto do the same thing.)"}, :properties {:color "yellow"}} {:id #uuid "62c254e2-d3ec-4953-a3be-79e29fab89b6", :page 310, :position {:bounding {:x1 90, :y1 813.078125, :x2 753.4466552734375, :y2 865.15625, :width 839.9999999999999, :height 1092}, :rects ({:x1 175.078125, :y1 813.078125, :x2 238.4300537109375, :y2 841.078125, :width 839.9999999999999, :height 1092} {:x1 329.078125, :y1 813.078125, :x2 358.52154541015625, :y2 841.078125, :width 839.9999999999999, :height 1092} {:x1 538.640625, :y1 813.078125, :x2 753.4466552734375, :y2 841.078125, :width 839.9999999999999, :height 1092} {:x1 90, :y1 816.640625, :x2 753.4466552734375, :y2 837.640625, :width 839.9999999999999, :height 1092} {:x1 90, :y1 837.15625, :x2 147.72674560546875, :y2 865.15625, :width 839.9999999999999, :height 1092}), :page 310}, :content {:text "Computerdeclaresprompt()andcalculateAnswer()but provides no implemen-tations."}, :properties {:color "blue"}} {:id #uuid "62c254f6-0858-4a34-a976-ae1ce82cab10", :page 311, :position {:bounding {:x1 89.296875, :y1 121.34375, :x2 753.6922607421875, :y2 173.421875, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.296875, :y1 121.34375, :x2 753.6922607421875, :y2 149.34375, :width 839.9999999999999, :height 1092} {:x1 90, :y1 145.421875, :x2 270.7811584472656, :y2 173.421875, :width 839.9999999999999, :height 1092}), :page 311}, :content {:text "An interface can declare properties. These must be overridden in all classes imple-menting that interface:"}, :properties {:color "blue"}} {:id #uuid "62c25512-317d-4f7b-8608-7f1400e67d59", :page 311, :position {:bounding {:x1 89.296875, :y1 811.734375, :x2 465.234375, :y2 839.734375, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.296875, :y1 811.734375, :x2 366.24212646484375, :y2 839.734375, :width 839.9999999999999, :height 1092} {:x1 460.859375, :y1 811.734375, :x2 465.234375, :y2 839.734375, :width 839.9999999999999, :height 1092} {:x1 371.125, :y1 815.296875, :x2 460.8837890625, :y2 836.296875, :width 839.9999999999999, :height 1092}), :page 311}, :content {:text "An enumeration can implement aninterface:"}, :properties {:color "red"}} {:id #uuid "62c2554e-3bf0-43c2-a85e-c4f3b0955c84", :page 312, :position {:bounding {:x1 90, :y1 879.71875, :x2 335.1900634765625, :y2 919.71875, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 879.71875, :x2 335.1900634765625, :y2 919.71875, :width 839.9999999999999, :height 1092}), :page 312}, :content {:text "SAM Conversions"}, :properties {:color "yellow"}} {:id #uuid "62c2558c-b264-4626-9c46-215a4331e734", :page 312, :position {:bounding {:x1 89.4375, :y1 942.734375, :x2 750.2008666992188, :y2 994.8125, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.4375, :y1 942.734375, :x2 750.2008666992188, :y2 970.734375, :width 839.9999999999999, :height 1092} {:x1 128.40625, :y1 947.734375, :x2 750.2008666992188, :y2 966.734375, :width 839.9999999999999, :height 1092} {:x1 90, :y1 966.8125, :x2 319.0427551269531, :y2 994.8125, :width 839.9999999999999, :height 1092}), :page 312}, :content {:text "TheSingle Abstract Method(SAM) interface comes from Java, where they callmember functions “methods.”"}, :properties {:color "yellow"}} {:id #uuid "62c255f1-1c28-4811-ac3f-c121bb5cfa47", :page 313, :position {:bounding {:x1 228.79510498046875, :y1 121.34375, :x2 708.7462768554688, :y2 149.34375, :width 839.9999999999999, :height 1092}, :rects ({:x1 228.79510498046875, :y1 121.34375, :x2 708.7462768554688, :y2 149.34375, :width 839.9999999999999, :height 1092}), :page 313}, :content {:text "Here we show SAM interfaces with different parameter lists:"}, :properties {:color "yellow"}} {:id #uuid "62c25602-c73e-40f5-b248-af717b508ec6", :page 313, :position {:bounding {:x1 89.078125, :y1 469.5625, :x2 750.557373046875, :y2 521.640625, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.078125, :y1 469.5625, :x2 203.26373291015625, :y2 497.5625, :width 839.9999999999999, :height 1092} {:x1 337.953125, :y1 469.5625, :x2 750.557373046875, :y2 497.5625, :width 839.9999999999999, :height 1092} {:x1 208.34375, :y1 473.140625, :x2 750.557373046875, :y2 494.140625, :width 839.9999999999999, :height 1092} {:x1 90, :y1 493.640625, :x2 160.91619873046875, :y2 521.640625, :width 839.9999999999999, :height 1092}), :page 313}, :content {:text "When you sayfun interface, the compiler ensures there is only a single memberfunction."}, :properties {:color "yellow"}} {:id #uuid "62c2565e-7d0a-43c4-8791-80577447fee6", :page 313, :position {:bounding {:x1 89.40625, :y1 527.859375, :x2 750.267822265625, :y2 579.9375, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.40625, :y1 527.859375, :x2 750.267822265625, :y2 555.859375, :width 839.9999999999999, :height 1092} {:x1 90, :y1 551.9375, :x2 472.89984130859375, :y2 579.9375, :width 839.9999999999999, :height 1092} {:x1 90, :y1 556.9375, :x2 468.5914306640625, :y2 575.9375, :width 839.9999999999999, :height 1092}), :page 313}, :content {:text "You can implement a SAM interface in the ordinary verbose way, or by passing ita lambda; the latter is called aSAM conversion."}, :properties {:color "green"}} {:id #uuid "62c25668-804d-4b07-a0c7-686f5948bfe6", :page 313, :position {:bounding {:x1 90, :y1 551.9375, :x2 751.0889282226562, :y2 628.09375, :width 839.9999999999999, :height 1092}, :rects ({:x1 477.8634033203125, :y1 551.9375, :x2 750.1068115234375, :y2 579.9375, :width 839.9999999999999, :height 1092} {:x1 90, :y1 576.015625, :x2 751.0889282226562, :y2 604.015625, :width 839.9999999999999, :height 1092} {:x1 90, :y1 581.015625, :x2 751.0889282226562, :y2 600.015625, :width 839.9999999999999, :height 1092} {:x1 90, :y1 600.09375, :x2 443.612548828125, :y2 628.09375, :width 839.9999999999999, :height 1092}), :page 313}, :content {:text "In a SAM conversion, the lambdabecomes the implementation for the single method in the interface. Here we showboth ways to implement the three interfaces:"}, :properties {:color "green"}} {:id #uuid "62c2568c-f483-4bf3-afc9-ca1a21c44e0c", :page 313, :position {:bounding {:x1 90, :y1 726.125, :x2 371.019287109375, :y2 827.984375, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 726.125, :x2 352.86566162109375, :y2 746.125, :width 839.9999999999999, :height 1092} {:x1 108.125, :y1 746.59375, :x2 299.375, :y2 766.59375, :width 839.9999999999999, :height 1092} {:x1 90, :y1 767.0625, :x2 99.96875, :y2 787.0625, :width 839.9999999999999, :height 1092} {:x1 90, :y1 807.984375, :x2 371.019287109375, :y2 827.984375, :width 839.9999999999999, :height 1092}), :page 313}, :content {:text "classVerboseZero: ZeroArg {overridefunf() =11}valverboseZero = VerboseZero()"}, :properties {:color "red"}} {:id #uuid "62c25695-75a5-4655-bb5a-22fe061fc5bb", :page 313, :position {:bounding {:x1 90, :y1 848.921875, :x2 344.703125, :y2 868.921875, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 848.921875, :x2 344.703125, :y2 868.921875, :width 839.9999999999999, :height 1092}), :page 313}, :content {:text "valsamZero = ZeroArg {11}"}, :properties {:color "purple"}} {:id #uuid "62c256a1-cac6-4da6-aa24-fdbccc1c56fb", :page 313, :position {:bounding {:x1 90, :y1 971.703125, :x2 352.88861083984375, :y2 991.703125, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 971.703125, :x2 352.88861083984375, :y2 991.703125, :width 839.9999999999999, :height 1092}), :page 313}, :content {:text "valverboseOne = VerboseOne()"}, :properties {:color "red"}} {:id #uuid "62c256a5-fa0a-4618-8ae1-c7249225c8cd", :page 314, :position {:bounding {:x1 90, :y1 146.703125, :x2 371.890625, :y2 166.703125, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 146.703125, :x2 371.890625, :y2 166.703125, :width 839.9999999999999, :height 1092}), :page 314}, :content {:text "valsamOne = OneArg { it +47}"}, :properties {:color "purple"}} {:id #uuid "62c257c3-3845-41e5-afaf-2a5fdcbdddce", :page 314, :position {:bounding {:x1 89.40625, :y1 616.03125, :x2 750.3314819335938, :y2 668.09375, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.40625, :y1 616.03125, :x2 750.3314819335938, :y2 644.03125, :width 839.9999999999999, :height 1092} {:x1 90, :y1 640.09375, :x2 202.84808349609375, :y2 668.09375, :width 839.9999999999999, :height 1092}), :page 314}, :content {:text "You can pass a lambda where a SAM interface is expected, without first wrapping itinto an object:"}, :properties {:color "green"}} {:id #uuid "62c257d0-be79-485a-995a-9741f628862c", :page 314, :position {:bounding {:x1 108.125, :y1 971.703125, :x2 370.9833984375, :y2 991.703125, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.125, :y1 971.703125, :x2 370.9833984375, :y2 991.703125, :width 839.9999999999999, :height 1092}), :page 314}, :content {:text "delayAction { trace(\"Hey!\") }"}, :properties {:color "blue"}} {:id #uuid "62c2582e-c255-4c83-98de-e7bef1fd40e5", :page 315, :position {:bounding {:x1 90, :y1 185.859375, :x2 750.0110473632812, :y2 237.9375, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 185.859375, :x2 106.26553344726562, :y2 213.859375, :width 839.9999999999999, :height 1092} {:x1 183.359375, :y1 185.859375, :x2 681.760986328125, :y2 213.859375, :width 839.9999999999999, :height 1092} {:x1 114.890625, :y1 189.4375, :x2 750.0110473632812, :y2 210.4375, :width 839.9999999999999, :height 1092} {:x1 179.734375, :y1 209.9375, :x2 435.52490234375, :y2 237.9375, :width 839.9999999999999, :height 1092} {:x1 505.15625, :y1 209.9375, :x2 697.95947265625, :y2 237.9375, :width 839.9999999999999, :height 1092} {:x1 90, :y1 213.515625, :x2 500.18292236328125, :y2 234.515625, :width 839.9999999999999, :height 1092}), :page 315}, :content {:text "Inmain()we pass a lambda instead of an object that implements theActioninterface. Kotlin automatically creates anActionobject from this lambda."}, :properties {:color "yellow"}} {:id #uuid "62c25838-6692-424d-b460-8220a646e147", :page 316, :position {:bounding {:x1 90, :y1 183.09375, :x2 547.76513671875, :y2 241.09375, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 183.09375, :x2 547.76513671875, :y2 241.09375, :width 839.9999999999999, :height 1092}), :page 316}, :content {:text "Complex Constructors"}, :properties {:color "yellow"}} {:id #uuid "62c25a89-80a8-480c-9f72-4138551a2423", :page 316, :position {:bounding {:x1 90, :y1 630.421875, :x2 750.3097534179688, :y2 706.578125, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 630.421875, :x2 750.3097534179688, :y2 658.421875, :width 839.9999999999999, :height 1092} {:x1 90, :y1 654.5, :x2 644.7694091796875, :y2 682.5, :width 839.9999999999999, :height 1092} {:x1 694.421875, :y1 654.5, :x2 750.0183715820312, :y2 682.5, :width 839.9999999999999, :height 1092} {:x1 90, :y1 659.5, :x2 750.0183715820312, :y2 678.5, :width 839.9999999999999, :height 1092} {:x1 90, :y1 678.578125, :x2 361.2332763671875, :y2 706.578125, :width 839.9999999999999, :height 1092}), :page 316}, :content {:text "In these cases, we don’t write constructor code—Kotlin does it for us. For morecustomization, add constructor code in the class body. Code inside theinitsectionis executed during object creation:"}, :properties {:color "blue"}} {:id #uuid "62c25a8f-701b-4bd3-8832-e12f6aa410bc", :page 316, :position {:bounding {:x1 108.125, :y1 887.640625, :x2 380.06463623046875, :y2 969.03125, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.125, :y1 887.640625, :x2 162.51473999023438, :y2 907.640625, :width 839.9999999999999, :height 1092} {:x1 126.25, :y1 908.109375, :x2 244.984375, :y2 928.109375, :width 839.9999999999999, :height 1092} {:x1 126.25, :y1 928.578125, :x2 380.06463623046875, :y2 948.578125, :width 839.9999999999999, :height 1092} {:x1 108.125, :y1 949.03125, :x2 118.09375, :y2 969.03125, :width 839.9999999999999, :height 1092}), :page 316}, :content {:text "init {counter +=10content =\"[$counter] $text\"}"}, :properties {:color "blue"}} {:id #uuid "62c25ae4-c599-48eb-9c1b-3722ab73ee5d", :page 316, :position {:bounding {:x1 90, :y1 488.9375, :x2 352.8699951171875, :y2 508.9375, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 488.9375, :x2 352.8699951171875, :y2 508.9375, :width 839.9999999999999, :height 1092}), :page 316}, :content {:text "classAlien(valname: String)"}, :properties {:color "green"}} {:id #uuid "62c25ae7-de54-4eab-9b91-42a85f9e4f45", :page 316, :position {:bounding {:x1 90, :y1 846.703125, :x2 352.8714599609375, :y2 866.703125, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 846.703125, :x2 352.8714599609375, :y2 866.703125, :width 839.9999999999999, :height 1092}), :page 316}, :content {:text "classMessage(text: String) {"}, :properties {:color "green"}} {:id #uuid "62c25af6-8c05-427d-b87d-43da6bb8a7a1", :page 317, :position {:bounding {:x1 90, :y1 308.65625, :x2 750.1157836914062, :y2 360.734375, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 308.65625, :x2 482.152099609375, :y2 336.65625, :width 839.9999999999999, :height 1092} {:x1 536.234375, :y1 308.65625, :x2 750.1157836914062, :y2 336.65625, :width 839.9999999999999, :height 1092} {:x1 489.140625, :y1 312.21875, :x2 750.1157836914062, :y2 333.21875, :width 839.9999999999999, :height 1092} {:x1 90, :y1 332.734375, :x2 302.6455993652344, :y2 360.734375, :width 839.9999999999999, :height 1092} {:x1 342.40625, :y1 332.734375, :x2 359.1363525390625, :y2 360.734375, :width 839.9999999999999, :height 1092} {:x1 394.015625, :y1 332.734375, :x2 398.390625, :y2 360.734375, :width 839.9999999999999, :height 1092} {:x1 90, :y1 337.734375, :x2 394.0289306640625, :y2 358.734375, :width 839.9999999999999, :height 1092}), :page 317}, :content {:text "Constructor parameters are accessible inside theinitsection even if they aren’tmarked as properties usingvarorval."}, :properties {:color "blue"}} {:id #uuid "62c25b36-5424-49d9-88c6-d36505fc5301", :page 317, :position {:bounding {:x1 89.296875, :y1 367.109375, :x2 750.35107421875, :y2 443.265625, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.296875, :y1 367.109375, :x2 254.34915161132812, :y2 395.109375, :width 839.9999999999999, :height 1092} {:x1 291.390625, :y1 367.109375, :x2 295.765625, :y2 395.109375, :width 839.9999999999999, :height 1092} {:x1 380.03125, :y1 367.109375, :x2 750.1907958984375, :y2 395.109375, :width 839.9999999999999, :height 1092} {:x1 261.484375, :y1 370.6875, :x2 750.1907958984375, :y2 391.6875, :width 839.9999999999999, :height 1092} {:x1 90, :y1 391.1875, :x2 750.35107421875, :y2 419.1875, :width 839.9999999999999, :height 1092} {:x1 90, :y1 396.1875, :x2 750.35107421875, :y2 415.1875, :width 839.9999999999999, :height 1092} {:x1 90, :y1 415.265625, :x2 189.83184814453125, :y2 443.265625, :width 839.9999999999999, :height 1092}), :page 317}, :content {:text "Although defined asval,contentis not initialized at the point of definition. Inthis case, Kotlin ensures that initialization occurs at one (and only one) point duringconstruction"}, :properties {:color "blue"}} {:id #uuid "62c25b9a-f85a-4a86-bc04-bbd7cd13a24e", :page 317, :position {:bounding {:x1 90, :y1 415.265625, :x2 750.1630249023438, :y2 467.34375, :width 839.9999999999999, :height 1092}, :rects ({:x1 199.06350708007812, :y1 415.265625, :x2 344.837158203125, :y2 443.265625, :width 839.9999999999999, :height 1092} {:x1 428.21875, :y1 415.265625, :x2 750.1630249023438, :y2 443.265625, :width 839.9999999999999, :height 1092} {:x1 351.546875, :y1 418.84375, :x2 750.1630249023438, :y2 439.84375, :width 839.9999999999999, :height 1092} {:x1 90, :y1 439.34375, :x2 203.91461181640625, :y2 467.34375, :width 839.9999999999999, :height 1092}), :page 317}, :content {:text "Either reassigningcontentor forgetting to initialize it produces anerror message."}, :properties {:color "green"}} {:id #uuid "62c25bac-460f-42d3-871c-67b62342a228", :page 317, :position {:bounding {:x1 89.296875, :y1 518.078125, :x2 753.2533569335938, :y2 570.15625, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.296875, :y1 518.078125, :x2 750.38427734375, :y2 546.078125, :width 839.9999999999999, :height 1092} {:x1 90, :y1 542.15625, :x2 354.17626953125, :y2 570.15625, :width 839.9999999999999, :height 1092} {:x1 407.78125, :y1 542.15625, :x2 753.2533569335938, :y2 570.15625, :width 839.9999999999999, :height 1092} {:x1 90, :y1 547.15625, :x2 400.8709716796875, :y2 566.15625, :width 839.9999999999999, :height 1092}), :page 317}, :content {:text "A constructor is the combination of its constructor parameter list—initialized beforeentering the class body—and theinitsection(s), executed during object creation."}, :properties {:color "blue"}} {:id #uuid "62c25c20-b411-4de0-8d63-af1c50c9ce3f", :page 317, :position {:bounding {:x1 90, :y1 566.234375, :x2 387.14605712890625, :y2 594.234375, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 566.234375, :x2 267.32366943359375, :y2 594.234375, :width 839.9999999999999, :height 1092} {:x1 318.84375, :y1 566.234375, :x2 387.14605712890625, :y2 594.234375, :width 839.9999999999999, :height 1092} {:x1 273.09375, :y1 569.796875, :x2 312.9960021972656, :y2 590.796875, :width 839.9999999999999, :height 1092}), :page 317}, :content {:text "Kotlin allows multipleinitsections,"}, :properties {:color "yellow"}} {:id #uuid "62c25c3e-4c58-44bd-97d1-cb3c891184cf", :page 317, :position {:bounding {:x1 90, :y1 590.3125, :x2 750.0740966796875, :y2 642.375, :width 839.9999999999999, :height 1092}, :rects ({:x1 133.93942260742188, :y1 590.3125, :x2 520.51708984375, :y2 618.3125, :width 839.9999999999999, :height 1092} {:x1 574.5625, :y1 590.3125, :x2 750.0740966796875, :y2 618.3125, :width 839.9999999999999, :height 1092} {:x1 527.484375, :y1 593.875, :x2 750.0740966796875, :y2 614.875, :width 839.9999999999999, :height 1092} {:x1 90, :y1 614.375, :x2 634.2660522460938, :y2 642.375, :width 839.9999999999999, :height 1092} {:x1 683.828125, :y1 614.375, :x2 743.8051147460938, :y2 642.375, :width 839.9999999999999, :height 1092} {:x1 90, :y1 619.375, :x2 678.8554077148438, :y2 638.375, :width 839.9999999999999, :height 1092}), :page 317}, :content {:text "in a large and complex class, spreading out theinitsections may producemaintenance issues for programmers who are accustomed to a singleinitsection."}, :properties {:color "yellow"}} {:id #uuid "62c25c6b-113c-4863-9148-1c711e9bfd37", :page 318, :position {:bounding {:x1 89.99951171875, :y1 181.9990234375, :x2 582.7742309570312, :y2 239.9990234375, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99951171875, :y1 181.9990234375, :x2 582.7742309570312, :y2 239.9990234375, :width 839.9999999999999, :height 1092}), :page 318}, :content {:text "Secondary Constructors"}, :properties {:color "yellow"}} {:id #uuid "62c3ab42-4cc9-4f08-a2fb-286df4dad1bc", :page 318, :position {:bounding {:x1 276.7220973968506, :y1 260.5468546450138, :x2 550.1662197113037, :y2 288.0468546450138, :width 839.9999999999999, :height 1092}, :rects ({:x1 276.7220973968506, :y1 260.5468546450138, :x2 550.1662197113037, :y2 288.0468546450138, :width 839.9999999999999, :height 1092}), :page 318}, :content {:text "several ways to construct an object"}, :properties {:color "yellow"}} {:id #uuid "62c3ab49-bfd2-4291-9ae4-a8c02c260246", :page 318, :position {:bounding {:x1 131.51041221618652, :y1 284.6223856508732, :x2 708.9588832855225, :y2 336.19791665673256, :width 839.9999999999999, :height 1092}, :rects ({:x1 500.7329921722412, :y1 284.6223856508732, :x2 708.9588832855225, :y2 312.1223856508732, :width 839.9999999999999, :height 1092} {:x1 131.51041221618652, :y1 308.69791665673256, :x2 481.643102645874, :y2 336.19791665673256, :width 839.9999999999999, :height 1092}), :page 318}, :content {:text "Sometimes, however, youmust create multiple overloaded constructor"}, :properties {:color "yellow"}} {:id #uuid "62c3ab51-5524-4aa5-b3e9-a1a958d55a7f", :page 318, :position {:bounding {:x1 108.12499046325684, :y1 746.9270426332951, :x2 452.5688991546631, :y2 807.0312296450138, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.12499046325684, :y1 746.9270426332951, :x2 452.5688991546631, :y2 766.0937296450138, :width 839.9999999999999, :height 1092} {:x1 126.24999046325684, :y1 767.3957926332951, :x2 344.7005214691162, :y2 786.5624796450138, :width 839.9999999999999, :height 1092} {:x1 108.12499046325684, :y1 787.8645426332951, :x2 118.09895896911621, :y2 807.0312296450138, :width 839.9999999999999, :height 1092}), :page 318}, :content {:text "constructor(c: Char) :this(c -'A') {trace(\"Secondary: '$c'\")}"}, :properties {:color "blue"}} {:id #uuid "62c3ac16-7206-4b17-92b5-9931a43d0c2d", :page 318, :position {:bounding {:x1 89.44009971618652, :y1 360.4947814941406, :x2 346.3133907318115, :y2 387.9947509765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.44009971618652, :y1 360.4947814941406, :x2 346.3133907318115, :y2 387.9947509765625, :width 839.9999999999999, :height 1092}), :page 318}, :content {:text "The constructor is “overloaded"}, :properties {:color "blue"}} {:id #uuid "62c3ac1b-f5cb-4ff2-af81-7921cfddba9d", :page 318, :position {:bounding {:x1 89.99999809265137, :y1 384.5703125, :x2 750.54811668396, :y2 436.14581298828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 298.59264183044434, :y1 384.5703125, :x2 750.54811668396, :y2 412.0703125, :width 839.9999999999999, :height 1092} {:x1 671.4843349456787, :y1 388.7369384765625, :x2 750.54811668396, :y2 407.90362548828125, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 408.64581298828125, :x2 186.0456142425537, :y2 436.14581298828125, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 412.8125, :x2 186.0456142425537, :y2 431.9791259765625, :width 839.9999999999999, :height 1092}), :page 318}, :content {:text "In Kotlin, overloaded constructors are calledsecondaryconstructors"}, :properties {:color "blue"}} {:id #uuid "62c3ac5c-e8c1-4b88-af7a-1ee77bfc32c3", :page 318, :position {:bounding {:x1 89.25781059265137, :y1 408.64581298828125, :x2 750.4223384857178, :y2 460.2213134765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 194.95126914978027, :y1 408.64581298828125, :x2 750.4223384857178, :y2 436.14581298828125, :width 839.9999999999999, :height 1092} {:x1 89.25781059265137, :y1 432.7213134765625, :x2 375.764554977417, :y2 460.2213134765625, :width 839.9999999999999, :height 1092} {:x1 425.37758445739746, :y1 432.7213134765625, :x2 733.6327724456787, :y2 460.2213134765625, :width 839.9999999999999, :height 1092} {:x1 89.25781059265137, :y1 436.88800048828125, :x2 729.39089012146, :y2 456.0546875, :width 839.9999999999999, :height 1092}), :page 318}, :content {:text "The constructor parameter list (directly after the class name) combinedwith property initializations and theinitblock is called theprimary constructor."}, :properties {:color "blue"}} {:id #uuid "62c3acbf-3839-45e6-90ea-37c5e1174c2a", :page 318, :position {:bounding {:x1 89.99999809265137, :y1 466.9921875, :x2 753.5618877410889, :y2 518.5676879882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 368.61900901794434, :y1 466.9921875, :x2 435.93846702575684, :y2 494.4921875, :width 839.9999999999999, :height 1092} {:x1 560.5208339691162, :y1 466.9921875, :x2 750.1049404144287, :y2 494.4921875, :width 839.9999999999999, :height 1092} {:x1 443.26820945739746, :y1 470.05206298828125, :x2 750.1049404144287, :y2 490.8853759765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 491.06768798828125, :x2 753.5618877410889, :y2 518.5676879882812, :width 839.9999999999999, :height 1092}), :page 318}, :content {:text ", use theconstructorkeyword followed by aparameter list that’s distinct from all other primary and secondary parameter lists."}, :properties {:color "blue"}} {:id #uuid "62c3adba-7307-403a-a5c3-a79daa6bf9bd", :page 318, :position {:bounding {:x1 89.07552146911621, :y1 515.1432294845581, :x2 753.6129360198975, :y2 566.7187299728394, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.07552146911621, :y1 515.1432294845581, :x2 370.23207664489746, :y2 542.6432294845581, :width 839.9999999999999, :height 1092} {:x1 418.65883445739746, :y1 515.1432294845581, :x2 753.6129360198975, :y2 542.6432294845581, :width 839.9999999999999, :height 1092} {:x1 374.40102195739746, :y1 518.2161054611206, :x2 753.6129360198975, :y2 539.0494794845581, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 539.2187299728394, :x2 385.510648727417, :y2 566.7187299728394, :width 839.9999999999999, :height 1092}), :page 318}, :content {:text "Within a secondary constructor, thethiskeyword calls either the primary construc-tor or another secondary constructor:"}, :properties {:color "yellow"}} {:id #uuid "62c3ae9b-d9d1-40c0-88c0-df6e6a7fefa2", :page 319, :position {:bounding {:x1 89.99999809265137, :y1 575.5338134765625, :x2 750.072286605835, :y2 627.109375, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 575.5338134765625, :x2 594.8716716766357, :y2 603.0338134765625, :width 839.9999999999999, :height 1092} {:x1 638.5807094573975, :y1 575.5338134765625, :x2 750.072286605835, :y2 603.0338134765625, :width 839.9999999999999, :height 1092} {:x1 598.6978969573975, :y1 578.6067504882812, :x2 750.072286605835, :y2 599.4400634765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 599.609375, :x2 365.38644218444824, :y2 627.109375, :width 839.9999999999999, :height 1092}), :page 319}, :content {:text "Calling another constructor from a secondary constructor (usingthis) must happenbefore additional constructor logi"}, :properties {:color "red"}} {:id #uuid "62c3b133-37b1-44d0-a40f-0ce0f6d376ce", :page 319, :position {:bounding {:x1 89.44009971618652, :y1 658.0728759765625, :x2 750.06032371521, :y2 709.6484375, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.44009971618652, :y1 658.0728759765625, :x2 513.381628036499, :y2 685.5728759765625, :width 839.9999999999999, :height 1092} {:x1 685.0260219573975, :y1 658.0728759765625, :x2 750.06032371521, :y2 685.5728759765625, :width 839.9999999999999, :height 1092} {:x1 519.2708339691162, :y1 661.1458129882812, :x2 750.06032371521, :y2 681.9791259765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 682.1484375, :x2 284.0041790008545, :y2 709.6484375, :width 839.9999999999999, :height 1092}), :page 319}, :content {:text "The argument list determines the constructor to call.WithSecondary(1)matchesthe primary constructor"}, :properties {:color "green"}} {:id #uuid "62c3b137-a916-475c-9487-db1153fba204", :page 319, :position {:bounding {:x1 89.99999809265137, :y1 682.1484375, :x2 753.552755355835, :y2 733.7239379882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 483.81508445739746, :y1 682.1484375, :x2 753.552755355835, :y2 709.6484375, :width 839.9999999999999, :height 1092} {:x1 296.28905296325684, :y1 685.2213134765625, :x2 753.552755355835, :y2 706.0546875, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 706.2239379882812, :x2 149.69992637634277, :y2 733.7239379882812, :width 839.9999999999999, :height 1092}), :page 319}, :content {:text "WithSecondary('D')matches the first secondary con-structor"}, :properties {:color "green"}} {:id #uuid "62c3b13a-3d2a-4918-8c60-0f40c6407c50", :page 319, :position {:bounding {:x1 89.99999809265137, :y1 706.2239379882812, :x2 758.13307762146, :y2 757.7994384765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 158.5183925628662, :y1 706.2239379882812, :x2 187.70421409606934, :y2 733.7239379882812, :width 839.9999999999999, :height 1092} {:x1 523.3072719573975, :y1 706.2239379882812, :x2 758.13307762146, :y2 733.7239379882812, :width 839.9999999999999, :height 1092} {:x1 190.9505214691162, :y1 709.296875, :x2 758.13307762146, :y2 730.1301879882812, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 730.2994384765625, :x2 178.70670127868652, :y2 757.7994384765625, :width 839.9999999999999, :height 1092}), :page 319}, :content {:text "andWithSecondary(\"Last Constructor\")matches the second secondaryconstructor"}, :properties {:color "green"}} {:id #uuid "62c3b143-7f4f-4993-9c16-347f1399cf20", :page 319, :position {:bounding {:x1 89.99999809265137, :y1 730.2994384765625, :x2 750.294454574585, :y2 781.875, :width 839.9999999999999, :height 1092}, :rects ({:x1 187.69521141052246, :y1 730.2994384765625, :x2 218.0204677581787, :y2 757.7994384765625, :width 839.9999999999999, :height 1092} {:x1 286.8098964691162, :y1 730.2994384765625, :x2 750.294454574585, :y2 757.7994384765625, :width 839.9999999999999, :height 1092} {:x1 222.44791221618652, :y1 733.3723754882812, :x2 750.294454574585, :y2 754.2056884765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 754.375, :x2 398.05309867858887, :y2 781.875, :width 839.9999999999999, :height 1092}), :page 319}, :content {:text "Thethis()call in[1]matches the first secondary constructor, and youcan see the chain of calls in the output."}, :properties {:color "green"}} {:id #uuid "62c41d52-6785-4b74-8c63-b13dbb32b03f", :page 318, :position {:bounding {:x1 108.12499046325684, :y1 808.3202819824219, :x2 325.6703701019287, :y2 847.9556884765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.12499046325684, :y1 808.3202819824219, :x2 325.6703701019287, :y2 827.4869384765625, :width 839.9999999999999, :height 1092} {:x1 126.24999046325684, :y1 828.7890014648438, :x2 280.3578701019287, :y2 847.9556884765625, :width 839.9999999999999, :height 1092}), :page 318}, :content {:text "constructor(s: String) :this(s.first()) {"}, :properties {:color "blue"}} {:id #uuid "62c41d80-8f6e-403e-a1e6-f3d8bd6e8e2a", :page 319, :position {:bounding {:x1 89.44009971618652, :y1 788.7630004882812, :x2 750.486120223999, :y2 840.3385009765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.44009971618652, :y1 788.7630004882812, :x2 750.486120223999, :y2 816.2630004882812, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 812.8385009765625, :x2 286.622465133667, :y2 840.3385009765625, :width 839.9999999999999, :height 1092}), :page 319}, :content {:text "The primary constructor must always be called, either directly or through a call toa secondary constructor. "}, :properties {:color "red"}} {:id #uuid "62c4203b-9b82-4cf8-8011-52be6844e2e8", :page 320, :position {:bounding {:x1 108.12499046325684, :y1 351.69268798828125, :x2 506.9524745941162, :y2 411.7838134765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.12499046325684, :y1 351.69268798828125, :x2 217.79947471618652, :y2 370.859375, :width 839.9999999999999, :height 1092} {:x1 126.24999046325684, :y1 372.1484375, :x2 416.3484706878662, :y2 391.3150634765625, :width 839.9999999999999, :height 1092} {:x1 452.56508445739746, :y1 372.1484375, :x2 506.9524745941162, :y2 391.3150634765625, :width 839.9999999999999, :height 1092} {:x1 108.12499046325684, :y1 392.6171875, :x2 235.02953147888184, :y2 411.7838134765625, :width 839.9999999999999, :height 1092}), :page 320}, :content {:text "constructor(name: String, material: Material// [1]) :this(name)"}, :properties {:color "blue"}} {:id #uuid "62c42049-b548-4722-9097-6cae4d6cf6a7", :page 320, :position {:bounding {:x1 108.12499046325684, :y1 454.0103759765625, :x2 425.37819480895996, :y2 514.1145629882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.12499046325684, :y1 454.0103759765625, :x2 217.79947471618652, :y2 473.17706298828125, :width 839.9999999999999, :height 1092} {:x1 126.24999046325684, :y1 474.4791259765625, :x2 289.42162132263184, :y2 493.64581298828125, :width 839.9999999999999, :height 1092} {:x1 108.12499046325684, :y1 494.9478759765625, :x2 425.37819480895996, :y2 514.1145629882812, :width 839.9999999999999, :height 1092}), :page 320}, :content {:text "constructor(material: Material) :this(\"Strange Thing\", material)"}, :properties {:color "blue"}} {:id #uuid "62c42157-0da8-4e6a-80f7-0c64ecea0ad5", :page 320, :position {:bounding {:x1 131.51041221618652, :y1 757.9817504882812, :x2 753.7868556976318, :y2 809.5572509765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 131.51041221618652, :y1 757.9817504882812, :x2 753.7868556976318, :y2 785.4817504882812, :width 839.9999999999999, :height 1092} {:x1 160.93749046325684, :y1 762.1484375, :x2 753.7868556976318, :y2 781.3150634765625, :width 839.9999999999999, :height 1092} {:x1 131.51041221618652, :y1 782.0572509765625, :x2 187.6645565032959, :y2 809.5572509765625, :width 839.9999999999999, :height 1092} {:x1 227.48697471618652, :y1 782.0572509765625, :x2 244.2170925140381, :y2 809.5572509765625, :width 839.9999999999999, :height 1092} {:x1 279.10155296325684, :y1 782.0572509765625, :x2 283.47655296325684, :y2 809.5572509765625, :width 839.9999999999999, :height 1092} {:x1 131.51041221618652, :y1 786.2239379882812, :x2 279.1016445159912, :y2 807.0572509765625, :width 839.9999999999999, :height 1092}), :page 320}, :content {:text "[1]Only the parameters of the primary constructor can be declared as proper-ties viavalorvar."}, :properties {:color "blue"}} {:id #uuid "62c43e63-d68f-465d-aed4-533664e4616b", :page 320, :position {:bounding {:x1 160.65103721618652, :y1 808.0078125, :x2 644.7360591888428, :y2 835.5078125, :width 839.9999999999999, :height 1092}, :rects ({:x1 160.65103721618652, :y1 808.0078125, :x2 644.7360591888428, :y2 835.5078125, :width 839.9999999999999, :height 1092}), :page 320}, :content {:text "You cannot declare a return type for a secondary constructor."}, :properties {:color "red"}} {:id #uuid "62c43f54-a2c9-4481-99b2-1a06132ba17f", :page 321, :position {:bounding {:x1 89.99999809265137, :y1 122.1744384765625, :x2 750.4247035980225, :y2 173.75, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 122.1744384765625, :x2 750.4247035980225, :y2 149.6744384765625, :width 839.9999999999999, :height 1092} {:x1 211.97916221618652, :y1 126.34112548828125, :x2 750.4247035980225, :y2 145.5078125, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 146.25, :x2 114.89420127868652, :y2 173.75, :width 839.9999999999999, :height 1092} {:x1 204.59634971618652, :y1 146.25, :x2 338.65883445739746, :y2 173.75, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 150.4166259765625, :x2 334.30699729919434, :y2 169.58331298828125, :width 839.9999999999999, :height 1092}), :page 321}, :content {:text "constructor (in[2]) and initialization of all the class properties, then it’s changed tothematerialparameter at[3]."}, :properties {:color "yellow"}} {:id #uuid "62c44014-a800-4103-82f5-4d1112fc4e16", :page 320, :position {:bounding {:x1 108.12499046325684, :y1 638.2031097412109, :x2 506.9524745941162, :y2 677.8255157470703, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.12499046325684, :y1 638.2031097412109, :x2 425.37819480895996, :y2 657.3697662353516, :width 839.9999999999999, :height 1092} {:x1 452.56508445739746, :y1 638.2031097412109, :x2 506.9524745941162, :y2 657.3697662353516, :width 839.9999999999999, :height 1092} {:x1 126.24999046325684, :y1 658.6588287353516, :x2 298.4869899749756, :y2 677.8255157470703, :width 839.9999999999999, :height 1092}), :page 320}, :content {:text "GardenItem(\"Gazing Ball\", Metal) eq// [5]\"Metal Gazing Ball\""}, :properties {:color "yellow"}} {:id #uuid "62c44019-2a14-4167-bc2d-837f792a9c43", :page 320, :position {:bounding {:x1 89.07552146911621, :y1 943.5677032470703, :x2 535.7132167816162, :y2 971.0677032470703, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.07552146911621, :y1 943.5677032470703, :x2 535.7132167816162, :y2 971.0677032470703, :width 839.9999999999999, :height 1092} {:x1 511.5233974456787, :y1 947.7343292236328, :x2 535.7132167816162, :y2 966.9010162353516, :width 839.9999999999999, :height 1092}), :page 320}, :content {:text "When calling the first secondary constructor in line[5]"}, :properties {:color "yellow"}} {:id #uuid "62c442af-e3d4-46ac-87f3-f7c36ea0937a", :page 322, :position {:bounding {:x1 89.99999809265137, :y1 178.29428100585938, :x2 329.51196098327637, :y2 236.62762451171875, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 178.29428100585938, :x2 329.51196098327637, :y2 236.62762451171875, :width 839.9999999999999, :height 1092}), :page 322}, :content {:text "Inheritance"}, :properties {:color "yellow"}} {:id #uuid "62c443b2-bdfd-413d-bd27-efcf4a97f5b5", :page 322, :position {:bounding {:x1 89.25781059265137, :y1 377.90364587306976, :x2 752.6749477386475, :y2 453.5546773672104, :width 839.9999999999999, :height 1092}, :rects ({:x1 338.68919944763184, :y1 377.90364587306976, :x2 752.6749477386475, :y2 405.40364587306976, :width 839.9999999999999, :height 1092} {:x1 89.25781059265137, :y1 401.979146361351, :x2 750.5100688934326, :y2 429.479146361351, :width 839.9999999999999, :height 1092} {:x1 89.25781059265137, :y1 406.14583337306976, :x2 750.5100688934326, :y2 425.3124898672104, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 426.0546773672104, :x2 355.759672164917, :y2 453.5546773672104, :width 839.9999999999999, :height 1092}), :page 322}, :content {:text " An object also belongs to a category called a class,which determines the form (properties and functions) for its objects. Thus, an objectlooks like the class that formed it."}, :properties {:color "yellow"}} {:id #uuid "62c443c8-deb9-49fb-8763-0b44aa4b0cc5", :page 322, :position {:bounding {:x1 89.99999809265137, :y1 508.072896361351, :x2 750.5099697113037, :y2 559.6483968496323, :width 839.9999999999999, :height 1092}, :rects ({:x1 363.0138759613037, :y1 508.072896361351, :x2 750.5099697113037, :y2 535.572896361351, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 532.1483968496323, :x2 309.3880214691162, :y2 559.6483968496323, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 536.315083861351, :x2 305.0917263031006, :y2 555.4817708730698, :width 839.9999999999999, :height 1092}), :page 322}, :content {:text "Object-oriented languages provide a mechanismfor reuse calledinheritance."}, :properties {:color "yellow"}} {:id #uuid "62c44440-6e7a-4f8d-b319-7bae78788bad", :page 322, :position {:bounding {:x1 89.44009971618652, :y1 943.5676879882812, :x2 330.30467796325684, :y2 971.0676879882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.44009971618652, :y1 943.5676879882812, :x2 282.18544578552246, :y2 971.0676879882812, :width 839.9999999999999, :height 1092} {:x1 290.41664695739746, :y1 946.640625, :x2 330.30467796325684, :y2 967.4739379882812, :width 839.9999999999999, :height 1092}), :page 322}, :content {:text "The base class must beopen"}, :properties {:color "yellow"}} {:id #uuid "62c44443-ce35-42e0-bee2-309c90412ec9", :page 322, :position {:bounding {:x1 340.6106472015381, :y1 943.5676879882812, :x2 700.4701137542725, :y2 971.0676879882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 340.6106472015381, :y1 943.5676879882812, :x2 402.5496425628662, :y2 971.0676879882812, :width 839.9999999999999, :height 1092} {:x1 450.78124046325684, :y1 943.5676879882812, :x2 700.4701137542725, :y2 971.0676879882812, :width 839.9999999999999, :height 1092} {:x1 402.5130214691162, :y1 946.640625, :x2 442.4010524749756, :y2 967.4739379882812, :width 839.9999999999999, :height 1092}), :page 322}, :content {:text "A non-openclass doesn’t allow inheritance"}, :properties {:color "yellow"}} {:id #uuid "62c444c0-d7ac-4d28-bd88-dcc0d17356c3", :page 323, :position {:bounding {:x1 89.99999809265137, :y1 146.25, :x2 750.0750942230225, :y2 197.82550048828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 367.22206687927246, :y1 146.25, :x2 606.2019863128662, :y2 173.75, :width 839.9999999999999, :height 1092} {:x1 665.1041469573975, :y1 146.25, :x2 750.0750942230225, :y2 173.75, :width 839.9999999999999, :height 1092} {:x1 610.6119594573975, :y1 149.3228759765625, :x2 750.0750942230225, :y2 170.15625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 170.32550048828125, :x2 434.4537944793701, :y2 197.82550048828125, :width 839.9999999999999, :height 1092} {:x1 493.9843349456787, :y1 170.32550048828125, :x2 578.1949672698975, :y2 197.82550048828125, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 174.4921875, :x2 489.00661277770996, :y2 193.6588134765625, :width 839.9999999999999, :height 1092}), :page 323}, :content {:text " Although Kotlin allows it, thefinalmodifier isredundant because every class is effectivelyfinalby default:"}, :properties {:color "yellow"}} {:id #uuid "62c444f1-f0b4-4246-bd44-89cb92b8524d", :page 323, :position {:bounding {:x1 89.99999809265137, :y1 557.1874694824219, :x2 750.1314907073975, :y2 608.7630310058594, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 557.1874694824219, :x2 499.14669609069824, :y2 584.6874694824219, :width 839.9999999999999, :height 1092} {:x1 548.8541469573975, :y1 557.1874694824219, :x2 750.1314907073975, :y2 584.6874694824219, :width 839.9999999999999, :height 1092} {:x1 503.9062099456787, :y1 560.2474060058594, :x2 750.1314907073975, :y2 581.0807189941406, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 581.2630310058594, :x2 345.6266460418701, :y2 608.7630310058594, :width 839.9999999999999, :height 1092}), :page 323}, :content {:text "Kotlin forces you to clarify your intent by using theopenkeyword to specify that aclass is designed for inheritance."}, :properties {:color "yellow"}} {:id #uuid "62c445d5-16f8-47ff-9b5e-b7fe347d8178", :page 324, :position {:bounding {:x1 89.99999809265137, :y1 289.0234375, :x2 753.0598964691162, :y2 316.5234375, :width 839.9999999999999, :height 1092}, :rects ({:x1 156.2239589691162, :y1 289.0234375, :x2 306.1288661956787, :y2 316.5234375, :width 839.9999999999999, :height 1092} {:x1 392.21352195739746, :y1 289.0234375, :x2 662.6930141448975, :y2 316.5234375, :width 839.9999999999999, :height 1092} {:x1 748.6848964691162, :y1 289.0234375, :x2 753.0598964691162, :y2 316.5234375, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 292.09637451171875, :x2 748.695333480835, :y2 312.9296875, :width 839.9999999999999, :height 1092}), :page 324}, :content {:text "info()is an extension forGreatApe, so naturally you can call it on aGreatApe."}, :properties {:color "yellow"}} {:id #uuid "62c4461c-94bc-4f6e-84d6-9d9878020688", :page 324, :position {:bounding {:x1 89.25781059265137, :y1 337.1744384765625, :x2 751.072286605835, :y2 388.75, :width 839.9999999999999, :height 1092}, :rects ({:x1 451.43614768981934, :y1 337.1744384765625, :x2 751.072286605835, :y2 364.6744384765625, :width 839.9999999999999, :height 1092} {:x1 89.25781059265137, :y1 361.25, :x2 266.51354026794434, :y2 388.75, :width 839.9999999999999, :height 1092} {:x1 89.25781059265137, :y1 365.4166259765625, :x2 352.0417079925537, :y2 384.58331298828125, :width 839.9999999999999, :height 1092}), :page 324}, :content {:text " Kotlin happily accepts them as if theywere thesame typeasGreatApe"}, :properties {:color "yellow"}} {:id #uuid "62c4464e-508f-4cf0-aa50-e3ef24920c11", :page 324, :position {:bounding {:x1 89.99999809265137, :y1 608.8671722412109, :x2 616.77272605896, :y2 636.3671722412109, :width 839.9999999999999, :height 1092}, :rects ({:x1 203.94530296325684, :y1 608.8671722412109, :x2 616.77272605896, :y2 636.3671722412109, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 611.9401092529297, :x2 283.29820823669434, :y2 632.7734222412109, :width 839.9999999999999, :height 1092}), :page 324}, :content {:text "GreatApe.ktis a bittoosimple because all the classes are identical"}, :properties {:color "yellow"}} {:id #uuid "62c44729-61a7-4084-ac4f-db70047ad836", :page 324, :position {:bounding {:x1 89.99999809265137, :y1 691.4062347412109, :x2 753.5747890472412, :y2 742.9817352294922, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 691.4062347412109, :x2 340.20980644226074, :y2 718.9062347412109, :width 839.9999999999999, :height 1092} {:x1 457.0442714691162, :y1 691.4062347412109, :x2 753.5747890472412, :y2 718.9062347412109, :width 839.9999999999999, :height 1092} {:x1 347.36977195739746, :y1 694.4791717529297, :x2 753.5747890472412, :y2 715.3124847412109, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 715.4817352294922, :x2 410.48116874694824, :y2 742.9817352294922, :width 839.9999999999999, :height 1092}), :page 324}, :content {:text "Let’s look at another version ofGreatApe.kt. This time we include member func-tions that are modified in the subclasses:"}, :properties {:color "yellow"}} {:id #uuid "62c44762-a54a-42e2-9d22-027c593f73e6", :page 113, :position {:bounding {:x1 89.99999809265137, :y1 182.9296875, :x2 542.9020671844482, :y2 241.26300048828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 182.9296875, :x2 542.9020671844482, :y2 241.26300048828125, :width 839.9999999999999, :height 1092}), :page 113}, :content {:text "Constraining Visibility"}, :properties {:color "yellow"}} {:id #uuid "62c447dc-22dd-4b8f-bcd9-b052d54745ac", :page 326, :position {:bounding {:x1 89.99999809265137, :y1 243.19012451171875, :x2 750.0052700042725, :y2 294.765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 404.59462547302246, :y1 243.19012451171875, :x2 674.4068813323975, :y2 270.69012451171875, :width 839.9999999999999, :height 1092} {:x1 680.1952724456787, :y1 246.26300048828125, :x2 750.0052700042725, :y2 267.09637451171875, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 267.265625, :x2 304.58675956726074, :y2 294.765625, :width 839.9999999999999, :height 1092}), :page 326}, :content {:text " the derived class can’t access theprivatemembers of the base class"}, :properties {:color "yellow"}} {:id #uuid "62c44888-c2af-46d6-8909-f8392a700797", :page 326, :position {:bounding {:x1 156.43076133728027, :y1 315.41668701171875, :x2 383.55125999450684, :y2 342.91668701171875, :width 839.9999999999999, :height 1092}, :rects ({:x1 156.43076133728027, :y1 315.41668701171875, :x2 249.96437644958496, :y2 342.91668701171875, :width 839.9999999999999, :height 1092} {:x1 347.8645839691162, :y1 315.41668701171875, :x2 383.55125999450684, :y2 342.91668701171875, :width 839.9999999999999, :height 1092} {:x1 253.97133445739746, :y1 318.48956298828125, :x2 343.72536277770996, :y2 339.32293701171875, :width 839.9999999999999, :height 1092}), :page 326}, :content {:text "That’s whatprotecteddoes"}, :properties {:color "yellow"}} {:id #uuid "62c448ac-d969-44f7-b291-7a84e10a3435", :page 326, :position {:bounding {:x1 154.09650230407715, :y1 339.50518798828125, :x2 522.5219173431396, :y2 367.00518798828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 154.09650230407715, :y1 339.50518798828125, :x2 522.5219173431396, :y2 367.00518798828125, :width 839.9999999999999, :height 1092}), :page 326}, :content {:text "ut can be accessed or overridden in subclasses."}, :properties {:color "yellow"}} {:id #uuid "62c44ba6-05ed-4cf6-9e6e-bbfbfc05ef46", :page 326, :position {:bounding {:x1 89.99999809265137, :y1 562.3046493530273, :x2 750.5575542449951, :y2 637.9557113647461, :width 839.9999999999999, :height 1092}, :rects ({:x1 607.0929164886475, :y1 562.3046493530273, :x2 750.0985927581787, :y2 589.8046493530273, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 586.3802108764648, :x2 750.5575542449951, :y2 613.8802108764648, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 590.5468368530273, :x2 750.5575542449951, :y2 609.7135238647461, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 610.4557113647461, :x2 558.652982711792, :y2 637.9557113647461, :width 839.9999999999999, :height 1092}), :page 326}, :content {:text " If you create anidentical function signature in a derived class as in a base class, you substitute thebehavior defined in the base class with your new behavior. "}, :properties {:color "yellow"}} {:id #uuid "62c44bba-7088-4153-84ce-ca3c37b03ddd", :page 326, :position {:bounding {:x1 667.3046474456787, :y1 610.4557113647461, :x2 753.0598964691162, :y2 637.9557113647461, :width 839.9999999999999, :height 1092}, :rects ({:x1 667.3046474456787, :y1 610.4557113647461, :x2 753.0598964691162, :y2 637.9557113647461, :width 839.9999999999999, :height 1092}), :page 326}, :content {:text "overriding."}, :properties {:color "red"}} {:id #uuid "62c44db2-77c4-4404-b112-bfb721fd767f", :page 326, :position {:bounding {:x1 133.34787559509277, :y1 668.6718368530273, :x2 531.8644161224365, :y2 696.1718368530273, :width 839.9999999999999, :height 1092}, :rects ({:x1 133.34787559509277, :y1 668.6718368530273, :x2 531.8644161224365, :y2 696.1718368530273, :width 839.9999999999999, :height 1092}), :page 326}, :content {:text " it decides that you’ve made a mistake, called an"}, :properties {:color "yellow"}} {:id #uuid "62c44dcb-45e1-476b-b3d5-0ee5898a7675", :page 326, :position {:bounding {:x1 89.25781059265137, :y1 668.6718368530273, :x2 750.5222148895264, :y2 744.3228988647461, :width 839.9999999999999, :height 1092}, :rects ({:x1 699.6062831878662, :y1 668.6718368530273, :x2 750.055196762085, :y2 696.1718368530273, :width 839.9999999999999, :height 1092} {:x1 89.25781059265137, :y1 692.7473983764648, :x2 750.5222148895264, :y2 720.2473983764648, :width 839.9999999999999, :height 1092} {:x1 89.25781059265137, :y1 696.9140243530273, :x2 750.5222148895264, :y2 716.0807113647461, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 716.8228988647461, :x2 401.677396774292, :y2 744.3228988647461, :width 839.9999999999999, :height 1092} {:x1 492.3046474456787, :y1 716.8228988647461, :x2 559.6398525238037, :y2 744.3228988647461, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 720.9895858764648, :x2 486.76820945739746, :y2 740.1562118530273, :width 839.9999999999999, :height 1092}), :page 326}, :content {:text "If youwrite a function that has the same name as a function in the base class, you getan error message saying you forgot theoverridekeyword"}, :properties {:color "yellow"}} {:id #uuid "62c44e5f-5f58-4af6-b74a-59ab9afd4562", :page 326, :position {:bounding {:x1 89.99999809265137, :y1 847.265625, :x2 643.3663311004639, :y2 874.765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 847.265625, :x2 643.3663311004639, :y2 874.765625, :width 839.9999999999999, :height 1092}), :page 326}, :content {:text "Kotlin imposes an additional constraint when overriding function"}, :properties {:color "yellow"}} {:id #uuid "62c44eb6-46dc-4dac-b7f2-3a1c011bd124", :page 326, :position {:bounding {:x1 89.99999809265137, :y1 871.3411254882812, :x2 749.9973964691162, :y2 922.9166564941406, :width 839.9999999999999, :height 1092}, :rects ({:x1 573.0939540863037, :y1 871.3411254882812, :x2 665.83424949646, :y2 898.8411254882812, :width 839.9999999999999, :height 1092} {:x1 670.2213344573975, :y1 874.4140625, :x2 749.9973964691162, :y2 895.2473754882812, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 895.4166564941406, :x2 604.4862041473389, :y2 922.9166564941406, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 899.5833129882812, :x2 651.6979579925537, :y2 918.75, :width 839.9999999999999, :height 1092}), :page 326}, :content {:text " you cannotoverridea function from a base class unless that function is defined asopen"}, :properties {:color "green"}} {:id #uuid "62c44ec4-01cb-4986-ad38-94c52314c9ed", :page 326, :position {:bounding {:x1 89.99999809265137, :y1 943.5676879882812, :x2 750.4743251800537, :y2 995.1432189941406, :width 839.9999999999999, :height 1092}, :rects ({:x1 181.85292625427246, :y1 943.5676879882812, :x2 750.4743251800537, :y2 971.0676879882812, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 967.6432189941406, :x2 216.8867702484131, :y2 995.1432189941406, :width 839.9999999999999, :height 1092}), :page 326}, :content {:text " Inheritance and overriding cannot be accomplished in Kotlin withoutclear intentions."}, :properties {:color "green"}} {:id #uuid "62c44f32-ab2e-4f34-b9d6-9cb92285b573", :page 345, :position {:bounding {:x1 89.99999809265137, :y1 181.10675048828125, :x2 389.65084648132324, :y2 239.44009399414062, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 181.10675048828125, :x2 389.65084648132324, :y2 239.44009399414062, :width 839.9999999999999, :height 1092}), :page 345}, :content {:text "Polymorphism"}, :properties {:color "yellow"}} {:id #uuid "62c44f57-9e5c-4f43-b322-94ea507c3f98", :page 327, :position {:bounding {:x1 89.99999809265137, :y1 359.47918701171875, :x2 752.1874599456787, :y2 435.1302490234375, :width 839.9999999999999, :height 1092}, :rects ({:x1 282.67857933044434, :y1 359.47918701171875, :x2 420.05064964294434, :y2 386.97918701171875, :width 839.9999999999999, :height 1092} {:x1 474.80467796325684, :y1 359.47918701171875, :x2 750.230489730835, :y2 386.97918701171875, :width 839.9999999999999, :height 1092} {:x1 424.94789695739746, :y1 362.5521240234375, :x2 750.230489730835, :y2 383.38543701171875, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 383.5546875, :x2 692.2832851409912, :y2 411.0546875, :width 839.9999999999999, :height 1092} {:x1 747.8124599456787, :y1 383.5546875, :x2 752.1874599456787, :y2 411.0546875, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 387.72137451171875, :x2 752.1874599456787, :y2 406.8880615234375, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 407.6302490234375, :x2 145.9883327484131, :y2 435.1302490234375, :width 839.9999999999999, :height 1092} {:x1 205.74217796325684, :y1 407.6302490234375, :x2 454.5951747894287, :y2 435.1302490234375, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 411.796875, :x2 200.7774257659912, :y2 430.96356201171875, :width 839.9999999999999, :height 1092}), :page 327}, :content {:text "If you simply calleat(), you call the same function you’recurrently inside (as we’ve seen inRecursion). To call the base-class version ofeat(),use thesuperkeyword, short for “superclass.”"}, :properties {:color "yellow"}} {:id #uuid "62c44f8d-b31f-49c7-ba57-d9d568b2872e", :page 328, :position {:bounding {:x1 89.99999809265137, :y1 182.9296875, :x2 576.7033977508545, :y2 241.26300048828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 182.9296875, :x2 576.7033977508545, :y2 241.26300048828125, :width 839.9999999999999, :height 1092}), :page 328}, :content {:text "Base Class Initialization"}, :properties {:color "yellow"}} {:id #uuid "62c63d24-caa9-4fa6-b292-21d18335e349", :page 328, :position {:bounding {:x1 89.99999809265137, :y1 470.0650634765625, :x2 750.3934535980225, :y2 545.7161254882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 732.1968593597412, :y1 470.0650634765625, :x2 750.3919887542725, :y2 497.5650634765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 494.140625, :x2 750.3934535980225, :y2 521.640625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 498.3072509765625, :x2 750.3934535980225, :y2 517.4739379882812, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 518.2161254882812, :x2 339.5768413543701, :y2 545.7161254882812, :width 839.9999999999999, :height 1092}), :page 328}, :content {:text " Ifa base classdoeshave constructor parameters, a derived class must provide thosearguments during construction."}, :properties {:color "yellow"}} {:id #uuid "62c640be-e6dd-432f-8416-c3a2f577a7b8", :page 328, :position {:bounding {:x1 180.63217163085938, :y1 781.296875, :x2 488.8480224609375, :y2 801.296875, :width 839.9999999999999, :height 1092}, :rects ({:x1 180.63217163085938, :y1 781.296875, :x2 488.8480224609375, :y2 801.296875, :width 839.9999999999999, :height 1092}), :page 328}, :content {:text "Bonobo(weight: Double, age: Int) "}, :properties {:color "yellow"}} {:id #uuid "62c640c1-ecd2-4c62-9bf5-c758b4d32ab5", :page 328, :position {:bounding {:x1 108.125, :y1 801.765625, :x2 298.5021667480469, :y2 821.765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.125, :y1 801.765625, :x2 298.5021667480469, :y2 821.765625, :width 839.9999999999999, :height 1092}), :page 328}, :content {:text "GreatApe(weight, age)"}, :properties {:color "yellow"}} {:id #uuid "62c640ce-9918-441a-8758-9761bafba590", :page 328, :position {:bounding {:x1 126.25, :y1 965.484375, :x2 497.9141845703125, :y2 985.484375, :width 839.9999999999999, :height 1092}, :rects ({:x1 126.25, :y1 965.484375, :x2 497.9141845703125, :y2 985.484375, :width 839.9999999999999, :height 1092}), :page 328}, :content {:text "GreatApe.info() =\"wt: $weight age: $age\""}, :properties {:color "yellow"}} {:id #uuid "62c642a2-998d-46e2-9e64-843fe02bf9a7", :page 329, :position {:bounding {:x1 89.078125, :y1 370.046875, :x2 750.2227783203125, :y2 422.125, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.078125, :y1 370.046875, :x2 260.3850402832031, :y2 398.046875, :width 839.9999999999999, :height 1092} {:x1 343.515625, :y1 370.046875, :x2 750.2227783203125, :y2 398.046875, :width 839.9999999999999, :height 1092} {:x1 263.75, :y1 373.625, :x2 750.2227783203125, :y2 394.625, :width 839.9999999999999, :height 1092} {:x1 90, :y1 394.125, :x2 135.53445434570312, :y2 422.125, :width 839.9999999999999, :height 1092} {:x1 225.21875, :y1 394.125, :x2 710.4054565429688, :y2 422.125, :width 839.9999999999999, :height 1092} {:x1 90, :y1 399.125, :x2 220.274658203125, :y2 418.125, :width 839.9999999999999, :height 1092}), :page 329}, :content {:text "When inheriting fromGreatApe, you must pass the necessary constructor argumentsto theGreatApebase class, otherwise you’ll get a compile-time error message."}, :properties {:color "yellow"}} {:id #uuid "62c642cd-51af-4944-9cf3-933948bf0ef6", :page 329, :position {:bounding {:x1 89.296875, :y1 428.515625, :x2 752.5339965820312, :y2 456.515625, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.296875, :y1 428.515625, :x2 752.5339965820312, :y2 456.515625, :width 839.9999999999999, :height 1092}), :page 329}, :content {:text "After Kotlin creates memory for your object, it calls the base-class constructor first,"}, :properties {:color "red"}} {:id #uuid "62c643a3-f9d3-4a66-9188-3aca0cb741e9", :page 329, :position {:bounding {:x1 90, :y1 452.59375, :x2 753.692626953125, :y2 504.65625, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 452.59375, :x2 753.692626953125, :y2 480.59375, :width 839.9999999999999, :height 1092} {:x1 90, :y1 476.65625, :x2 252.36669921875, :y2 504.65625, :width 839.9999999999999, :height 1092}), :page 329}, :content {:text "then the constructor for the next-derived class, and so on until it reaches the most-derived constructor. "}, :properties {:color "red"}} {:id #uuid "62c643af-05dd-44b7-8f04-77ae80555d47", :page 329, :position {:bounding {:x1 90, :y1 476.65625, :x2 750.34521484375, :y2 528.734375, :width 839.9999999999999, :height 1092}, :rects ({:x1 332.106201171875, :y1 476.65625, :x2 750.34521484375, :y2 504.65625, :width 839.9999999999999, :height 1092} {:x1 90, :y1 500.734375, :x2 347.89495849609375, :y2 528.734375, :width 839.9999999999999, :height 1092}), :page 329}, :content {:text "all constructor calls can rely on the validity of all thesub-objects created before them"}, :properties {:color "red"}} {:id #uuid "62c64417-f005-4015-8b76-3a8f382cd135", :page 329, :position {:bounding {:x1 89.99999809265137, :y1 525.6510009765625, :x2 750.1086025238037, :y2 601.3020629882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 525.6510009765625, :x2 100.05208396911621, :y2 553.1510009765625, :width 839.9999999999999, :height 1092} {:x1 173.90624046325684, :y1 525.6510009765625, :x2 358.1041774749756, :y2 553.1510009765625, :width 839.9999999999999, :height 1092} {:x1 452.8255214691162, :y1 525.6510009765625, :x2 514.7176723480225, :y2 553.1510009765625, :width 839.9999999999999, :height 1092} {:x1 589.6093349456787, :y1 525.6510009765625, :x2 750.1086025238037, :y2 553.1510009765625, :width 839.9999999999999, :height 1092} {:x1 106.53645896911621, :y1 528.7239379882812, :x2 750.1086025238037, :y2 549.5572509765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 549.7265625, :x2 212.73325157165527, :y2 577.2265625, :width 839.9999999999999, :height 1092} {:x1 300.65102195739746, :y1 549.7265625, :x2 385.3391933441162, :y2 577.2265625, :width 839.9999999999999, :height 1092} {:x1 473.2942714691162, :y1 549.7265625, :x2 686.2196865081787, :y2 577.2265625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 553.8931884765625, :x2 750.0013027191162, :y2 574.7265625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 573.8020629882812, :x2 120.70348167419434, :y2 601.3020629882812, :width 839.9999999999999, :height 1092} {:x1 225.3645839691162, :y1 573.8020629882812, :x2 584.11794090271, :y2 601.3020629882812, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 577.96875, :x2 225.3711452484131, :y2 597.1353759765625, :width 839.9999999999999, :height 1092}), :page 329}, :content {:text "aBonoboknows it inherits fromGreatApeand theBonoboconstructor can callfunctions in theGreatApeclass, but aGreatApecannot know whether it’s aBonoboor aChimpanzee, or call functions specific to those subclasses."}, :properties {:color "red"}} {:id #uuid "62c6466b-46b3-460c-ad19-b8dbf53b113f", :page 329, :position {:bounding {:x1 89.07552146911621, :y1 608.1900863647461, :x2 753.8510341644287, :y2 659.7655868530273, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.07552146911621, :y1 608.1900863647461, :x2 753.8510341644287, :y2 635.6900863647461, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 632.2655868530273, :x2 353.030912399292, :y2 659.7655868530273, :width 839.9999999999999, :height 1092}), :page 329}, :content {:text "When inheriting from a class you must provide arguments to the base-class con-structor after the base class name"}, :properties {:color "red"}} {:id #uuid "62c64743-556b-4d01-8275-e3e489c22a2d", :page 329, :position {:bounding {:x1 89.07552146911621, :y1 884.1015625, :x2 750.9887294769287, :y2 935.6770629882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.07552146911621, :y1 884.1015625, :x2 750.9887294769287, :y2 911.6015625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 908.1770629882812, :x2 733.7051982879639, :y2 935.6770629882812, :width 839.9999999999999, :height 1092}), :page 329}, :content {:text "When there are no base-class constructor parameters, Kotlin still requires emptyparentheses after the base class name, to call that constructor without arguments."}, :properties {:color "yellow"}} {:id #uuid "62c64753-b3b3-4e25-9266-5a4b3ec57b9b", :page 329, :position {:bounding {:x1 89.99999809265137, :y1 942.5650634765625, :x2 748.5473003387451, :y2 970.0650634765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 942.5650634765625, :x2 748.5473003387451, :y2 970.0650634765625, :width 839.9999999999999, :height 1092}), :page 329}, :content {:text "If there are secondary constructors in the base class you may call one of those instead"}, :properties {:color "yellow"}} {:id #uuid "62c647c9-a09b-4441-961f-a2dce1537e53", :page 331, :position {:bounding {:x1 89.07552146911621, :y1 309.4921569824219, :x2 750.3908596038818, :y2 409.2187194824219, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.07552146911621, :y1 309.4921569824219, :x2 136.7941188812256, :y2 336.9921569824219, :width 839.9999999999999, :height 1092} {:x1 278.2942714691162, :y1 309.4921569824219, :x2 382.95082664489746, :y2 336.9921569824219, :width 839.9999999999999, :height 1092} {:x1 444.60936546325684, :y1 309.4921569824219, :x2 750.2261562347412, :y2 336.9921569824219, :width 839.9999999999999, :height 1092} {:x1 142.72134971618652, :y1 312.5520935058594, :x2 750.2261562347412, :y2 333.3854064941406, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 333.5677185058594, :x2 186.11490440368652, :y2 361.0677185058594, :width 839.9999999999999, :height 1092} {:x1 250.1692714691162, :y1 333.5677185058594, :x2 606.84840965271, :y2 361.0677185058594, :width 839.9999999999999, :height 1092} {:x1 720.5728969573975, :y1 333.5677185058594, :x2 750.0113735198975, :y2 361.0677185058594, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 337.7343444824219, :x2 750.0113735198975, :y2 358.5676574707031, :width 839.9999999999999, :height 1092} {:x1 169.76561546325684, :y1 357.6432189941406, :x2 750.3908596038818, :y2 385.1432189941406, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 360.7161560058594, :x2 750.3908596038818, :y2 381.5494689941406, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 381.7187194824219, :x2 167.4906826019287, :y2 409.2187194824219, :width 839.9999999999999, :height 1092}), :page 331}, :content {:text "WhenVacationHouseinherits fromHouseit passes the appropriate arguments tothe primaryHouseconstructor. It also adds its own parametersstartMonthandendMonth—you aren’t limited by the number, type or order of the parameters in thebase class"}, :properties {:color "blue"}} {:id #uuid "62c647ce-4959-44e4-b428-5462f4f5b616", :page 331, :position {:bounding {:x1 89.99999809265137, :y1 381.7187194824219, :x2 750.5128536224365, :y2 433.2942810058594, :width 839.9999999999999, :height 1092}, :rects ({:x1 221.25144004821777, :y1 381.7187194824219, :x2 750.5128536224365, :y2 409.2187194824219, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 405.7942810058594, :x2 296.41818046569824, :y2 433.2942810058594, :width 839.9999999999999, :height 1092}), :page 331}, :content {:text "only responsibility is to provide the correct arguments in the call tothe base-class constructor."}, :properties {:color "blue"}} {:id #uuid "62c647df-cb1f-42b5-9612-b9431e517f4c", :page 330, :position {:bounding {:x1 108.12499046325684, :y1 904.2447814941406, :x2 407.2779140472412, :y2 923.4114074707031, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.12499046325684, :y1 904.2447814941406, :x2 407.2779140472412, :y2 923.4114074707031, :width 839.9999999999999, :height 1092}), :page 330}, :content {:text "valvacationHouse = VacationHouse"}, :properties {:color "red"}} {:id #uuid "62c647e6-b26b-403c-9c5b-a01132e44b0c", :page 330, :position {:bounding {:x1 89.99999809265137, :y1 494.9479217529297, :x2 262.23644065856934, :y2 514.1145477294922, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 494.9479217529297, :x2 262.23644065856934, :y2 514.1145477294922, :width 839.9999999999999, :height 1092}), :page 330}, :content {:text "classVacationHouse"}, :properties {:color "red"}} {:id #uuid "62c647eb-b9de-48ec-862d-4d6628608f5f", :page 330, :position {:bounding {:x1 89.99999809265137, :y1 208.43748474121094, :x2 289.41591453552246, :y2 309.45310974121094, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 208.43748474121094, :x2 244.99999046325684, :y2 227.6041717529297, :width 839.9999999999999, :height 1092} {:x1 108.12499046325684, :y1 228.8932342529297, :x2 289.41591453552246, :y2 248.0598907470703, :width 839.9999999999999, :height 1092} {:x1 108.12499046325684, :y1 249.3619842529297, :x2 271.2852077484131, :y2 268.5286407470703, :width 839.9999999999999, :height 1092} {:x1 108.12499046325684, :y1 269.8307342529297, :x2 244.08913230895996, :y2 288.9973907470703, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 290.2864532470703, :x2 108.1314754486084, :y2 309.45310974121094, :width 839.9999999999999, :height 1092}), :page 330}, :content {:text "openclassHouse(valaddress: String,valstate: String,valzip: String) "}, :properties {:color "red"}} {:id #uuid "62c647f4-7ce8-4298-88c0-16792fddc10d", :page 330, :position {:bounding {:x1 117.19450950622559, :y1 617.7343597412109, :x2 371.0336208343506, :y2 636.9010467529297, :width 839.9999999999999, :height 1092}, :rects ({:x1 117.19450950622559, :y1 617.7343597412109, :x2 371.0336208343506, :y2 636.9010467529297, :width 839.9999999999999, :height 1092}), :page 330}, :content {:text " House(address, state, zip) "}, :properties {:color "red"}} {:id #uuid "62c64803-2e6d-4fe5-ac4a-37120f94ecbb", :page 330, :position {:bounding {:x1 89.99999809265137, :y1 760.9895629882812, :x2 398.1862392425537, :y2 800.6119384765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.12499046325684, :y1 760.9895629882812, :x2 253.1545009613037, :y2 780.15625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 781.4453125, :x2 398.1862392425537, :y2 800.6119384765625, :width 839.9999999999999, :height 1092}), :page 330}, :content {:text "valname: String) : House(\"Tree Street, TR 00000\")"}, :properties {:color "red"}} {:id #uuid "62c648aa-8ddc-4116-8e15-043d7f416229", :page 331, :position {:bounding {:x1 89.41406059265137, :y1 440.1822509765625, :x2 754.9961757659912, :y2 515.8333129882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.41406059265137, :y1 440.1822509765625, :x2 750.8657207489014, :y2 467.6822509765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 464.2578125, :x2 699.0325298309326, :y2 491.7578125, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 468.4244384765625, :x2 754.9961757659912, :y2 487.59112548828125, :width 839.9999999999999, :height 1092} {:x1 184.71353721618652, :y1 488.33331298828125, :x2 214.15201377868652, :y2 515.8333129882812, :width 839.9999999999999, :height 1092} {:x1 308.85414695739746, :y1 488.33331298828125, :x2 313.0697536468506, :y2 515.8333129882812, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 491.40625, :x2 308.8685817718506, :y2 512.2395629882812, :width 839.9999999999999, :height 1092}), :page 331}, :content {:text "You call an overloaded base-class constructor by passing the matching constructorarguments in the base-class constructor call. You see this in the definitions ofVaca-tionHouseandTreeHouse."}, :properties {:color "blue"}} {:id #uuid "62c648ae-1991-461c-8141-605fd5010b27", :page 331, :position {:bounding {:x1 317.8499355316162, :y1 488.33331298828125, :x2 665.2344570159912, :y2 515.8333129882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 317.8499355316162, :y1 488.33331298828125, :x2 665.2344570159912, :y2 515.8333129882812, :width 839.9999999999999, :height 1092}), :page 331}, :content {:text "Each calls a different base-class constructor."}, :properties {:color "red"}} {:id #uuid "62c648f2-1d41-405e-9594-a31a7ef5ae16", :page 331, :position {:bounding {:x1 89.44009971618652, :y1 958.7369384765625, :x2 750.5557460784912, :y2 986.2369384765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.44009971618652, :y1 958.7369384765625, :x2 422.0362300872803, :y2 986.2369384765625, :width 839.9999999999999, :height 1092} {:x1 484.21874046325684, :y1 958.7369384765625, :x2 750.5557460784912, :y2 986.2369384765625, :width 839.9999999999999, :height 1092} {:x1 428.0598964691162, :y1 961.8098754882812, :x2 477.9258632659912, :y2 982.6431884765625, :width 839.9999999999999, :height 1092}), :page 331}, :content {:text "To call the base-class constructor, use thesuperkeyword, passing the constructor"}, :properties {:color "green"}} {:id #uuid "62c648f6-cc7b-4337-9c59-cde4596e8669", :page 332, :position {:bounding {:x1 89.99999809265137, :y1 122.17449951171875, :x2 750.233419418335, :y2 173.75, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 122.17449951171875, :x2 398.584623336792, :y2 149.67449951171875, :width 839.9999999999999, :height 1092} {:x1 447.34374046325684, :y1 122.17449951171875, :x2 750.233419418335, :y2 149.67449951171875, :width 839.9999999999999, :height 1092} {:x1 402.87758445739746, :y1 125.2474365234375, :x2 750.233419418335, :y2 146.08074951171875, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 146.25, :x2 131.42682456970215, :y2 173.75, :width 839.9999999999999, :height 1092}), :page 332}, :content {:text "arguments as if it is a function call. Usethisto call another constructor of the sameclass."}, :properties {:color "green"}} {:id #uuid "62c6493d-e06f-4c58-9d9f-3910ae0958cf", :page 333, :position {:bounding {:x1 89.99999809265137, :y1 182.9296875, :x2 426.71957206726074, :y2 241.26300048828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 182.9296875, :x2 426.71957206726074, :y2 241.26300048828125, :width 839.9999999999999, :height 1092}), :page 333}, :content {:text "Abstract Classes"}, :properties {:color "yellow"}} {:id #uuid "62c64952-cb93-4358-aabf-6465b2965501", :page 333, :position {:bounding {:x1 131.51041221618652, :y1 261.7578125, :x2 708.932653427124, :y2 337.421875, :width 839.9999999999999, :height 1092}, :rects ({:x1 131.51041221618652, :y1 261.7578125, :x2 708.79128074646, :y2 289.2578125, :width 839.9999999999999, :height 1092} {:x1 162.07030296325684, :y1 265.9244689941406, :x2 708.79128074646, :y2 285.09112548828125, :width 839.9999999999999, :height 1092} {:x1 131.51041221618652, :y1 285.83331298828125, :x2 708.932653427124, :y2 313.33331298828125, :width 839.9999999999999, :height 1092} {:x1 131.51041221618652, :y1 290, :x2 708.932653427124, :y2 309.1666564941406, :width 839.9999999999999, :height 1092} {:x1 131.51041221618652, :y1 309.921875, :x2 376.7975673675537, :y2 337.421875, :width 839.9999999999999, :height 1092}), :page 333}, :content {:text "Anabstract classis like an ordinary class except one or more functionsor properties is incomplete: a function lacks a definition or a property isdeclared without initialization"}, :properties {:color "blue"}} {:id #uuid "62c64963-e1ca-47b1-85c5-55e5deeb5cb7", :page 333, :position {:bounding {:x1 89.41406059265137, :y1 386.640625, :x2 750.2968349456787, :y2 438.21612548828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.41406059265137, :y1 386.640625, :x2 234.0952434539795, :y2 414.140625, :width 839.9999999999999, :height 1092} {:x1 329.94789695739746, :y1 386.640625, :x2 750.2968349456787, :y2 414.140625, :width 839.9999999999999, :height 1092} {:x1 242.0833339691162, :y1 389.7135314941406, :x2 750.2968349456787, :y2 410.546875, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 410.71612548828125, :x2 181.6194362640381, :y2 438.21612548828125, :width 839.9999999999999, :height 1092}), :page 333}, :content {:text "You must use theabstractmodifier to mark class members that have missingdefinitions. "}, :properties {:color "blue"}} {:id #uuid "62c64a2e-d345-4d93-af52-ad1aa221b98d", :page 333, :position {:bounding {:x1 89.99999809265137, :y1 434.7916564941406, :x2 750.233907699585, :y2 486.3671875, :width 839.9999999999999, :height 1092}, :rects ({:x1 173.91686058044434, :y1 434.7916564941406, :x2 364.62621116638184, :y2 462.2916259765625, :width 839.9999999999999, :height 1092} {:x1 451.08070945739746, :y1 434.7916564941406, :x2 750.233907699585, :y2 462.2916259765625, :width 839.9999999999999, :height 1092} {:x1 367.9036464691162, :y1 437.86456298828125, :x2 750.233907699585, :y2 458.6978759765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 458.8671875, :x2 148.66324424743652, :y2 486.3671875, :width 839.9999999999999, :height 1092}), :page 333}, :content {:text " Try removing any of theabstractmodifiers below and see what messageyou get"}, :properties {:color "blue"}} {:id #uuid "62c64bf6-9d5d-4a44-84c3-44e229b0896b", :page 333, :position {:bounding {:x1 89.99999809265137, :y1 748.0338134765625, :x2 753.4645595550537, :y2 823.6848754882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 521.1056118011475, :y1 748.0338134765625, :x2 753.4645595550537, :y2 775.5338134765625, :width 839.9999999999999, :height 1092} {:x1 535.4687099456787, :y1 752.2005004882812, :x2 753.4645595550537, :y2 771.3671875, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 772.0963134765625, :x2 750.2286586761475, :y2 799.5963134765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 776.2630004882812, :x2 750.2286586761475, :y2 795.4296875, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 796.1848754882812, :x2 155.88344383239746, :y2 823.6848754882812, :width 839.9999999999999, :height 1092}), :page 333}, :content {:text "adeclarationdescribes some-thing without providing adefinitionto create storage for a value or code for afunction"}, :properties {:color "yellow"}} {:id #uuid "62c64c0b-cebf-43ef-b175-77caa0c3623c", :page 333, :position {:bounding {:x1 170.51442527770996, :y1 796.1848754882812, :x2 711.3775844573975, :y2 823.6848754882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 170.51442527770996, :y1 796.1848754882812, :x2 627.2199306488037, :y2 823.6848754882812, :width 839.9999999999999, :height 1092} {:x1 631.6015224456787, :y1 799.2447509765625, :x2 711.3775844573975, :y2 820.078125, :width 839.9999999999999, :height 1092}), :page 333}, :content {:text "If there isn’t an initializer, Kotlin requires references to beabstract"}, :properties {:color "yellow"}} {:id #uuid "62c64c3b-0003-413c-90a5-c39cd0822033", :page 333, :position {:bounding {:x1 89.50520896911621, :y1 878.7239379882812, :x2 753.3889980316162, :y2 930.2994384765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 225.74217796325684, :y1 878.7239379882812, :x2 289.6448574066162, :y2 906.2239379882812, :width 839.9999999999999, :height 1092} {:x1 332.7473964691162, :y1 878.7239379882812, :x2 362.1858730316162, :y2 906.2239379882812, :width 839.9999999999999, :height 1092} {:x1 405.3255214691162, :y1 878.7239379882812, :x2 750.26198387146, :y2 906.2239379882812, :width 839.9999999999999, :height 1092} {:x1 89.50520896911621, :y1 881.7838134765625, :x2 750.26198387146, :y2 902.6171875, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 902.7994384765625, :x2 266.04379081726074, :y2 930.2994384765625, :width 839.9999999999999, :height 1092} {:x1 355.78124046325684, :y1 902.7994384765625, :x2 753.3889980316162, :y2 930.2994384765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 906.9661254882812, :x2 350.73961448669434, :y2 926.1328125, :width 839.9999999999999, :height 1092}), :page 333}, :content {:text "WithFunctionsdeclaresf()andg()but provides no function definitions, againforcing you to add theabstractmodifier to the functions and the containing class."}, :properties {:color "yellow"}} {:id #uuid "62c64c42-56a3-45c1-8cbf-bf244de7d9c9", :page 333, :position {:bounding {:x1 89.99999809265137, :y1 926.875, :x2 750.1519374847412, :y2 978.4505004882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 453.77004051208496, :y1 926.875, :x2 514.22340965271, :y2 954.375, :width 839.9999999999999, :height 1092} {:x1 547.7603969573975, :y1 926.875, :x2 750.1519374847412, :y2 954.375, :width 839.9999999999999, :height 1092} {:x1 517.8515224456787, :y1 929.9348754882812, :x2 750.1519374847412, :y2 950.7681884765625, :width 839.9999999999999, :height 1092} {:x1 129.88280296325684, :y1 950.9505004882812, :x2 134.25780296325684, :y2 978.4505004882812, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 954.0103759765625, :x2 129.88803672790527, :y2 974.84375, :width 839.9999999999999, :height 1092}), :page 333}, :content {:text " as withg(), Kotlin assumes it returnsUnit."}, :properties {:color "yellow"}} {:id #uuid "62c64cc7-8b60-4296-91ca-e854a11a2d0c", :page 333, :position {:bounding {:x1 211.71132469177246, :y1 844.3359069824219, :x2 689.44020652771, :y2 871.8359069824219, :width 839.9999999999999, :height 1092}, :rects ({:x1 211.71132469177246, :y1 844.3359069824219, :x2 535.7226161956787, :y2 871.8359069824219, :width 839.9999999999999, :height 1092} {:x1 625.1171474456787, :y1 844.3359069824219, :x2 689.44020652771, :y2 871.8359069824219, :width 839.9999999999999, :height 1092} {:x1 540.3775844573975, :y1 847.3957824707031, :x2 620.1536464691162, :y2 868.2291564941406, :width 839.9999999999999, :height 1092}), :page 333}, :content {:text "o it also requires type information for anabstractreferenc"}, :properties {:color "yellow"}} {:id #uuid "62c64ce5-e565-4b3d-9fdb-6c3c6c171cbf", :page 334, :position {:bounding {:x1 89.29687309265137, :y1 122.17446899414062, :x2 750.0738124847412, :y2 173.74996948242188, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.29687309265137, :y1 122.17446899414062, :x2 750.0738124847412, :y2 149.67446899414062, :width 839.9999999999999, :height 1092} {:x1 590.5208339691162, :y1 126.34115600585938, :x2 750.0738124847412, :y2 145.50778198242188, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 146.24996948242188, :x2 481.75134086608887, :y2 173.74996948242188, :width 839.9999999999999, :height 1092}), :page 334}, :content {:text "Abstract functions and properties must somehow exist (be madeconcrete) in the classthat you ultimately create from the abstract class."}, :properties {:color "yellow"}} {:id #uuid "62c64cf5-cafb-4e96-8c30-3be800a723d4", :page 334, :position {:bounding {:x1 89.29687309265137, :y1 179.97396850585938, :x2 753.2777309417725, :y2 279.7005310058594, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.29687309265137, :y1 179.97396850585938, :x2 750.5113506317139, :y2 207.47396850585938, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 204.04946899414062, :x2 750.5364360809326, :y2 231.54946899414062, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 208.21615600585938, :x2 750.5364360809326, :y2 227.38278198242188, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 228.12496948242188, :x2 311.76782035827637, :y2 255.62496948242188, :width 839.9999999999999, :height 1092} {:x1 404.14061546325684, :y1 228.12496948242188, :x2 753.2777309417725, :y2 255.62496948242188, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 232.29165649414062, :x2 753.2777309417725, :y2 251.45834350585938, :width 839.9999999999999, :height 1092} {:x1 89.44009971618652, :y1 252.20053100585938, :x2 374.0485591888428, :y2 279.7005310058594, :width 839.9999999999999, :height 1092}), :page 334}, :content {:text "All functions and properties declared in an interface are abstract by default, whichmakes an interface similar to an abstract class. When an interface contains a functionor property declaration, theabstractmodifier is redundant and can be removed.These two interfaces are equivalent:"}, :properties {:color "yellow"}} {:id #uuid "62c64d2f-f505-49bf-b161-2252aa552b0e", :page 334, :position {:bounding {:x1 89.99999809265137, :y1 593.5416564941406, :x2 750.5321865081787, :y2 645.1171569824219, :width 839.9999999999999, :height 1092}, :rects ({:x1 578.6394863128662, :y1 593.5416564941406, :x2 750.5321865081787, :y2 621.0416564941406, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 617.6171569824219, :x2 404.6613368988037, :y2 645.1171569824219, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 621.7838439941406, :x2 191.4173641204834, :y2 640.9505310058594, :width 839.9999999999999, :height 1092}), :page 334}, :content {:text " an abstract class cancontainstate, while an interface cannot."}, :properties {:color "yellow"}} {:id #uuid "62c64dbc-e45d-4759-83f1-842051ae66d7", :page 335, :position {:bounding {:x1 89.29687309265137, :y1 122.17446899414062, :x2 750.4830913543701, :y2 173.75, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.29687309265137, :y1 122.17446899414062, :x2 750.4830913543701, :y2 149.67446899414062, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 146.25, :x2 279.5178813934326, :y2 173.75, :width 839.9999999999999, :height 1092}), :page 335}, :content {:text "An interface may declare properties, but actual data is only stored in classes thatimplement the interface"}, :properties {:color "yellow"}} {:id #uuid "62c64e1a-199b-4e45-973f-b4e41b57daf9", :page 335, :position {:bounding {:x1 89.99999809265137, :y1 647.5780868530273, :x2 425.37697410583496, :y2 748.6067733764648, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 647.5780868530273, :x2 208.73697471618652, :y2 666.7447738647461, :width 839.9999999999999, :height 1092} {:x1 108.12499046325684, :y1 668.0468368530273, :x2 298.4816188812256, :y2 687.2135238647461, :width 839.9999999999999, :height 1092} {:x1 370.9895839691162, :y1 668.0468368530273, :x2 425.37697410583496, :y2 687.2135238647461, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 688.5155868530273, :x2 189.71414756774902, :y2 707.6822738647461, :width 839.9999999999999, :height 1092} {:x1 108.12499046325684, :y1 708.9843368530273, :x2 299.3880214691162, :y2 728.1510238647461, :width 839.9999999999999, :height 1092} {:x1 370.9895839691162, :y1 708.9843368530273, :x2 425.37697410583496, :y2 728.1510238647461, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 729.4400863647461, :x2 99.97395896911621, :y2 748.6067733764648, :width 839.9999999999999, :height 1092}), :page 335}, :content {:text "classActual(overridevalch: Char// [1]): Parent {overridefunf() =17// [2]}"}, :properties {:color "green"}} {:id #uuid "62c64e2e-10d6-4acf-86fc-91146661e0e4", :page 335, :position {:bounding {:x1 89.99999809265137, :y1 770.3775863647461, :x2 425.37697410583496, :y2 871.4062118530273, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 770.3775863647461, :x2 289.4118251800537, :y2 789.5442733764648, :width 839.9999999999999, :height 1092} {:x1 108.12499046325684, :y1 790.8333358764648, :x2 298.4816188812256, :y2 809.9999618530273, :width 839.9999999999999, :height 1092} {:x1 370.9895839691162, :y1 790.8333358764648, :x2 425.37697410583496, :y2 809.9999618530273, :width 839.9999999999999, :height 1092} {:x1 126.24999046325684, :y1 811.3020858764648, :x2 225.97093772888184, :y2 830.4687118530273, :width 839.9999999999999, :height 1092} {:x1 108.12499046325684, :y1 831.7708358764648, :x2 299.3880214691162, :y2 850.9374618530273, :width 839.9999999999999, :height 1092} {:x1 370.9895839691162, :y1 831.7708358764648, :x2 425.37697410583496, :y2 850.9374618530273, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 852.2395858764648, :x2 99.97395896911621, :y2 871.4062118530273, :width 839.9999999999999, :height 1092}), :page 335}, :content {:text "classOther: Parent {overridevalch: Char// [3]get() ='B'overridefunf() =34// [4]}"}, :properties {:color "green"}} {:id #uuid "62c64e47-8787-4c44-9b30-04212254c6d2", :page 336, :position {:bounding {:x1 89.99999809265137, :y1 122.1744384765625, :x2 750.069845199585, :y2 173.75, :width 839.9999999999999, :height 1092}, :rects ({:x1 155.23436546325684, :y1 122.1744384765625, :x2 385.13222312927246, :y2 149.6744384765625, :width 839.9999999999999, :height 1092} {:x1 415.74217796325684, :y1 122.1744384765625, :x2 609.7545986175537, :y2 149.6744384765625, :width 839.9999999999999, :height 1092} {:x1 650.3385219573975, :y1 122.1744384765625, :x2 750.069845199585, :y2 149.6744384765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 125.24737548828125, :x2 750.069845199585, :y2 146.0806884765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 146.25, :x2 409.85290336608887, :y2 173.75, :width 839.9999999999999, :height 1092}), :page 336}, :content {:text "Parentdeclares an abstract propertychand an abstract functionf()that must beoverridden in any implementing classes"}, :properties {:color "green"}} {:id #uuid "62c64e4b-c443-4c42-ad2e-c5128b79a967", :page 336, :position {:bounding {:x1 89.99999809265137, :y1 146.25, :x2 753.5125942230225, :y2 197.82550048828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 419.2253017425537, :y1 146.25, :x2 753.5125942230225, :y2 173.75, :width 839.9999999999999, :height 1092} {:x1 468.8020839691162, :y1 150.4166259765625, :x2 753.5125942230225, :y2 169.58331298828125, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 170.32550048828125, :x2 382.86181449890137, :y2 197.82550048828125, :width 839.9999999999999, :height 1092}), :page 336}, :content {:text "Lines[1]-[4]show different implementa-tions of these members in subclasses."}, :properties {:color "green"}} {:id #uuid "62c64f4a-eeef-4f7c-ab57-1efc937b3ece", :page 336, :position {:bounding {:x1 89.99999809265137, :y1 204.71356201171875, :x2 751.9922695159912, :y2 256.2890625, :width 839.9999999999999, :height 1092}, :rects ({:x1 194.7786464691162, :y1 204.71356201171875, :x2 717.419454574585, :y2 232.21356201171875, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 207.7864990234375, :x2 751.9922695159912, :y2 228.61981201171875, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 228.7890625, :x2 165.11246299743652, :y2 256.2890625, :width 839.9999999999999, :height 1092}), :page 336}, :content {:text "Parent.g()uses abstract members that have no definitions at the point whereg()is defined"}, :properties {:color "yellow"}} {:id #uuid "62c64fc3-d5d6-4561-9e0b-d5fce0ab1786", :page 336, :position {:bounding {:x1 89.99999809265137, :y1 228.7890625, :x2 750.5321712493896, :y2 304.44012451171875, :width 839.9999999999999, :height 1092}, :rects ({:x1 174.2251033782959, :y1 228.7890625, :x2 750.5321712493896, :y2 256.2890625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 252.8646240234375, :x2 750.4772319793701, :y2 280.3646240234375, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 257.03125, :x2 750.4772319793701, :y2 276.19793701171875, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 276.94012451171875, :x2 486.05627250671387, :y2 304.44012451171875, :width 839.9999999999999, :height 1092}), :page 336}, :content {:text "Interfaces and abstract classes guarantee that all abstract properties andfunctions are implemented before any objects can be created—and you can’t calla member function unless you’ve got an object."}, :properties {:color "yellow"}} {:id #uuid "62c65036-9d1f-439d-a122-1e28c92a75f5", :page 336, :position {:bounding {:x1 89.99999809265137, :y1 335.40362548828125, :x2 750.5162944793701, :y2 386.97918701171875, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 335.40362548828125, :x2 750.5162944793701, :y2 362.90362548828125, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 359.47918701171875, :x2 704.5320415496826, :y2 386.97918701171875, :width 839.9999999999999, :height 1092}), :page 336}, :content {:text "Because an interface can contain function implementations, it can also containcustom property accessors if the corresponding property doesn’t change state:"}, :properties {:color "yellow"}} {:id #uuid "62c65237-fb5d-4080-972f-a4eb1720b521", :page 336, :position {:bounding {:x1 89.44009971618652, :y1 734.1015396118164, :x2 750.5103511810303, :y2 785.6770401000977, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.44009971618652, :y1 734.1015396118164, :x2 750.5103511810303, :y2 761.6015396118164, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 758.1770401000977, :x2 482.6970500946045, :y2 785.6770401000977, :width 839.9999999999999, :height 1092}), :page 336}, :content {:text "To understand the importance of “a class without state,” let’s look at the concept ofmultiple inheritance, which Kotlin doesn’t support"}, :properties {:color "yellow"}} {:id #uuid "62c970a4-a4d4-4308-91ee-29cf447392ff", :page 337, :position {:bounding {:x1 89.67447471618652, :y1 388.41143798828125, :x2 750.4882564544678, :y2 439.9869384765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.67447471618652, :y1 388.41143798828125, :x2 750.4882564544678, :y2 415.91143798828125, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 412.4869384765625, :x2 308.7035503387451, :y2 439.9869384765625, :width 839.9999999999999, :height 1092}), :page 337}, :content {:text "Java works the same way. The original Java designers decided that C++ multipleinheritance was a bad idea"}, :properties {:color "blue"}} {:id #uuid "62c97108-394f-4e72-975c-343fde841567", :page 337, :position {:bounding {:x1 89.99999809265137, :y1 460.63800048828125, :x2 750.5356044769287, :y2 512.2265625, :width 839.9999999999999, :height 1092}, :rects ({:x1 710.465841293335, :y1 460.63800048828125, :x2 750.5356044769287, :y2 488.13800048828125, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 484.7265625, :x2 645.4968852996826, :y2 512.2265625, :width 839.9999999999999, :height 1092}), :page 337}, :content {:text " Javaadded an elegant solution to this problem by introducing interfaces"}, :properties {:color "yellow"}} {:id #uuid "62c97419-913a-4964-9ee5-09263756fa14", :page 337, :position {:bounding {:x1 89.07552146911621, :y1 795.0129814147949, :x2 750.5207118988037, :y2 846.6015434265137, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.07552146911621, :y1 795.0129814147949, :x2 750.5207118988037, :y2 822.5129814147949, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 819.1015434265137, :x2 422.22656059265137, :y2 846.6015434265137, :width 839.9999999999999, :height 1092}), :page 337}, :content {:text "When inheriting from several interfaces, it’s possible to simultaneously override twoor more functions with the same signature"}, :properties {:color "yellow"}} {:id #uuid "62c97476-b4a9-4260-b432-eb6031c9954c", :page 337, :position {:bounding {:x1 89.99999809265137, :y1 843.1770439147949, :x2 750.47585105896, :y2 894.7526054382324, :width 839.9999999999999, :height 1092}, :rects ({:x1 228.7593593597412, :y1 843.1770439147949, :x2 750.47585105896, :y2 870.6770439147949, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 867.2526054382324, :x2 319.241849899292, :y2 894.7526054382324, :width 839.9999999999999, :height 1092} {:x1 393.85414695739746, :y1 867.2526054382324, :x2 398.22914695739746, :y2 894.7526054382324, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 871.4192314147949, :x2 393.8542079925537, :y2 890.5859184265137, :width 839.9999999999999, :height 1092}), :page 337}, :content {:text " If function or property signatures collide, you must resolve thecollisions by hand, as seen inclass C:"}, :properties {:color "yellow"}} {:id #uuid "62c9748b-c11a-4e98-bb57-4ff22bb18eb1", :page 338, :position {:bounding {:x1 89.99999809265137, :y1 126.57553100585938, :x2 389.16381645202637, :y2 145.7421875, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 126.57553100585938, :x2 389.16381645202637, :y2 145.7421875, :width 839.9999999999999, :height 1092}), :page 338}, :content {:text "// Abstract/InterfaceCollision.kt"}, :properties {:color "yellow"}} {:id #uuid "62c97512-b1a8-498c-87d5-170e670de05e", :page 338, :position {:bounding {:x1 108.12499046325684, :y1 372.1484375, :x2 244.1016445159912, :y2 411.78387451171875, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.12499046325684, :y1 372.1484375, :x2 208.73697471618652, :y2 391.31512451171875, :width 839.9999999999999, :height 1092} {:x1 108.12499046325684, :y1 392.6171875, :x2 244.1016445159912, :y2 411.78387451171875, :width 839.9999999999999, :height 1092}), :page 338}, :content {:text "funf() =2fung() =\"B.g\""}, :properties {:color "blue"}} {:id #uuid "62c97514-569b-45d1-905a-71a740b54e7e", :page 338, :position {:bounding {:x1 108.12499046325684, :y1 228.89324951171875, :x2 244.1016445159912, :y2 268.52862548828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.12499046325684, :y1 228.89324951171875, :x2 208.73697471618652, :y2 248.05987548828125, :width 839.9999999999999, :height 1092} {:x1 108.12499046325684, :y1 249.36199951171875, :x2 244.1016445159912, :y2 268.52862548828125, :width 839.9999999999999, :height 1092}), :page 338}, :content {:text "funf() =1fung() =\"A.g\""}, :properties {:color "blue"}} {:id #uuid "62c9751e-b98f-4eed-9ebb-56fb24d50682", :page 338, :position {:bounding {:x1 108.12499046325684, :y1 515.4036254882812, :x2 290.31249046325684, :y2 534.5703125, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.12499046325684, :y1 515.4036254882812, :x2 290.31249046325684, :y2 534.5703125, :width 839.9999999999999, :height 1092}), :page 338}, :content {:text "overridefunf() =0"}, :properties {:color "yellow"}} {:id #uuid "62c97523-a4d6-4d64-84b8-defebc5efc93", :page 338, :position {:bounding {:x1 108.12499046325684, :y1 535.8723754882812, :x2 389.1333827972412, :y2 555.0390625, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.12499046325684, :y1 535.8723754882812, :x2 389.1333827972412, :y2 555.0390625, :width 839.9999999999999, :height 1092}), :page 338}, :content {:text "overridefung() =super<A>.g()"}, :properties {:color "yellow"}} {:id #uuid "62c97548-170e-4060-a625-9d88b2b131a7", :page 338, :position {:bounding {:x1 89.44009971618652, :y1 780.1822891235352, :x2 750.3939113616943, :y2 855.8332901000977, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.44009971618652, :y1 780.1822891235352, :x2 197.82262229919434, :y2 807.6822891235352, :width 839.9999999999999, :height 1092} {:x1 236.40624046325684, :y1 780.1822891235352, :x2 265.84471702575684, :y2 807.6822891235352, :width 839.9999999999999, :height 1092} {:x1 304.49217796325684, :y1 780.1822891235352, :x2 435.5799160003662, :y2 807.6822891235352, :width 839.9999999999999, :height 1092} {:x1 454.21874046325684, :y1 780.1822891235352, :x2 750.24831199646, :y2 807.6822891235352, :width 839.9999999999999, :height 1092} {:x1 202.10936546325684, :y1 783.2551651000977, :x2 750.24831199646, :y2 804.0885391235352, :width 839.9999999999999, :height 1092} {:x1 105.62499046325684, :y1 804.2577896118164, :x2 135.06346702575684, :y2 831.7577896118164, :width 839.9999999999999, :height 1092} {:x1 151.17186546325684, :y1 804.2577896118164, :x2 750.3939113616943, :y2 831.7577896118164, :width 839.9999999999999, :height 1092} {:x1 89.50520896911621, :y1 807.3307266235352, :x2 750.3939113616943, :y2 828.1640396118164, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 828.3332901000977, :x2 260.76254081726074, :y2 855.8332901000977, :width 839.9999999999999, :height 1092}), :page 338}, :content {:text "The functionsf()andg()and the propertynhave identical signatures in interfacesAandB, so Kotlin doesn’t know what to do and produces an error message if youdon’t resolve the issu"}, :properties {:color "yellow"}} {:id #uuid "62c9757f-6eea-4aa0-a876-9c5844c8bb9e", :page 338, :position {:bounding {:x1 89.99999809265137, :y1 900.5598983764648, :x2 725.2474575042725, :y2 928.0598983764648, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 900.5598983764648, :x2 599.9139080047607, :y2 928.0598983764648, :width 839.9999999999999, :height 1092} {:x1 660.9244594573975, :y1 900.5598983764648, :x2 690.3629360198975, :y2 928.0598983764648, :width 839.9999999999999, :height 1092} {:x1 606.0807094573975, :y1 903.6327743530273, :x2 725.2474575042725, :y2 924.4661483764648, :width 839.9999999999999, :height 1092}), :page 338}, :content {:text "specifying the base class in angle brackets, as in the definition ofC.g()andC.n"}, :properties {:color "yellow"}} {:id #uuid "62c97621-1c00-4d0a-8a41-2913414b26f7", :page 340, :position {:bounding {:x1 89.99999809265137, :y1 182.9296875, :x2 295.2062358856201, :y2 241.2630615234375, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 182.9296875, :x2 295.2062358856201, :y2 241.2630615234375, :width 839.9999999999999, :height 1092}), :page 340}, :content {:text "Upcasting"}, :properties {:color "yellow"}} {:id #uuid "62c976d7-c9fd-4e74-95b5-6d7e5a81cd07", :page 340, :position {:bounding {:x1 131.51041221618652, :y1 261.7578125, :x2 708.9327754974365, :y2 313.33331298828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 131.51041221618652, :y1 261.7578125, :x2 708.9327754974365, :y2 289.2578125, :width 839.9999999999999, :height 1092} {:x1 131.51041221618652, :y1 285.83331298828125, :x2 257.8691921234131, :y2 313.33331298828125, :width 839.9999999999999, :height 1092} {:x1 131.51041221618652, :y1 290, :x2 257.8691921234131, :y2 309.1666564941406, :width 839.9999999999999, :height 1092}), :page 340}, :content {:text "Taking an object reference and treating it as a reference to its base type iscalledupcasting"}, :properties {:color "yellow"}} {:id #uuid "62c977cf-b8c5-46a3-a2d0-29551625d6d7", :page 340, :position {:bounding {:x1 89.99999809265137, :y1 517.3306884765625, :x2 391.20202445983887, :y2 544.8306884765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 517.3306884765625, :x2 391.20202445983887, :y2 544.8306884765625, :width 839.9999999999999, :height 1092}), :page 340}, :content {:text "Kotlin frees us from these constraints."}, :properties {:color "yellow"}} {:id #uuid "62c977f2-af10-4262-9c2f-f5c595406f9c", :page 340, :position {:bounding {:x1 89.99999809265137, :y1 517.3306884765625, :x2 750.4889736175537, :y2 568.90625, :width 839.9999999999999, :height 1092}, :rects ({:x1 464.3140163421631, :y1 517.3306884765625, :x2 750.4889736175537, :y2 544.8306884765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 541.40625, :x2 449.21456718444824, :y2 568.90625, :width 839.9999999999999, :height 1092}), :page 340}, :content {:text " stand-alone functions so everythingdoesn’t need to be contained within classes."}, :properties {:color "yellow"}} {:id #uuid "62c978cb-e593-4941-b7f3-668452f15c95", :page 340, :position {:bounding {:x1 89.99999809265137, :y1 565.4817504882812, :x2 753.4657802581787, :y2 641.1328125, :width 839.9999999999999, :height 1092}, :rects ({:x1 424.62087059020996, :y1 565.4817504882812, :x2 539.71022605896, :y2 592.9817504882812, :width 839.9999999999999, :height 1092} {:x1 593.3853969573975, :y1 565.4817504882812, :x2 753.4657802581787, :y2 592.9817504882812, :width 839.9999999999999, :height 1092} {:x1 546.4192714691162, :y1 568.5546875, :x2 753.4657802581787, :y2 589.3880004882812, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 589.5572509765625, :x2 750.5116558074951, :y2 617.0572509765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 593.7239379882812, :x2 750.5116558074951, :y2 612.890625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 613.6328125, :x2 129.6497402191162, :y2 641.1328125, :width 839.9999999999999, :height 1092}), :page 340}, :content {:text ", requiring theopenkeyword for inheri-tance makes it a very conscious and intentional choice, not something to use all thetime."}, :properties {:color "yellow"}} {:id #uuid "62c97b59-839f-42b2-9029-2f883310bec0", :page 340, :position {:bounding {:x1 426.85606956481934, :y1 648.0208129882812, :x2 584.5772914886475, :y2 675.5208129882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 426.85606956481934, :y1 648.0208129882812, :x2 584.5772914886475, :y2 675.5208129882812, :width 839.9999999999999, :height 1092}), :page 340}, :content {:text " a very specific use,"}, :properties {:color "red"}} {:id #uuid "62c97c05-a1c2-42d4-a457-bc30ae600db2", :page 342, :position {:bounding {:x1 89.99999809265137, :y1 186.69268798828125, :x2 754.988302230835, :y2 234.67449951171875, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 186.69268798828125, :x2 106.26552391052246, :y2 214.19268798828125, :width 839.9999999999999, :height 1092} {:x1 170.84634971618652, :y1 186.69268798828125, :x2 175.22134971618652, :y2 214.19268798828125, :width 839.9999999999999, :height 1092} {:x1 244.5833339691162, :y1 186.69268798828125, :x2 518.4879970550537, :y2 214.19268798828125, :width 839.9999999999999, :height 1092} {:x1 582.8515224456787, :y1 186.69268798828125, :x2 587.2265224456787, :y2 214.19268798828125, :width 839.9999999999999, :height 1092} {:x1 651.8228969573975, :y1 186.69268798828125, :x2 690.4132900238037, :y2 214.19268798828125, :width 839.9999999999999, :height 1092} {:x1 111.01561546325684, :y1 189.765625, :x2 754.988302230835, :y2 210.59893798828125, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 213.84112548828125, :x2 119.92194175720215, :y2 234.67449951171875, :width 839.9999999999999, :height 1092}), :page 342}, :content {:text "Inmain(),show()is called with three different types:Circle,Square, andTrian-gle"}, :properties {:color "yellow"}} {:id #uuid "62c97e80-4c94-4acf-856e-9c20a7ca760e", :page 342, :position {:bounding {:x1 89.99999809265137, :y1 234.85678100585938, :x2 750.205099105835, :y2 286.4322814941406, :width 839.9999999999999, :height 1092}, :rects ({:x1 138.90671348571777, :y1 234.85678100585938, :x2 450.2597408294678, :y2 262.3567810058594, :width 839.9999999999999, :height 1092} {:x1 504.6223964691162, :y1 234.85678100585938, :x2 750.205099105835, :y2 262.3567810058594, :width 839.9999999999999, :height 1092} {:x1 454.76561546325684, :y1 237.91665649414062, :x2 750.205099105835, :y2 258.75, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 258.9322814941406, :x2 310.7860622406006, :y2 286.4322814941406, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 263.0989685058594, :x2 170.54050254821777, :y2 282.265625, :width 839.9999999999999, :height 1092}), :page 342}, :content {:text "Each of those types is treated as a basicShape—we say that the specific typesareupcastto the basic type."}, :properties {:color "yellow"}} {:id #uuid "62c97f20-f826-449d-9756-d7c8f6c1acd6", :page 342, :position {:bounding {:x1 89.99999809265137, :y1 550.8333129882812, :x2 753.0598964691162, :y2 626.4843444824219, :width 839.9999999999999, :height 1092}, :rects ({:x1 444.9746608734131, :y1 550.8333129882812, :x2 750.427267074585, :y2 578.3333129882812, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 574.9088439941406, :x2 510.813871383667, :y2 602.4088439941406, :width 839.9999999999999, :height 1092} {:x1 573.6197719573975, :y1 574.9088439941406, :x2 577.9947719573975, :y2 602.4088439941406, :width 839.9999999999999, :height 1092} {:x1 641.1588344573975, :y1 574.9088439941406, :x2 665.5933437347412, :y2 602.4088439941406, :width 839.9999999999999, :height 1092} {:x1 748.6848964691162, :y1 574.9088439941406, :x2 753.0598964691162, :y2 602.4088439941406, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 579.0755004882812, :x2 753.0598964691162, :y2 599.9088439941406, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 598.9843444824219, :x2 445.9392681121826, :y2 626.4843444824219, :width 839.9999999999999, :height 1092} {:x1 505.4817714691162, :y1 598.9843444824219, :x2 557.56227684021, :y2 626.4843444824219, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 603.1510314941406, :x2 500.51698875427246, :y2 622.3176879882812, :width 839.9999999999999, :height 1092}), :page 342}, :content {:text " In the process of upcasting, we lose thespecific information about whether an object is of typeCircle,Square, orTriangle.In each case, it becomes nothing more than aShapeobject."}, :properties {:color "yellow"}} {:id #uuid "62c97f28-2b95-4b42-9ac9-72d70daaded5", :page 342, :position {:bounding {:x1 89.44009971618652, :y1 633.3723754882812, :x2 710.9806270599365, :y2 660.8723754882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.44009971618652, :y1 633.3723754882812, :x2 710.9806270599365, :y2 660.8723754882812, :width 839.9999999999999, :height 1092}), :page 342}, :content {:text "Treating a specific type as a more general type is the entire point of inheritance"}, :properties {:color "yellow"}} {:id #uuid "62c97f42-53bf-46b8-97dd-b4bb47aa14e1", :page 342, :position {:bounding {:x1 329.6123561859131, :y1 657.4479064941406, :x2 378.81859397888184, :y2 684.9479064941406, :width 839.9999999999999, :height 1092}, :rects ({:x1 329.6123561859131, :y1 657.4479064941406, :x2 378.81859397888184, :y2 684.9479064941406, :width 839.9999999999999, :height 1092}), :page 342}, :content {:text " solely"}, :properties {:color "purple"}} {:id #uuid "62c97f53-45ef-46f2-997f-6036241d3a68", :page 342, :position {:bounding {:x1 89.99999809265137, :y1 681.5234069824219, :x2 751.9934902191162, :y2 733.0989074707031, :width 839.9999999999999, :height 1092}, :rects ({:x1 512.5395107269287, :y1 681.5234069824219, :x2 686.824728012085, :y2 709.0234069824219, :width 839.9999999999999, :height 1092} {:x1 692.1614589691162, :y1 684.5963439941406, :x2 751.9934902191162, :y2 705.4296569824219, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 705.5989074707031, :x2 538.5324382781982, :y2 733.0989074707031, :width 839.9999999999999, :height 1092}), :page 342}, :content {:text " we can write a singleshow()function instead of writing one for every type of element. "}, :properties {:color "yellow"}} {:id #uuid "62c98253-58c9-4f8d-a559-54b5bf536e58", :page 343, :position {:bounding {:x1 89.99999809265137, :y1 122.17449951171875, :x2 753.5141201019287, :y2 197.82550048828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 652.9801845550537, :y1 122.17449951171875, :x2 753.5141201019287, :y2 149.67449951171875, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 146.25, :x2 750.177755355835, :y2 173.75, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 150.41668701171875, :x2 750.177755355835, :y2 169.58331298828125, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 170.32550048828125, :x2 122.08620262145996, :y2 197.82550048828125, :width 839.9999999999999, :height 1092}), :page 343}, :content {:text "after upcast-ing, the derived type can be treatedexactlylike the base type—no more and noless."}, :properties {:color "yellow"}} {:id #uuid "62c9833f-483d-4b6f-bb22-cf1a25322e2e", :page 343, :position {:bounding {:x1 89.99999809265137, :y1 780.8984146118164, :x2 750.4077816009521, :y2 832.4739151000977, :width 839.9999999999999, :height 1092}, :rects ({:x1 185.2257137298584, :y1 780.8984146118164, :x2 750.4077816009521, :y2 808.3984146118164, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 804.9739151000977, :x2 110.05362510681152, :y2 832.4739151000977, :width 839.9999999999999, :height 1092} {:x1 165.88541221618652, :y1 804.9739151000977, :x2 423.4498043060303, :y2 832.4739151000977, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 809.1406021118164, :x2 478.10814476013184, :y2 829.9739151000977, :width 839.9999999999999, :height 1092}), :page 343}, :content {:text "The only member functions available are the ones that are common toallShapes—those defined in the base typeShape"}, :properties {:color "yellow"}} {:id #uuid "62c983f3-6ac8-4cbf-a894-4b991072bd3e", :page 349, :position {:bounding {:x1 89.99999809265137, :y1 182.92967224121094, :x2 350.670072555542, :y2 241.2630157470703, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 182.92967224121094, :x2 350.670072555542, :y2 241.2630157470703, :width 839.9999999999999, :height 1092}), :page 349}, :content {:text "Composition"}, :properties {:color "yellow"}} {:id #uuid "62ca611f-05d2-4b10-a89f-e2937ddad779", :page 309, :position {:bounding {:x1 67.390625, :y1 136.84375, :x2 223.9781494140625, :y2 180.84375, :width 629.0000000000001, :height 817.7000000000002}, :rects ({:x1 67.390625, :y1 136.84375, :x2 223.9781494140625, :y2 180.84375, :width 629.0000000000001, :height 817.7000000000002}), :page 309}, :content {:text "Interfaces"}, :properties {:color "yellow"}} {:id #uuid "62ca613c-74a4-4971-a4e7-86aec85142fc", :page 242, :position {:bounding {:x1 67.390625, :y1 136.84375, :x2 207.19961547851562, :y2 180.84375, :width 629.0000000000001, :height 817.7000000000002}, :rects ({:x1 67.390625, :y1 136.84375, :x2 207.19961547851562, :y2 180.84375, :width 629.0000000000001, :height 817.7000000000002}), :page 242}, :content {:text "Lambdas"}, :properties {:color "yellow"}} {:id #uuid "62ca6174-9170-4515-95d7-a2658ec635c9", :page 252, :position {:bounding {:x1 67.390625, :y1 136.84375, :x2 465.5870361328125, :y2 180.84375, :width 629.0000000000001, :height 817.7000000000002}, :rects ({:x1 67.390625, :y1 136.84375, :x2 465.5870361328125, :y2 180.84375, :width 629.0000000000001, :height 817.7000000000002}), :page 252}, :content {:text "Operations on Collections"}, :properties {:color "yellow"}} {:id #uuid "62ca92db-9f00-4b56-9255-427c1ff128c3", :page 268, :position {:bounding {:x1 61.49041384458542, :y1 124.86363220214844, :x2 322.0692712664604, :y2 165.02992248535156, :width 574, :height 746.2}, :rects ({:x1 61.49041384458542, :y1 124.86363220214844, :x2 322.0692712664604, :y2 165.02992248535156, :width 574, :height 746.2}), :page 268}, :content {:text "Manipulating Lists"}, :properties {:color "yellow"}} {:id #uuid "62ca92ee-9e59-4d85-aba0-7ef9e135c7b8", :page 274, :position {:bounding {:x1 61.49041384458542, :y1 124.86361694335938, :x2 260.1991540789604, :y2 165.02993774414062, :width 574, :height 746.2}, :rects ({:x1 61.49041384458542, :y1 124.86361694335938, :x2 260.1991540789604, :y2 165.02993774414062, :width 574, :height 746.2}), :page 274}, :content {:text "Building Maps"}, :properties {:color "yellow"}} {:id #uuid "62cbbf7c-2255-4cd2-adf5-5193514bad16", :page 282, :position {:bounding {:x1 70.17694753408432, :y1 141.25250244140625, :x2 240.36064809560776, :y2 185.9831771850586, :width 654.9999999999999, :height 851.5}, :rects ({:x1 70.17694753408432, :y1 141.25250244140625, :x2 240.36064809560776, :y2 185.9831771850586, :width 654.9999999999999, :height 851.5}), :page 282}, :content {:text "Sequences"}, :properties {:color "yellow"}} {:id #uuid "62cbbfe9-a0f5-494b-913b-a94c2f277827", :page 283, :position {:bounding {:x1 178, :y1 126.25, :x2 509, :y2 324.25, :width 654.9999999999999, :height 851.5}, :rects (), :page 283}, :content {:text "[:span]", :image 1657520104379}, :properties {:color "blue"}} {:id #uuid "62cbbff7-e230-4511-9176-e675fe0f9f24", :page 283, :position {:bounding {:x1 173, :y1 449.046875, :x2 492, :y2 676.046875, :width 654.9999999999999, :height 851.5}, :rects (), :page 283}, :content {:text "[:span]", :image 1657520118126}, :properties {:color "blue"}} {:id #uuid "62cbcf76-1dc3-40e0-b817-6ae26e3543ea", :page 286, :position {:bounding {:x1 469.84375, :y1 734.484375, :x2 623.2896728515625, :y2 752.484375, :width 718.0000000000001, :height 933.4000000000002}, :rects ({:x1 469.84375, :y1 734.484375, :x2 623.2896728515625, :y2 752.484375, :width 718.0000000000001, :height 933.4000000000002}), :page 286}, :content {:text "generateSequence()"}, :properties {:color "green"}} {:id #uuid "62cbcf87-cbb3-45b3-bffa-86a930978cf8", :page 285, :position {:bounding {:x1 107.90625, :y1 688.546875, :x2 208.64947509765625, :y2 704.546875, :width 718.0000000000001, :height 933.4000000000002}, :rects ({:x1 107.90625, :y1 688.546875, :x2 208.64947509765625, :y2 704.546875, :width 718.0000000000001, :height 933.4000000000002}), :page 285}, :content {:text ".asSequence()"}, :properties {:color "yellow"}} {:id #uuid "62cbcfa7-87c1-4055-b6d3-ca60183e88b0", :page 283, :position {:bounding {:x1 339.2140808105469, :y1 821.984375, :x2 446.8020324707031, :y2 845.984375, :width 718.0000000000001, :height 933.4000000000002}, :rects ({:x1 339.2140808105469, :y1 821.984375, :x2 339.23004150390625, :y2 845.984375, :width 718.0000000000001, :height 933.4000000000002} {:x1 344.5, :y1 824.46875, :x2 446.8020324707031, :y2 842.46875, :width 718.0000000000001, :height 933.4000000000002}), :page 283}, :content {:text "asSequence()"}, :properties {:color "green"}} {:id #uuid "62cbd10f-bf02-4ceb-9e7f-098284f3f6a9", :page 286, :position {:bounding {:x1 76.4375, :y1 153.953125, :x2 411.04608154296875, :y2 177.953125, :width 718.0000000000001, :height 933.4000000000002}, :rects ({:x1 76.4375, :y1 153.953125, :x2 261.4460144042969, :y2 177.953125, :width 718.0000000000001, :height 933.4000000000002} {:x1 340.09375, :y1 153.953125, :x2 411.04608154296875, :y2 177.953125, :width 718.0000000000001, :height 933.4000000000002} {:x1 267.328125, :y1 156.453125, :x2 335.5342102050781, :y2 174.453125, :width 718.0000000000001, :height 933.4000000000002}), :page 286}, :content {:text "There are two categories ofSequenceoperations"}, :properties {:color "green"}} {:id #uuid "62cbd125-56f2-4fe5-b568-3104ef1f80e0", :page 286, :position {:bounding {:x1 76.921875, :y1 174.546875, :x2 641.09326171875, :y2 219.125, :width 718.0000000000001, :height 933.4000000000002}, :rects ({:x1 542.015625, :y1 174.546875, :x2 567.1801147460938, :y2 198.546875, :width 718.0000000000001, :height 933.4000000000002} {:x1 620.15625, :y1 174.546875, :x2 641.09326171875, :y2 198.546875, :width 718.0000000000001, :height 933.4000000000002} {:x1 468.65625, :y1 177.03125, :x2 641.09326171875, :y2 195.03125, :width 718.0000000000001, :height 933.4000000000002} {:x1 76.921875, :y1 195.125, :x2 242.72683715820312, :y2 219.125, :width 718.0000000000001, :height 933.4000000000002}), :page 286}, :content {:text "filter()andmap()areintermediate operations."}, :properties {:color "green"}} {:id #uuid "62cbd12b-4858-416a-a316-8880449aa3ec", :page 286, :position {:bounding {:x1 246.87615966796875, :y1 195.125, :x2 547.9717407226562, :y2 219.125, :width 718.0000000000001, :height 933.4000000000002}, :rects ({:x1 246.87615966796875, :y1 195.125, :x2 479.93975830078125, :y2 219.125, :width 718.0000000000001, :height 933.4000000000002} {:x1 479.765625, :y1 197.609375, :x2 547.9717407226562, :y2 215.609375, :width 718.0000000000001, :height 933.4000000000002}), :page 286}, :content {:text "Terminal operations return a non-Sequence"}, :properties {:color "green"}} {:id #uuid "62ccfa9b-2f73-4947-b4cd-bfc7635445da", :page 345, :position {:bounding {:x1 90, :y1 894.578125, :x2 750.0357666015625, :y2 970.734375, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 894.578125, :x2 171.3486328125, :y2 922.578125, :width 839.9999999999999, :height 1092} {:x1 240.796875, :y1 894.578125, :x2 525.9530029296875, :y2 922.578125, :width 839.9999999999999, :height 1092} {:x1 565.421875, :y1 894.578125, :x2 595.9759521484375, :y2 922.578125, :width 839.9999999999999, :height 1092} {:x1 635.578125, :y1 894.578125, :x2 651.247802734375, :y2 922.578125, :width 839.9999999999999, :height 1092} {:x1 715.90625, :y1 894.578125, :x2 750.027099609375, :y2 922.578125, :width 839.9999999999999, :height 1092} {:x1 176.125, :y1 898.15625, :x2 750.027099609375, :y2 919.15625, :width 839.9999999999999, :height 1092} {:x1 90, :y1 918.65625, :x2 455.53204345703125, :y2 946.65625, :width 839.9999999999999, :height 1092} {:x1 491.046875, :y1 918.65625, :x2 541.6402587890625, :y2 946.65625, :width 839.9999999999999, :height 1092} {:x1 577.359375, :y1 918.65625, :x2 619.8822021484375, :y2 946.65625, :width 839.9999999999999, :height 1092} {:x1 655.578125, :y1 918.65625, :x2 750.0357666015625, :y2 946.65625, :width 839.9999999999999, :height 1092} {:x1 90, :y1 923.65625, :x2 750.0357666015625, :y2 944.65625, :width 839.9999999999999, :height 1092} {:x1 90, :y1 942.734375, :x2 105.669677734375, :y2 970.734375, :width 839.9999999999999, :height 1092} {:x1 90, :y1 947.734375, :x2 141.60708618164062, :y2 966.734375, :width 839.9999999999999, :height 1092}), :page 345}, :content {:text "Notice thetalk()function parameter. When passing aDogor aCattotalk(), thespecific type is forgotten and becomes a plainPet—bothDogs andCats areupcasttoPet"}, :properties {:color "yellow"}} {:id #uuid "62ccfa9f-e32f-4f8b-b77a-446bce8e0650", :page 345, :position {:bounding {:x1 90, :y1 942.734375, :x2 750.1306762695312, :y2 994.8125, :width 839.9999999999999, :height 1092}, :rects ({:x1 150.90283203125, :y1 942.734375, :x2 443.66259765625, :y2 970.734375, :width 839.9999999999999, :height 1092} {:x1 479.484375, :y1 942.734375, :x2 750.1306762695312, :y2 970.734375, :width 839.9999999999999, :height 1092} {:x1 449.5625, :y1 946.296875, :x2 750.1306762695312, :y2 967.296875, :width 839.9999999999999, :height 1092} {:x1 90, :y1 966.8125, :x2 242.67105102539062, :y2 994.8125, :width 839.9999999999999, :height 1092} {:x1 297.5, :y1 966.8125, :x2 304.78125, :y2 994.8125, :width 839.9999999999999, :height 1092} {:x1 90, :y1 971.8125, :x2 297.5269775390625, :y2 990.8125, :width 839.9999999999999, :height 1092}), :page 345}, :content {:text "The objects are now treated as plainPets so shouldn’t the output for bothlines[1]and[2]be\"Pet\"?"}, :properties {:color "green"}} {:id #uuid "62ccfabe-37e1-4174-aa05-804822509d33", :page 346, :position {:bounding {:x1 90, :y1 145.421875, :x2 753.5089111328125, :y2 197.5, :width 839.9999999999999, :height 1092}, :rects ({:x1 489.99462890625, :y1 145.421875, :x2 753.5089111328125, :y2 173.421875, :width 839.9999999999999, :height 1092} {:x1 90, :y1 169.5, :x2 461.8717041015625, :y2 197.5, :width 839.9999999999999, :height 1092}), :page 346}, :content {:text " the correct subclass implementa-tion is called, and you get the desired behavior."}, :properties {:color "green"}} {:id #uuid "62ccfac7-6b27-4859-a7d5-597bcf45b7ae", :page 346, :position {:bounding {:x1 90, :y1 203.875, :x2 753.4432373046875, :y2 231.875, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 203.875, :x2 753.4432373046875, :y2 231.875, :width 839.9999999999999, :height 1092}), :page 346}, :content {:text "Polymorphism occurs when a parent class reference contains a child class instance."}, :properties {:color "green"}} {:id #uuid "62ccfae8-d15d-4612-a0cb-910e13282fd6", :page 346, :position {:bounding {:x1 89.99999809265137, :y1 228.7890625, :x2 750.4795742034912, :y2 280.36456298828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 527.1462001800537, :y1 228.7890625, :x2 750.4795742034912, :y2 256.2890625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 252.86456298828125, :x2 469.878080368042, :y2 280.36456298828125, :width 839.9999999999999, :height 1092}), :page 346}, :content {:text " polymorphism produces thecorrect overridden member from the child class."}, :properties {:color "green"}} {:id #uuid "62ccfb04-68f6-4698-bb98-e20a83780074", :page 345, :position {:bounding {:x1 46.64000000000002, :y1 366.0800000000001, :x2 412.89000000000004, :y2 784.8527661132814, :width 739.2, :height 960.9600000000002}, :rects (), :page 345}, :content {:text "[:span]", :image 1657600935209}, :properties {:color "blue"}} {:id #uuid "62ccfc05-2833-4420-aa0f-6bccbd7f5e0a", :page 346, :position {:bounding {:x1 79.19270324707031, :y1 253.11196899414062, :x2 543.7775268554688, :y2 277.2786560058594, :width 739.2, :height 960.9600000000002}, :rects ({:x1 79.19270324707031, :y1 253.11196899414062, :x2 543.7775268554688, :y2 277.2786560058594, :width 739.2, :height 960.9600000000002} {:x1 486.3541259765625, :y1 256.4452819824219, :x2 539.8900146484375, :y2 273.9452819824219, :width 739.2, :height 960.9600000000002}), :page 346}, :content {:text "Connecting a function call to a function body is calledbinding."}, :properties {:color "yellow"}} {:id #uuid "62ccfc38-ab43-450b-ad68-8531d12de679", :page 346, :position {:bounding {:x1 79.19270324707031, :y1 316.6796569824219, :x2 660.377685546875, :y2 362.0312194824219, :width 739.2, :height 960.9600000000002}, :rects ({:x1 576.638427734375, :y1 316.6796569824219, :x2 660.377685546875, :y2 340.8463439941406, :width 739.2, :height 960.9600000000002} {:x1 79.19270324707031, :y1 337.8645935058594, :x2 592.3267211914062, :y2 362.0312194824219, :width 739.2, :height 960.9600000000002} {:x1 79.19270324707031, :y1 341.1979064941406, :x2 588.6326293945312, :y2 358.6979064941406, :width 739.2, :height 960.9600000000002}), :page 346}, :content {:text "he functionbody must be determined dynamically, at runtime, usingdynamic binding."}, :properties {:color "yellow"}} {:id #uuid "62ccfc3c-844c-4070-8614-d0364487aec7", :page 346, :position {:bounding {:x1 230.4296875, :y1 359.0494689941406, :x2 465.53704833984375, :y2 383.2161560058594, :width 739.2, :height 960.9600000000002}, :rects ({:x1 230.4296875, :y1 359.0494689941406, :x2 465.53704833984375, :y2 383.2161560058594, :width 739.2, :height 960.9600000000002} {:x1 319.9088439941406, :y1 362.3827819824219, :x2 461.883544921875, :y2 379.8827819824219, :width 739.2, :height 960.9600000000002}), :page 346}, :content {:text "late bindingordynamic dispatch."}, :properties {:color "yellow"}} {:id #uuid "62cd03c3-a431-4ba5-93e0-0d28410e65ea", :page 346, :position {:bounding {:x1 79.19270324707031, :y1 779.9479064941406, :x2 342.42718505859375, :y2 850.6380004882812, :width 739.2, :height 960.9600000000002}, :rects ({:x1 79.19270324707031, :y1 779.9479064941406, :x2 199.63540649414062, :y2 796.6145629882812, :width 739.2, :height 960.9600000000002} {:x1 95.14321899414062, :y1 797.9557189941406, :x2 342.42718505859375, :y2 814.6223754882812, :width 739.2, :height 960.9600000000002} {:x1 95.14321899414062, :y1 815.9635314941406, :x2 326.4636535644531, :y2 832.6301879882812, :width 739.2, :height 960.9600000000002} {:x1 79.19270324707031, :y1 833.9713439941406, :x2 87.96875, :y2 850.6380004882812, :width 739.2, :height 960.9600000000002}), :page 346}, :content {:text "classWarrior:Character(\"Warrior\"), Fighter {overridefunplay() = fight()}"}, :properties {:color "blue"}} {:id #uuid "62cd0404-865f-4664-b8de-f2ec171082ab", :page 347, :position {:bounding {:x1 79.19270324707031, :y1 111.18490600585938, :x2 382.291748046875, :y2 181.875, :width 739.2, :height 960.9600000000002}, :rects ({:x1 79.19270324707031, :y1 111.18490600585938, :x2 382.291748046875, :y2 127.8515625, :width 739.2, :height 960.9600000000002} {:x1 95.14321899414062, :y1 129.19271850585938, :x2 310.5229187011719, :y2 145.859375, :width 739.2, :height 960.9600000000002} {:x1 95.14321899414062, :y1 147.20053100585938, :x2 342.4117431640625, :y2 163.8671875, :width 739.2, :height 960.9600000000002} {:x1 79.19270324707031, :y1 165.20834350585938, :x2 87.96875, :y2 181.875, :width 739.2, :height 960.9600000000002}), :page 347}, :content {:text "openclassElf(name: String =\"Elf\") :Character(name), Magician {overridefunplay() = doMagic()}"}, :properties {:color "blue"}} {:id #uuid "62cd040f-a550-4305-adff-bd6153898f68", :page 347, :position {:bounding {:x1 79.19270324707031, :y1 201.22396850585938, :x2 326.4636535644531, :y2 289.9349060058594, :width 739.2, :height 960.9600000000002}, :rects ({:x1 79.19270324707031, :y1 201.22396850585938, :x2 231.54946899414062, :y2 217.890625, :width 739.2, :height 960.9600000000002} {:x1 95.14321899414062, :y1 219.23178100585938, :x2 326.4636535644531, :y2 235.8984375, :width 739.2, :height 960.9600000000002} {:x1 95.14321899414062, :y1 237.25259399414062, :x2 262.6474914550781, :y2 253.91928100585938, :width 739.2, :height 960.9600000000002} {:x1 111.09375, :y1 255.26040649414062, :x2 286.58013916015625, :y2 271.9270935058594, :width 739.2, :height 960.9600000000002} {:x1 79.19270324707031, :y1 273.2682189941406, :x2 87.96875, :y2 289.9349060058594, :width 739.2, :height 960.9600000000002}), :page 347}, :content {:text "classFightingElf:Elf(\"FightingElf\"), Fighter {overridefunplay() =super.play() + fight()}"}, :properties {:color "red"}} {:id #uuid "62cd0437-6997-479b-85bd-a3f194b5db54", :page 347, :position {:bounding {:x1 79.19270324707031, :y1 309.2838439941406, :x2 286.58612060546875, :y2 325.9505310058594, :width 739.2, :height 960.9600000000002}, :rects ({:x1 79.19270324707031, :y1 309.2838439941406, :x2 286.58612060546875, :y2 325.9505310058594, :width 739.2, :height 960.9600000000002}), :page 347}, :content {:text "funCharacter.playTurn() ="}, :properties {:color "yellow"}} {:id #uuid "62cd057a-bc38-4ade-94b9-57881eb31c6a", :page 347, :position {:bounding {:x1 95.14321899414062, :y1 435.3515625, :x2 438.139892578125, :y2 452.0181884765625, :width 739.2, :height 960.9600000000002}, :rects ({:x1 95.14321899414062, :y1 435.3515625, :x2 438.139892578125, :y2 452.0181884765625, :width 739.2, :height 960.9600000000002}), :page 347}, :content {:text "characters.forEach { it.playTurn() }// [3]"}, :properties {:color "yellow"}} {:id #uuid "62cd074e-db5c-4a73-afdd-59cefdd8f9ed", :page 347, :position {:bounding {:x1 79.19270324707031, :y1 693.8411254882812, :x2 660.6343994140625, :y2 739.2056884765625, :width 739.2, :height 960.9600000000002}, :rects ({:x1 362.7911682128906, :y1 693.8411254882812, :x2 660.6343994140625, :y2 718.0078125, :width 739.2, :height 960.9600000000002} {:x1 79.19270324707031, :y1 715.0390625, :x2 547.1802368164062, :y2 739.2056884765625, :width 739.2, :height 960.9600000000002} {:x1 79.19270324707031, :y1 718.3723754882812, :x2 547.1802368164062, :y2 735.8723754882812, :width 739.2, :height 960.9600000000002}), :page 347}, :content {:text "the compiler determines that there is onlyoneplayTurn()function implementation—the one defined on line"}, :properties {:color "yellow"}} {:id #uuid "62cd0908-278b-4d5c-a531-8ebdc015c024", :page 348, :position {:bounding {:x1 79.19270324707031, :y1 198.3203125, :x2 660.4224395751953, :y2 286.0416259765625, :width 739.2, :height 960.9600000000002}, :rects ({:x1 79.19270324707031, :y1 198.3203125, :x2 660.4079742431641, :y2 222.4869384765625, :width 739.2, :height 960.9600000000002} {:x1 79.19270324707031, :y1 219.50518798828125, :x2 660.4224395751953, :y2 243.671875, :width 739.2, :height 960.9600000000002} {:x1 79.19270324707031, :y1 222.8385009765625, :x2 660.4224395751953, :y2 240.3385009765625, :width 739.2, :height 960.9600000000002} {:x1 79.19270324707031, :y1 240.6900634765625, :x2 660.3900909423828, :y2 264.85675048828125, :width 739.2, :height 960.9600000000002} {:x1 79.19270324707031, :y1 244.0234375, :x2 660.3900909423828, :y2 261.5234375, :width 739.2, :height 960.9600000000002} {:x1 79.19270324707031, :y1 261.875, :x2 154.64822387695312, :y2 286.0416259765625, :width 739.2, :height 960.9600000000002}), :page 348}, :content {:text "Dynamic binding isn’t free. The additional logic that determines the runtime typeslightly impacts performance compared to static binding. To force clarity, Kotlindefaults to closed classes and member functions. To inherit and override, you mustbe explicit."}, :properties {:color "purple"}} {:id #uuid "62cd0911-2300-4a14-b6fd-78716f62e032", :page 347, :position {:bounding {:x1 79.19270324707031, :y1 651.4713134765625, :x2 660.06201171875, :y2 696.8228759765625, :width 739.2, :height 960.9600000000002}, :rects ({:x1 173.671875, :y1 651.4713134765625, :x2 474.54034423828125, :y2 675.6380004882812, :width 739.2, :height 960.9600000000002} {:x1 560.0390625, :y1 651.4713134765625, :x2 660.06201171875, :y2 675.6380004882812, :width 739.2, :height 960.9600000000002} {:x1 79.19270324707031, :y1 653.6328125, :x2 660.06201171875, :y2 672.7994384765625, :width 739.2, :height 960.9600000000002} {:x1 79.19270324707031, :y1 672.65625, :x2 162.2095489501953, :y2 696.8228759765625, :width 739.2, :height 960.9600000000002} {:x1 79.19270324707031, :y1 675.9895629882812, :x2 153.105712890625, :y2 693.4895629882812, :width 739.2, :height 960.9600000000002}), :page 347}, :content {:text "playTurn()is an extension function on the base typeCharacter. When calledin line[3], "}, :properties {:color "yellow"}} {:id #uuid "62cd0a30-1cda-4406-a62e-fdee8872ed60", :page 347, :position {:bounding {:x1 54, :y1 358.65625, :x2 470, :y2 575.65625, :width 739.2, :height 960.9600000000002}, :rects (), :page 347}, :content {:text "[:span]", :image 1657604655374}, :properties {:color "blue"}} {:id #uuid "62cd0ea0-90d2-46ce-b48c-11257c073e0a", :page 349, :position {:bounding {:x1 79.19270324707031, :y1 485.8463134765625, :x2 660.0341186523438, :y2 531.1978759765625, :width 739.2, :height 960.9600000000002}, :rects ({:x1 79.19270324707031, :y1 485.8463134765625, :x2 660.0341186523438, :y2 510.01300048828125, :width 739.2, :height 960.9600000000002} {:x1 611.9400634765625, :y1 489.1796875, :x2 660.0341186523438, :y2 506.6796875, :width 739.2, :height 960.9600000000002} {:x1 79.19270324707031, :y1 507.03125, :x2 193.63998413085938, :y2 531.1978759765625, :width 739.2, :height 960.9600000000002}), :page 349}, :content {:text "Inheritance is one way to achieve this. Inheritance creates a new class as atype ofan existing class"}, :properties {:color "yellow"}} {:id #uuid "62cd0ea8-d52d-4f92-9e81-aa6dbecdbb8c", :page 349, :position {:bounding {:x1 163.77735900878906, :y1 528.2161254882812, :x2 592.8150177001953, :y2 552.3828125, :width 739.2, :height 960.9600000000002}, :rects ({:x1 163.77735900878906, :y1 528.2161254882812, :x2 592.8150177001953, :y2 552.3828125, :width 739.2, :height 960.9600000000002}), :page 349}, :content {:text " Inheritance is a cornerstone of object-oriented programming."}, :properties {:color "yellow"}} {:id #uuid "62cd0ebe-73bd-48fc-88ee-4b1c8aea2345", :page 349, :position {:bounding {:x1 79.19270324707031, :y1 558.4765472412109, :x2 660.423583984375, :y2 603.8281097412109, :width 739.2, :height 960.9600000000002}, :rects ({:x1 442.0920104980469, :y1 558.4765472412109, :x2 660.423583984375, :y2 582.6432342529297, :width 739.2, :height 960.9600000000002} {:x1 79.19270324707031, :y1 579.6614227294922, :x2 485.99798583984375, :y2 603.8281097412109, :width 739.2, :height 960.9600000000002} {:x1 79.19270324707031, :y1 582.9947967529297, :x2 477.59112548828125, :y2 600.4947967529297, :width 739.2, :height 960.9600000000002}), :page 349}, :content {:text "h, by creating objects of existingclassesinsideyour new class. This is calledcomposition, "}, :properties {:color "yellow"}} {:id #uuid "62cd0f69-9282-47eb-96df-f3c5235874a7", :page 349, :position {:bounding {:x1 79.19270324707031, :y1 703.75, :x2 330.0875549316406, :y2 727.9166259765625, :width 739.2, :height 960.9600000000002}, :rects ({:x1 79.19270324707031, :y1 703.75, :x2 330.0875549316406, :y2 727.9166259765625, :width 739.2, :height 960.9600000000002} {:x1 202.72134399414062, :y1 707.0833129882812, :x2 241.08456420898438, :y2 724.5833129882812, :width 739.2, :height 960.9600000000002}), :page 349}, :content {:text "Composition is ahas-arelationship"}, :properties {:color "red"}} {:id #uuid "62cd13a1-0438-44c7-90fc-0353149366b5", :page 350, :position {:bounding {:x1 79.19270324707031, :y1 288.9974365234375, :x2 663.2258911132812, :y2 355.53387451171875, :width 739.2, :height 960.9600000000002}, :rects ({:x1 79.19270324707031, :y1 288.9974365234375, :x2 663.2258911132812, :y2 313.1640625, :width 739.2, :height 960.9600000000002} {:x1 253.41143798828125, :y1 292.33074951171875, :x2 663.2258911132812, :y2 309.83074951171875, :width 739.2, :height 960.9600000000002} {:x1 79.19270324707031, :y1 310.18231201171875, :x2 660.3880157470703, :y2 334.3489990234375, :width 739.2, :height 960.9600000000002} {:x1 79.19270324707031, :y1 313.515625, :x2 660.3880157470703, :y2 331.015625, :width 739.2, :height 960.9600000000002} {:x1 79.19270324707031, :y1 331.3671875, :x2 485.71693420410156, :y2 355.53387451171875, :width 739.2, :height 960.9600000000002}), :page 350}, :content {:text "Inheritance describes anis-arelationship, and it’s often helpful to read the descrip-tion aloud: “A house is a building.” That sounds right, doesn’t it? When the is-arelationship makes sense, inheritance usually makes sense."}, :properties {:color "yellow"}} {:id #uuid "62cd19f5-b7ad-48e2-8928-753b17e03bb6", :page 351, :position {:bounding {:x1 79.19270324707031, :y1 528.4765625, :x2 663.0928497314453, :y2 573.828125, :width 739.2, :height 960.9600000000002}, :rects ({:x1 448.20166015625, :y1 528.4765625, :x2 660.4120483398438, :y2 552.6431884765625, :width 739.2, :height 960.9600000000002} {:x1 79.19270324707031, :y1 549.6614379882812, :x2 663.0928497314453, :y2 573.828125, :width 739.2, :height 960.9600000000002}), :page 351}, :content {:text " but the user sees the interfaceyou’ve defined for that new class rather than the interface of the embedded object."}, :properties {:color "blue"}} {:id #uuid "62cd1a09-99d4-4f3b-9ef0-f2e8e077a8c1", :page 351, :position {:bounding {:x1 78.69790649414062, :y1 570.8593597412109, :x2 422.1274108886719, :y2 595.0260162353516, :width 739.2, :height 960.9600000000002}, :rects ({:x1 78.69790649414062, :y1 570.8593597412109, :x2 422.1274108886719, :y2 595.0260162353516, :width 739.2, :height 960.9600000000002}), :page 351}, :content {:text "To hide the object completely, embed it privately:"}, :properties {:color "blue"}} {:id #uuid "62cd1af9-fc91-4409-8b83-8c1bf26291d9", :page 352, :position {:bounding {:x1 78.54165649414062, :y1 150.22137451171875, :x2 660.5694580078125, :y2 216.7578125, :width 739.2, :height 960.9600000000002}, :rects ({:x1 415.17822265625, :y1 150.22137451171875, :x2 660.5694580078125, :y2 174.3880615234375, :width 739.2, :height 960.9600000000002} {:x1 78.54165649414062, :y1 171.40625, :x2 204.08447265625, :y2 195.57293701171875, :width 739.2, :height 960.9600000000002} {:x1 242.7734375, :y1 171.40625, :x2 360.03387451171875, :y2 195.57293701171875, :width 739.2, :height 960.9600000000002} {:x1 437.4869689941406, :y1 171.40625, :x2 660.1442260742188, :y2 195.57293701171875, :width 739.2, :height 960.9600000000002} {:x1 78.54165649414062, :y1 174.7396240234375, :x2 660.1442260742188, :y2 193.90631103515625, :width 739.2, :height 960.9600000000002} {:x1 78.54165649414062, :y1 192.5911865234375, :x2 384.5182189941406, :y2 216.7578125, :width 739.2, :height 960.9600000000002} {:x1 78.54165649414062, :y1 195.92449951171875, :x2 380.68389892578125, :y2 213.42449951171875, :width 739.2, :height 960.9600000000002}), :page 352}, :content {:text " This means that if you find a betterway to implementForm, you can removefeaturesand change to the new approachwithout any impact on code that callsForm."}, :properties {:color "yellow"}} {:id #uuid "62cd2068-c803-4a20-8a66-9d48aaf73b2c", :page 352, :position {:bounding {:x1 90, :y1 276.109375, :x2 750.0822143554688, :y2 328.1875, :width 839.9999999999999, :height 1092}, :rects ({:x1 196.18927001953125, :y1 276.109375, :x2 550.1082153320312, :y2 304.109375, :width 839.9999999999999, :height 1092} {:x1 597.859375, :y1 276.109375, :x2 750.0822143554688, :y2 304.109375, :width 839.9999999999999, :height 1092} {:x1 557.96875, :y1 279.671875, :x2 750.0822143554688, :y2 300.671875, :width 839.9999999999999, :height 1092} {:x1 90, :y1 300.1875, :x2 705.4739379882812, :y2 328.1875, :width 839.9999999999999, :height 1092}), :page 352}, :content {:text " The inheritance relationship is then part ofForm—the connection isexplicit. If you change this, you’ll break code that relies upon that connection."}, :properties {:color "yellow"}} {:id #uuid "62cd2330-5661-4efa-a2c8-1c598b7b0e96", :page 353, :position {:bounding {:x1 48, :y1 296, :x2 412, :y2 553, :width 839.9999999999999, :height 1092}, :rects (), :page 353}, :content {:text "[:span]", :image 1657611055638}, :properties {:color "blue"}} {:id #uuid "62cd23b5-f80d-4962-8715-7d0b385bcbbc", :page 354, :position {:bounding {:x1 90, :y1 183.09375, :x2 604.8843994140625, :y2 241.09375, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 183.09375, :x2 604.8843994140625, :y2 241.09375, :width 839.9999999999999, :height 1092}), :page 354}, :content {:text "Inheritance & Extensions"}, :properties {:color "yellow"}} {:id #uuid "62d0c35b-23ed-44a1-ac73-9b080430def4", :page 354, :position {:bounding {:x1 147.29165649414062, :y1 319.8046672344208, :x2 793.8001098632812, :y2 377.6041667461395, :width 940.8, :height 1223.04}, :rects ({:x1 336.5979919433594, :y1 319.8046672344208, :x2 793.8001098632812, :y2 350.63801074028015, :width 940.8, :height 1223.04} {:x1 147.29165649414062, :y1 346.77082324028015, :x2 270.29547119140625, :y2 377.6041667461395, :width 940.8, :height 1223.04}), :page 354}, :content {:text "This can lead to code that is difficult to understandand maintain."}, :properties {:color "yellow"}} {:id #uuid "62d11f49-6226-4be1-93e7-b36d324d3f8b", :page 355, :position {:bounding {:x1 100.79426574707031, :y1 736.7057342529297, :x2 840.2879028320312, :y2 794.5051727294922, :width 940.8, :height 1223.04}, :rects ({:x1 510.6210632324219, :y1 736.7057342529297, :x2 840.2879028320312, :y2 767.5390472412109, :width 940.8, :height 1223.04} {:x1 100.79426574707031, :y1 763.6718597412109, :x2 568.6084136962891, :y2 794.5051727294922, :width 940.8, :height 1223.04}), :page 355}, :content {:text "the added functions are trimmed offduring upcasting and are unavailable to the base class"}, :properties {:color "yellow"}} {:id #uuid "62d1221a-4a9a-4ad2-a077-99813de9d5c5", :page 357, :position {:bounding {:x1 99.765625, :y1 648.3072738647461, :x2 840.155029296875, :y2 706.1067733764648, :width 940.8, :height 1223.04}, :rects ({:x1 99.765625, :y1 648.3072738647461, :x2 318.9166259765625, :y2 679.1405868530273, :width 940.8, :height 1223.04} {:x1 394.0625, :y1 648.3072738647461, :x2 427.0262145996094, :y2 679.1405868530273, :width 940.8, :height 1223.04} {:x1 502.2135314941406, :y1 648.3072738647461, :x2 840.155029296875, :y2 679.1405868530273, :width 940.8, :height 1223.04} {:x1 322.9557189941406, :y1 651.4452743530273, :x2 840.155029296875, :y2 675.6119613647461, :width 940.8, :height 1223.04} {:x1 100.79426574707031, :y1 675.2733993530273, :x2 188.3828582763672, :y2 706.1067733764648, :width 940.8, :height 1223.04}), :page 357}, :content {:text "We could also have madeheat()andcool()member functions instead of extensionfunctions."}, :properties {:color "blue"}} {:id #uuid "62d12234-b407-4f7f-a392-e6d1a44d6832", :page 356, :position {:bounding {:x1 100.79426574707031, :y1 201.97918701171875, :x2 840.11328125, :y2 259.7786865234375, :width 940.8, :height 1223.04}, :rects ({:x1 622.0419311523438, :y1 201.97918701171875, :x2 840.11328125, :y2 232.8125, :width 940.8, :height 1223.04} {:x1 100.79426574707031, :y1 228.9453125, :x2 316.11981201171875, :y2 259.7786865234375, :width 940.8, :height 1223.04}), :page 356}, :content {:text " This is exactly what anextension function does,"}, :properties {:color "yellow"}} {:id #uuid "62d122c4-d226-4196-a1da-b546f439618d", :page 357, :position {:bounding {:x1 100.79426574707031, :y1 742.2916564941406, :x2 487.3953399658203, :y2 787.2916564941406, :width 940.8, :height 1223.04}, :rects ({:x1 100.79426574707031, :y1 742.2916564941406, :x2 487.3953399658203, :y2 787.2916564941406, :width 940.8, :height 1223.04}), :page 357}, :content {:text "Interface by Convention"}, :properties {:color "yellow"}} {:id #uuid "62d12310-9d0c-4ebe-a7ab-2d9181b1874d", :page 358, :position {:bounding {:x1 296.7533264160156, :y1 717.0702896118164, :x2 843.5318603515625, :y2 747.9036026000977, :width 940.8, :height 1223.04}, :rects ({:x1 296.7533264160156, :y1 717.0702896118164, :x2 483.1095886230469, :y2 747.9036026000977, :width 940.8, :height 1223.04} {:x1 571.5364379882812, :y1 717.0702896118164, :x2 843.5318603515625, :y2 747.9036026000977, :width 940.8, :height 1223.04} {:x1 488.1640625, :y1 720.2082901000977, :x2 566.3568115234375, :y2 744.3749771118164, :width 940.8, :height 1223.04}), :page 358}, :content {:text " so we must overloadcallF()to make it work for both types."}, :properties {:color "yellow"}} {:id #uuid "62d12354-0519-4208-b5a6-c93152fa4b67", :page 358, :position {:bounding {:x1 99.97395706176758, :y1 755.5859375, :x2 840.8845405578613, :y2 813.3853759765625, :width 940.8, :height 1223.04}, :rects ({:x1 100.16926956176758, :y1 755.5859375, :x2 840.8845405578613, :y2 786.4192504882812, :width 940.8, :height 1223.04} {:x1 99.97395706176758, :y1 782.5520629882812, :x2 373.00175857543945, :y2 813.3853759765625, :width 940.8, :height 1223.04}), :page 358}, :content {:text "This “interface by convention” is used extensively in the Kotlin libraries, especiallywhen dealing with collections."}, :properties {:color "yellow"}} {:id #uuid "62d12367-bdd7-41f9-9df7-d31a202b0980", :page 358, :position {:bounding {:x1 100.79426956176758, :y1 809.5181884765625, :x2 840.3261871337891, :y2 867.3176879882812, :width 940.8, :height 1223.04}, :rects ({:x1 130.40565490722656, :y1 809.5181884765625, :x2 840.3261871337891, :y2 840.3515625, :width 940.8, :height 1223.04} {:x1 100.79426956176758, :y1 836.484375, :x2 378.3820686340332, :y2 867.3176879882812, :width 940.8, :height 1223.04}), :page 358}, :content {:text " Kotlin library turns them into functional-style collections by adding a largenumber of extension functions."}, :properties {:color "green"}} {:id #uuid "62d12406-ed77-4bac-918f-bbaa2e1f071a", :page 358, :position {:bounding {:x1 100.79426956176758, :y1 1009.8176879882812, :x2 840.3521118164062, :y2 1067.6171875, :width 940.8, :height 1223.04}, :rects ({:x1 362.05078125, :y1 1009.8176879882812, :x2 840.3521118164062, :y2 1040.6510009765625, :width 940.8, :height 1223.04} {:x1 100.79426956176758, :y1 1036.7838134765625, :x2 736.0410346984863, :y2 1067.6171875, :width 940.8, :height 1223.04}), :page 358}, :content {:text " Create a simple interface containing only the methodsthat define its essence, then create all auxiliary operations as extensions"}, :properties {:color "green"}} {:id #uuid "62d124eb-4577-44c2-9e0f-e253be1d9db7", :page 359, :position {:bounding {:x1 100.79426956176758, :y1 137.0703125, :x2 421.6971130371094, :y2 182.0703125, :width 940.8, :height 1223.04}, :rects ({:x1 100.79426956176758, :y1 137.0703125, :x2 421.6971130371094, :y2 182.0703125, :width 940.8, :height 1223.04} {:x1 167.8515625, :y1 143.73696899414062, :x2 289.9519500732422, :y2 175.40362548828125, :width 940.8, :height 1223.04}), :page 359}, :content {:text "TheAdapterPattern"}, :properties {:color "yellow"}} {:id #uuid "62d125d7-fe31-4540-8a96-63506f8b11ab", :page 359, :position {:bounding {:x1 99.97395706176758, :y1 716.8749694824219, :x2 842.4348754882812, :y2 774.6744689941406, :width 940.8, :height 1223.04}, :rects ({:x1 99.97395706176758, :y1 716.8749694824219, :x2 350.83606338500977, :y2 747.7082824707031, :width 940.8, :height 1223.04} {:x1 444.609375, :y1 716.8749694824219, :x2 541.238037109375, :y2 747.7082824707031, :width 940.8, :height 1223.04} {:x1 772.4088134765625, :y1 716.8749694824219, :x2 840.0263061523438, :y2 747.7082824707031, :width 940.8, :height 1223.04} {:x1 358.56768798828125, :y1 720.0129699707031, :x2 840.0263061523438, :y2 744.1796569824219, :width 940.8, :height 1223.04} {:x1 100.79426956176758, :y1 743.8410949707031, :x2 204.05316543579102, :y2 774.6744689941406, :width 940.8, :height 1223.04} {:x1 291.3150939941406, :y1 743.8410949707031, :x2 654.44189453125, :y2 774.6744689941406, :width 940.8, :height 1223.04} {:x1 837.5390625, :y1 743.8410949707031, :x2 842.4348754882812, :y2 774.6744689941406, :width 940.8, :height 1223.04} {:x1 100.79426956176758, :y1 748.8410949707031, :x2 837.5799560546875, :y2 773.0077209472656, :width 940.8, :height 1223.04}), :page 359}, :content {:text "we inherit from an existingMyClassto produceMyClassAdaptedForLib, whichimplementsLibTypeand can thus be passed to the functions inUsefulLibrary.kt:"}, :properties {:color "blue"}} {:id #uuid "62d125eb-06cc-4de3-8273-fb73b543ad96", :page 360, :position {:bounding {:x1 121.09375, :y1 210.7291259765625, :x2 354.5951843261719, :y2 254.4791259765625, :width 940.8, :height 1223.04}, :rects ({:x1 121.09375, :y1 210.7291259765625, :x2 202.33514404296875, :y2 231.5625, :width 940.8, :height 1223.04} {:x1 212.4609375, :y1 210.7291259765625, :x2 242.930908203125, :y2 231.5625, :width 940.8, :height 1223.04} {:x1 253.07290649414062, :y1 210.7291259765625, :x2 354.5951843261719, :y2 231.5625, :width 940.8, :height 1223.04} {:x1 121.09375, :y1 233.64581298828125, :x2 202.33514404296875, :y2 254.4791259765625, :width 940.8, :height 1223.04} {:x1 212.4609375, :y1 233.64581298828125, :x2 242.930908203125, :y2 254.4791259765625, :width 940.8, :height 1223.04} {:x1 253.07290649414062, :y1 233.64581298828125, :x2 354.5951843261719, :y2 254.4791259765625, :width 940.8, :height 1223.04}), :page 360}, :content {:text "overridefunf1() = h()overridefunf2() = g()"}, :properties {:color "blue"}} {:id #uuid "62d12684-f19a-4611-bddb-4b27ce65e9b4", :page 360, :position {:bounding {:x1 100.79426574707031, :y1 483.8151054382324, :x2 840.3435668945312, :y2 541.6145439147949, :width 940.8, :height 1223.04}, :rects ({:x1 567.1192016601562, :y1 483.8151054382324, :x2 840.3435668945312, :y2 514.6484184265137, :width 940.8, :height 1223.04} {:x1 100.79426574707031, :y1 510.7812309265137, :x2 449.2596435546875, :y2 541.6145439147949, :width 940.8, :height 1223.04} {:x1 100.79426574707031, :y1 515.7812309265137, :x2 599.0641479492188, :y2 537.4479179382324, :width 940.8, :height 1223.04}), :page 360}, :content {:text " the new member functions areusedonlyfor the purpose of adapting toUsefulLibrary"}, :properties {:color "yellow"}} {:id #uuid "62d12774-6cf0-4052-ad1a-6437ac131248", :page 360, :position {:bounding {:x1 100.79426574707031, :y1 630.1952819824219, :x2 843.6789855957031, :y2 714.9609069824219, :width 940.8, :height 1223.04}, :rects ({:x1 618.5164184570312, :y1 630.1952819824219, :x2 840.1741333007812, :y2 661.0285949707031, :width 940.8, :height 1223.04} {:x1 183.30728149414062, :y1 657.1614074707031, :x2 281.0102844238281, :y2 687.9947814941406, :width 940.8, :height 1223.04} {:x1 329.9869689941406, :y1 657.1614074707031, :x2 843.6789855957031, :y2 687.9947814941406, :width 940.8, :height 1223.04} {:x1 100.79426574707031, :y1 660.2994689941406, :x2 843.6789855957031, :y2 684.4660949707031, :width 940.8, :height 1223.04} {:x1 100.79426574707031, :y1 684.1275939941406, :x2 233.13194274902344, :y2 714.9609069824219, :width 940.8, :height 1223.04} {:x1 322.421875, :y1 684.1275939941406, :x2 419.8786926269531, :y2 714.9609069824219, :width 940.8, :height 1223.04} {:x1 100.79426574707031, :y1 689.1275939941406, :x2 648.8076171875, :y2 710.7942199707031, :width 940.8, :height 1223.04}), :page 360}, :content {:text "What if you don’t controlMyClassand it’s notopen? Fortunately, adapters can also be built using composition.Here, we add aMyClassfield insideMyClassAdaptedForLib"}, :properties {:color "blue"}} {:id #uuid "62d127b5-942b-423e-9880-73da63de68bb", :page 359, :position {:bounding {:x1 202.3177032470703, :y1 351.74476623535156, :x2 273.4024353027344, :y2 372.57810974121094, :width 940.8, :height 1223.04}, :rects ({:x1 202.3177032470703, :y1 351.74476623535156, :x2 273.4024353027344, :y2 372.57810974121094, :width 940.8, :height 1223.04}), :page 359}, :content {:text "LibType"}, :properties {:color "blue"}} {:id #uuid "62d128ba-b0bb-4edc-a4c8-343abcacf44b", :page 361, :position {:bounding {:x1 100.79426574707031, :y1 617.2135009765625, :x2 546.5662994384766, :y2 662.2135009765625, :width 940.8, :height 1223.04}, :rects ({:x1 100.79426574707031, :y1 617.2135009765625, :x2 546.5662994384766, :y2 662.2135009765625, :width 940.8, :height 1223.04}), :page 361}, :content {:text "Members versus Extensions"}, :properties {:color "yellow"}} {:id #uuid "62d14de9-e424-4aa2-909f-51a7f027e99f", :page 366, :position {:bounding {:x1 100.79426956176758, :y1 205.1041717529297, :x2 480.8165168762207, :y2 270.1041717529297, :width 940.8, :height 1223.04}, :rects ({:x1 100.79426956176758, :y1 205.1041717529297, :x2 480.8165168762207, :y2 270.1041717529297, :width 940.8, :height 1223.04}), :page 366}, :content {:text "Class Delegation"}, :properties {:color "yellow"}} {:id #uuid "62d2b8cb-9356-471f-acb5-aab5e608482b", :page 366, :position {:bounding {:x1 89.99999809265137, :y1 362.4869689941406, :x2 750.4739971160889, :y2 414.07550048828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 362.4869689941406, :x2 750.4739971160889, :y2 389.9869689941406, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 386.57550048828125, :x2 157.9385280609131, :y2 414.07550048828125, :width 839.9999999999999, :height 1092}), :page 366}, :content {:text "Composition uses the functionality of an embedded object but does not expose itsinterface"}, :properties {:color "blue"}} {:id #uuid "62d2ba77-5100-4fee-9580-d54cc4507371", :page 367, :position {:bounding {:x1 89.99999809265137, :y1 368.9453125, :x2 750.4867763519287, :y2 420.5338134765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 724.3941249847412, :y1 368.9453125, :x2 750.4867763519287, :y2 396.4453125, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 393.0338134765625, :x2 293.6967144012451, :y2 420.5338134765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 397.20050048828125, :x2 468.6316432952881, :y2 416.3671875, :width 839.9999999999999, :height 1092}), :page 367}, :content {:text " wemight try inheriting fromSpaceShipControls"}, :properties {:color "yellow"}} {:id #uuid "62d2ba85-ff16-4fc4-b800-d14e5c1dbc47", :page 367, :position {:bounding {:x1 89.99999809265137, :y1 393.0338134765625, :x2 754.988302230835, :y2 444.609375, :width 839.9999999999999, :height 1092}, :rects ({:x1 477.89940452575684, :y1 393.0338134765625, :x2 689.723165512085, :y2 420.5338134765625, :width 839.9999999999999, :height 1092} {:x1 695.1562099456787, :y1 396.09375, :x2 754.988302230835, :y2 416.92706298828125, :width 839.9999999999999, :height 1092} {:x1 214.6223964691162, :y1 417.109375, :x2 258.2964382171631, :y2 444.609375, :width 839.9999999999999, :height 1092} {:x1 303.1380214691162, :y1 417.109375, :x2 307.5130214691162, :y2 444.609375, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 420.16925048828125, :x2 303.1432399749756, :y2 441.0025634765625, :width 839.9999999999999, :height 1092}), :page 367}, :content {:text "This doesn’t work becauseSpace-ShipControlsis notopen."}, :properties {:color "yellow"}} {:id #uuid "62d2baa1-f24a-4662-b8c9-887d99efa4b2", :page 367, :position {:bounding {:x1 89.44009971618652, :y1 451.2109375, :x2 754.988302230835, :y2 526.8619384765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.44009971618652, :y1 451.2109375, :x2 366.0932369232178, :y2 478.7109375, :width 839.9999999999999, :height 1092} {:x1 450.4427089691162, :y1 451.2109375, :x2 688.927755355835, :y2 478.7109375, :width 839.9999999999999, :height 1092} {:x1 370.6770839691162, :y1 454.2838134765625, :x2 754.988302230835, :y2 475.1171875, :width 839.9999999999999, :height 1092} {:x1 215.8333339691162, :y1 475.28643798828125, :x2 753.7600917816162, :y2 502.78643798828125, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 478.359375, :x2 753.7600917816162, :y2 499.19268798828125, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 499.3619384765625, :x2 260.35546684265137, :y2 526.8619384765625, :width 839.9999999999999, :height 1092}), :page 367}, :content {:text "To expose the member functions inControls, you can create an instance ofSpace-ShipControlsas a property and explicitly delegate all the exposed member func-tions to that instance:"}, :properties {:color "blue"}} {:id #uuid "62d2bae1-19bb-4e15-8b66-00ea36c4c5df", :page 367, :position {:bounding {:x1 108.12499046325684, :y1 644.6093597412109, :x2 488.85573387145996, :y2 663.7760467529297, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.12499046325684, :y1 644.6093597412109, :x2 488.85573387145996, :y2 663.7760467529297, :width 839.9999999999999, :height 1092}), :page 367}, :content {:text "privatevalcontrols = SpaceShipControls()"}, :properties {:color "green"}} {:id #uuid "62d2bae9-a945-4582-a12d-b5d086b07115", :page 367, :position {:bounding {:x1 108.12499046325684, :y1 685.5338592529297, :x2 398.19481468200684, :y2 725.1692352294922, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.12499046325684, :y1 685.5338592529297, :x2 398.19481468200684, :y2 704.7004852294922, :width 839.9999999999999, :height 1092} {:x1 126.24999046325684, :y1 706.0026092529297, :x2 316.64613914489746, :y2 725.1692352294922, :width 839.9999999999999, :height 1092}), :page 367}, :content {:text "overridefunup(velocity: Int) =controls.up(velocity)"}, :properties {:color "green"}} {:id #uuid "62d2baeb-58f2-45eb-9269-d310a78c8697", :page 367, :position {:bounding {:x1 108.12499046325684, :y1 665.0651092529297, :x2 307.5699062347412, :y2 684.2317352294922, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.12499046325684, :y1 665.0651092529297, :x2 307.5699062347412, :y2 684.2317352294922, :width 839.9999999999999, :height 1092}), :page 367}, :content {:text "// Delegation by hand:"}, :properties {:color "green"}} {:id #uuid "62d2bc36-2341-437a-81c6-f881c441e766", :page 368, :position {:bounding {:x1 89.99999809265137, :y1 309.4921875, :x2 750.1598720550537, :y2 361.06768798828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 608.3955898284912, :y1 309.4921875, :x2 750.1598720550537, :y2 336.9921875, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 333.56768798828125, :x2 568.6966228485107, :y2 361.06768798828125, :width 839.9999999999999, :height 1092}), :page 368}, :content {:text " and the resultinginterface is the same as if you had used regular inheritance"}, :properties {:color "yellow"}} {:id #uuid "62d2bc72-bc14-4d15-b968-515bd5c92825", :page 368, :position {:bounding {:x1 89.99999809265137, :y1 416.10675048828125, :x2 750.1509609222412, :y2 467.68231201171875, :width 839.9999999999999, :height 1092}, :rects ({:x1 522.101095199585, :y1 416.10675048828125, :x2 750.1509609222412, :y2 443.60675048828125, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 440.18231201171875, :x2 194.64232444763184, :y2 467.68231201171875, :width 839.9999999999999, :height 1092}), :page 368}, :content {:text " you specify an object to useas a delegate."}, :properties {:color "yellow"}} {:id #uuid "62d2bca0-6a2d-4594-b630-a6c603b71934", :page 368, :position {:bounding {:x1 64, :y1 524.96875, :x2 496, :y2 696.96875, :width 839.9999999999999, :height 1092}, :rects (), :page 368}, :content {:text "[:span]", :image 1657978015097}, :properties {:color "blue"}} {:id #uuid "62d2bf2b-e446-4c51-a306-c0fc417b8929", :page 368, :position {:bounding {:x1 183.0241298675537, :y1 705.9374580383301, :x2 681.80397605896, :y2 733.4374580383301, :width 839.9999999999999, :height 1092}, :rects ({:x1 183.0241298675537, :y1 705.9374580383301, :x2 231.13536643981934, :y2 733.4374580383301, :width 839.9999999999999, :height 1092} {:x1 249.36195945739746, :y1 705.9374580383301, :x2 415.04347801208496, :y2 733.4374580383301, :width 839.9999999999999, :height 1092} {:x1 443.28124046325684, :y1 705.9374580383301, :x2 539.0832118988037, :y2 733.4374580383301, :width 839.9999999999999, :height 1092} {:x1 557.4088344573975, :y1 705.9374580383301, :x2 681.80397605896, :y2 733.4374580383301, :width 839.9999999999999, :height 1092} {:x1 235.18227195739746, :y1 709.0103950500488, :x2 554.1927089691162, :y2 729.8437080383301, :width 839.9999999999999, :height 1092}), :page 368}, :content {:text " “classBimplements interfaceAIbyusing theamember object.”"}, :properties {:color "yellow"}} {:id #uuid "62d2c0b0-a7de-407d-bf18-d47be39d778e", :page 369, :position {:bounding {:x1 108.1276912689209, :y1 269.8306884765625, :x2 298.4849452972412, :y2 288.99737548828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.1276912689209, :y1 269.8306884765625, :x2 298.4849452972412, :y2 288.99737548828125, :width 839.9999999999999, :height 1092}), :page 369}, :content {:text " Controlsbycontrols"}, :properties {:color "yellow"}} {:id #uuid "62d2c0b2-43ec-4681-9538-0b4cb085eb2e", :page 369, :position {:bounding {:x1 108.12499046325684, :y1 228.8931884765625, :x2 479.79039573669434, :y2 268.52862548828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.12499046325684, :y1 228.8931884765625, :x2 479.79039573669434, :y2 248.05987548828125, :width 839.9999999999999, :height 1092} {:x1 126.24999046325684, :y1 249.3619384765625, :x2 298.5035915374756, :y2 268.52862548828125, :width 839.9999999999999, :height 1092}), :page 369}, :content {:text "privatevalcontrols: SpaceShipControls =SpaceShipControls()"}, :properties {:color "yellow"}} {:id #uuid "62d2c7be-7539-44d6-9c85-07149d2818ad", :page 369, :position {:bounding {:x1 89.07552146911621, :y1 514.140625, :x2 750.6507778167725, :y2 565.7161254882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.07552146911621, :y1 514.140625, :x2 261.62120628356934, :y2 541.640625, :width 839.9999999999999, :height 1092} {:x1 294.3098964691162, :y1 514.140625, :x2 750.6507778167725, :y2 541.640625, :width 839.9999999999999, :height 1092} {:x1 267.92967796325684, :y1 517.2005004882812, :x2 750.6507778167725, :y2 538.0338134765625, :width 839.9999999999999, :height 1092} {:x1 299.37499046325684, :y1 538.2161254882812, :x2 303.62709617614746, :y2 565.7161254882812, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 541.2890625, :x2 299.418119430542, :y2 562.1223754882812, :width 839.9999999999999, :height 1092}), :page 369}, :content {:text "When Kotlin sees thebykeyword, it generates code similar to what we wrote forExplicitDelegation.kt."}, :properties {:color "yellow"}} {:id #uuid "62d2c7f3-20a2-4271-9080-a29e6c154fd2", :page 369, :position {:bounding {:x1 89.99999809265137, :y1 596.6796646118164, :x2 750.5455913543701, :y2 648.2551651000977, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 596.6796646118164, :x2 750.5455913543701, :y2 624.1796646118164, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 620.7551651000977, :x2 176.7160701751709, :y2 648.2551651000977, :width 839.9999999999999, :height 1092}), :page 369}, :content {:text "Kotlin doesn’t support multiple class inheritance, but you can simulate it using classdelegation"}, :properties {:color "yellow"}} {:id #uuid "62d2c93a-c874-44d0-9182-59e0d935fea9", :page 370, :position {:bounding {:x1 89.99999809265137, :y1 902.9687271118164, :x2 749.9962368011475, :y2 954.5442276000977, :width 839.9999999999999, :height 1092}, :rects ({:x1 730.0795497894287, :y1 902.9687271118164, :x2 749.9962368011475, :y2 930.4687271118164, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 927.0442276000977, :x2 426.2065715789795, :y2 954.5442276000977, :width 839.9999999999999, :height 1092} {:x1 544.2317714691162, :y1 927.0442276000977, :x2 573.6702480316162, :y2 954.5442276000977, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 931.2109146118164, :x2 667.70973777771, :y2 950.3776016235352, :width 839.9999999999999, :height 1092}), :page 370}, :content {:text " Itcan’t inherit from implementations of bothButtonImageandUserInput"}, :properties {:color "yellow"}} {:id #uuid "62d2c949-a407-4cdd-a49a-83bf2347e21f", :page 370, :position {:bounding {:x1 117.19191551208496, :y1 638.2030944824219, :x2 488.84120750427246, :y2 657.3697814941406, :width 839.9999999999999, :height 1092}, :rects ({:x1 117.19191551208496, :y1 638.2030944824219, :x2 488.84120750427246, :y2 657.3697814941406, :width 839.9999999999999, :height 1092}), :page 370}, :content {:text "Rectanglebyimage, MouseManagerbyinput"}, :properties {:color "yellow"}} {:id #uuid "62d2c95f-757c-474c-950a-41454df181e0", :page 370, :position {:bounding {:x1 73, :y1 409.8125, :x2 542, :y2 678.8125, :width 839.9999999999999, :height 1092}, :rects (), :page 370}, :content {:text "[:span]", :image 1657981277505}, :properties {:color "blue"}} {:id #uuid "62d2cad0-e3c4-45dc-900d-743c24b009fd", :page 371, :position {:bounding {:x1 89.99999809265137, :y1 228.7890625, :x2 750.5541439056396, :y2 280.3646240234375, :width 839.9999999999999, :height 1092}, :rects ({:x1 139.76813316345215, :y1 228.7890625, :x2 750.5541439056396, :y2 256.2890625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 252.8646240234375, :x2 324.8242778778076, :y2 280.3646240234375, :width 839.9999999999999, :height 1092}), :page 371}, :content {:text "This was the goal of multiple inheritance, so delegation effectively solves theneed for multiple inheritance."}, :properties {:color "yellow"}} {:id #uuid "62d2cad6-5696-4412-b038-c636ec56fd11", :page 371, :position {:bounding {:x1 89.44009971618652, :y1 204.71356201171875, :x2 750.2232875823975, :y2 256.2890625, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.44009971618652, :y1 204.71356201171875, :x2 244.10658836364746, :y2 232.21356201171875, :width 839.9999999999999, :height 1092} {:x1 310.93749046325684, :y1 204.71356201171875, :x2 400.2924404144287, :y2 232.21356201171875, :width 839.9999999999999, :height 1092} {:x1 467.18749046325684, :y1 204.71356201171875, :x2 750.2232875823975, :y2 232.21356201171875, :width 839.9999999999999, :height 1092} {:x1 247.53905296325684, :y1 207.78643798828125, :x2 750.2232875823975, :y2 228.61981201171875, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 228.7890625, :x2 130.56418418884277, :y2 256.2890625, :width 839.9999999999999, :height 1092}), :page 371}, :content {:text "The last two lines inmain()show that aButtoncan be upcast to both of its delegatedtypes"}, :properties {:color "yellow"}} {:id #uuid "62d2cb0a-9698-47e5-a5fe-bba876104df2", :page 370, :position {:bounding {:x1 84, :y1 801.96875, :x2 502, :y2 861.96875, :width 839.9999999999999, :height 1092}, :rects (), :page 370}, :content {:text "[:span]", :image 1657981705024}, :properties {:color "blue"}} {:id #uuid "62d2cb44-a03d-4e6c-92d4-f2e16c6dac3d", :page 371, :position {:bounding {:x1 89.99999809265137, :y1 122.1744384765625, :x2 755.0014247894287, :y2 197.82550048828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 122.1744384765625, :x2 317.411283493042, :y2 149.6744384765625, :width 839.9999999999999, :height 1092} {:x1 376.82289695739746, :y1 122.1744384765625, :x2 685.5440273284912, :y2 149.6744384765625, :width 839.9999999999999, :height 1092} {:x1 322.0833339691162, :y1 125.24737548828125, :x2 750.0013027191162, :y2 146.0806884765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 146.25, :x2 133.0332546234131, :y2 173.75, :width 839.9999999999999, :height 1092} {:x1 167.5520839691162, :y1 146.25, :x2 661.0133876800537, :y2 173.75, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 150.4166259765625, :x2 755.0014247894287, :y2 171.25, :width 839.9999999999999, :height 1092} {:x1 119.90884971618652, :y1 170.32550048828125, :x2 124.28384971618652, :y2 197.82550048828125, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 173.3984375, :x2 119.92194175720215, :y2 194.23175048828125, :width 839.9999999999999, :height 1092}), :page 371}, :content {:text "Notice that the definition forimagein the constructor argument list is bothpublicand avar. This allows the client programmer to dynamically replace theButtonIm-age."}, :properties {:color "green"}} {:id #uuid "62d2cb6b-2159-43e3-aff5-0eed44b5d365", :page 371, :position {:bounding {:x1 89.99999809265137, :y1 414.140625, :x2 328.4216899871826, :y2 441.640625, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 414.140625, :x2 328.4216899871826, :y2 441.640625, :width 839.9999999999999, :height 1092}), :page 371}, :content {:text "Use class delegation with care"}, :properties {:color "blue"}} {:id #uuid "62d2cb71-3f9a-48c2-94b9-8693c6dac4bc", :page 371, :position {:bounding {:x1 89.99999809265137, :y1 414.140625, :x2 750.550802230835, :y2 465.71612548828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 337.58339500427246, :y1 414.140625, :x2 750.550802230835, :y2 441.640625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 438.21612548828125, :x2 428.5082378387451, :y2 465.71612548828125, :width 839.9999999999999, :height 1092}), :page 371}, :content {:text "Among the three choices—inheritance, compositionand class delegation—try composition first."}, :properties {:color "blue"}} {:id #uuid "62d2cba6-66bc-46e0-8c82-967bc0a7f2e0", :page 372, :position {:bounding {:x1 89.99999809265137, :y1 182.9296875, :x2 356.499662399292, :y2 241.26300048828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 182.9296875, :x2 356.499662399292, :y2 241.26300048828125, :width 839.9999999999999, :height 1092}), :page 372}, :content {:text "Downcasting"}, :properties {:color "yellow"}} {:id #uuid "62d2cc77-1837-4297-88c1-d001972b7ed9", :page 372, :position {:bounding {:x1 89.99999809265137, :y1 314.4140625, :x2 750.5518779754639, :y2 365.98956298828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 314.4140625, :x2 750.5518779754639, :y2 341.9140625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 338.48956298828125, :x2 189.23978233337402, :y2 365.98956298828125, :width 839.9999999999999, :height 1092}), :page 372}, :content {:text "Upcasts are always safe because the base class cannot have a bigger interface than thederived class"}, :properties {:color "yellow"}} {:id #uuid "62d2cc85-99d6-466b-be96-dd0ee887a2bf", :page 372, :position {:bounding {:x1 89.99999809265137, :y1 362.5650634765625, :x2 750.548360824585, :y2 414.140625, :width 839.9999999999999, :height 1092}, :rects ({:x1 127.27821922302246, :y1 362.5650634765625, :x2 750.548360824585, :y2 390.0650634765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 386.640625, :x2 672.6514263153076, :y2 414.140625, :width 839.9999999999999, :height 1092}), :page 372}, :content {:text "Although object-oriented programming is primarily focused on upcasting, thereare situations where downcasting can be a useful and expedient approach"}, :properties {:color "yellow"}} {:id #uuid "62d2ccce-22f3-4ee1-a386-bd1a234a5b1c", :page 372, :position {:bounding {:x1 89.41406059265137, :y1 421.02864587306976, :x2 750.2069301605225, :y2 472.604146361351, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 421.02864587306976, :x2 750.2069301605225, :y2 448.52864587306976, :width 839.9999999999999, :height 1092} {:x1 525.1432094573975, :y1 425.1953023672104, :x2 750.2069301605225, :y2 444.361958861351, :width 839.9999999999999, :height 1092} {:x1 89.41406059265137, :y1 445.104146361351, :x2 146.7451992034912, :y2 472.604146361351, :width 839.9999999999999, :height 1092}), :page 372}, :content {:text "Downcasting happens at runtime, and is also calledrun-time type identification(RTTI)."}, :properties {:color "green"}} {:id #uuid "62d2ccdf-d602-4860-9cc8-7bb337e73980", :page 372, :position {:bounding {:x1 89.99999809265137, :y1 479.4921773672104, :x2 750.4971523284912, :y2 531.0677083730698, :width 839.9999999999999, :height 1092}, :rects ({:x1 357.9846706390381, :y1 479.4921773672104, :x2 750.4971523284912, :y2 506.9921773672104, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 503.56770837306976, :x2 196.97279930114746, :y2 531.0677083730698, :width 839.9999999999999, :height 1092}), :page 372}, :content {:text " the base type has a narrower interface than thederived types."}, :properties {:color "blue"}} {:id #uuid "62d2cce9-97de-4025-90b3-3b11e201c3b0", :page 372, :position {:bounding {:x1 89.99999809265137, :y1 527.643208861351, :x2 750.5125637054443, :y2 579.2187093496323, :width 839.9999999999999, :height 1092}, :rects ({:x1 227.09581565856934, :y1 527.643208861351, :x2 750.5125637054443, :y2 555.143208861351, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 551.7187093496323, :x2 122.01695823669434, :y2 579.2187093496323, :width 839.9999999999999, :height 1092}), :page 372}, :content {:text "In particular, it cannot know what extended functions are safe tocall:"}, :properties {:color "blue"}} {:id #uuid "62d2ceb0-d40b-471b-8676-d11a9a2ed93b", :page 373, :position {:bounding {:x1 89.99999809265137, :y1 352.2916259765625, :x2 260.8230571746826, :y2 392.2916259765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 352.2916259765625, :x2 260.8230571746826, :y2 392.2916259765625, :width 839.9999999999999, :height 1092}), :page 373}, :content {:text "Smart Casts"}, :properties {:color "yellow"}} {:id #uuid "62d2d01f-3bc3-4a5a-b23a-9024547eacd1", :page 373, :position {:bounding {:x1 91, :y1 612.3125, :x2 499, :y2 653.3125, :width 839.9999999999999, :height 1092}, :rects (), :page 373}, :content {:text "[:span]", :image 1657983006211}, :properties {:color "blue"}} {:id #uuid "62d37ac5-d25f-45c1-9c11-ab5c01dff3f0", :page 373, :position {:bounding {:x1 100.796875, :y1 937.0625, :x2 840.21240234375, :y2 996.03125, :width 940.8, :height 1223.04}, :rects ({:x1 344.6438903808594, :y1 937.0625, :x2 456.938720703125, :y2 969.0625, :width 940.8, :height 1223.04} {:x1 529.046875, :y1 937.0625, :x2 840.21240234375, :y2 969.0625, :width 940.8, :height 1223.04} {:x1 462.046875, :y1 940.703125, :x2 840.21240234375, :y2 963.703125, :width 940.8, :height 1223.04} {:x1 100.796875, :y1 964.03125, :x2 112.046875, :y2 996.03125, :width 940.8, :height 1223.04} {:x1 205.765625, :y1 964.03125, :x2 342.81024169921875, :y2 996.03125, :width 940.8, :height 1223.04} {:x1 415.34375, :y1 964.03125, :x2 420.234375, :y2 996.03125, :width 940.8, :height 1223.04} {:x1 100.796875, :y1 969.03125, :x2 415.3681335449219, :y2 992.03125, :width 940.8, :height 1223.04}), :page 373}, :content {:text "Note that, inmain(), each specific type is first upcast toaCreature, then passed towhat():"}, :properties {:color "yellow"}} {:id #uuid "62d37ad7-4e5e-4ba3-a19c-ef7dea6623ec", :page 373, :position {:bounding {:x1 100.796875, :y1 910.109375, :x2 840.0626831054688, :y2 969.0625, :width 940.8, :height 1223.04}, :rects ({:x1 100.796875, :y1 910.109375, :x2 438.8116455078125, :y2 942.109375, :width 940.8, :height 1223.04} {:x1 492.390625, :y1 910.109375, :x2 667.442138671875, :y2 942.109375, :width 940.8, :height 1223.04} {:x1 698.8125, :y1 910.109375, :x2 840.0626831054688, :y2 942.109375, :width 940.8, :height 1223.04} {:x1 443.15625, :y1 913.734375, :x2 840.0626831054688, :y2 936.734375, :width 940.8, :height 1223.04} {:x1 100.796875, :y1 937.0625, :x2 195.453369140625, :y2 969.0625, :width 940.8, :height 1223.04} {:x1 250.484375, :y1 937.0625, :x2 334.60040283203125, :y2 969.0625, :width 940.8, :height 1223.04} {:x1 100.796875, :y1 942.0625, :x2 245.29229736328125, :y2 964.0625, :width 940.8, :height 1223.04}), :page 373}, :content {:text "Smart casts are especially useful insidewhenexpressions that useisto search for thetype of thewhenargument"}, :properties {:color "yellow"}} {:id #uuid "62d37b25-1a68-4940-a168-e01f4cb82a07", :page 374, :position {:bounding {:x1 77, :y1 545, :x2 456, :y2 733, :width 940.8, :height 1223.04}, :rects (), :page 374}, :content {:text "[:span]", :image 1658026788733}, :properties {:color "blue"}} {:id #uuid "62d37b73-632d-4c42-92af-f2cb6df10e1d", :page 374, :position {:bounding {:x1 100.796875, :y1 1002.53125, :x2 840.3807373046875, :y2 1061.5, :width 940.8, :height 1223.04}, :rects ({:x1 100.796875, :y1 1002.53125, :x2 840.3807373046875, :y2 1034.53125, :width 940.8, :height 1223.04} {:x1 100.796875, :y1 1029.5, :x2 385.3623962402344, :y2 1061.5, :width 940.8, :height 1223.04}), :page 374}, :content {:text "Class hierarchies are traditionally drawn with the base class at the top and derivedclasses fanning down below it."}, :properties {:color "yellow"}} {:id #uuid "62d37ba0-2b3e-4edb-8465-2f0473ac7ef6", :page 374, :position {:bounding {:x1 168.9957332611084, :y1 967.6431884765625, :x2 691.0235042572021, :y2 995.1431884765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 168.9957332611084, :y1 967.6431884765625, :x2 691.0235042572021, :y2 995.1431884765625, :width 839.9999999999999, :height 1092}), :page 374}, :content {:text " from the more-general base class to a more-specific derived class."}, :properties {:color "yellow"}} {:id #uuid "62d37bd5-7a38-4fb1-9809-3c4bed06f5e9", :page 375, :position {:bounding {:x1 89.99999809265137, :y1 288.4505615234375, :x2 454.6150188446045, :y2 328.4505615234375, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 288.4505615234375, :x2 454.6150188446045, :y2 328.4505615234375, :width 839.9999999999999, :height 1092}), :page 375}, :content {:text "The Modifiable Reference"}, :properties {:color "yellow"}} {:id #uuid "62d37bea-e71f-4ecf-8d7b-e6e00bda08d6", :page 375, :position {:bounding {:x1 89.29687309265137, :y1 122.17449951171875, :x2 750.1275844573975, :y2 173.75, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.29687309265137, :y1 122.17449951171875, :x2 102.83853721618652, :y2 149.67449951171875, :width 839.9999999999999, :height 1092} {:x1 158.0989589691162, :y1 122.17449951171875, :x2 524.0967617034912, :y2 149.67449951171875, :width 839.9999999999999, :height 1092} {:x1 578.8020839691162, :y1 122.17449951171875, :x2 750.1275844573975, :y2 149.67449951171875, :width 839.9999999999999, :height 1092} {:x1 110.67708396911621, :y1 125.2474365234375, :x2 750.1275844573975, :y2 146.08074951171875, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 146.25, :x2 274.88061332702637, :y2 173.75, :width 839.9999999999999, :height 1092}), :page 375}, :content {:text "Awhenexpression that produces a value requires anelsebranch to capture allremaining possibilities."}, :properties {:color "red"}} {:id #uuid "62d37c3d-0070-4f95-83e1-72f1bee90e4f", :page 375, :position {:bounding {:x1 89.99999809265137, :y1 425.50777435302734, :x2 750.5523891448975, :y2 477.08333587646484, :width 839.9999999999999, :height 1092}, :rects ({:x1 592.521993637085, :y1 425.50777435302734, :x2 750.5523891448975, :y2 453.00777435302734, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 449.58333587646484, :x2 599.081937789917, :y2 477.08333587646484, :width 839.9999999999999, :height 1092}), :page 375}, :content {:text " That is, the specifictype of the object might change between type detection and use."}, :properties {:color "yellow"}} {:id #uuid "62d397f8-9d3c-4135-93b9-93a01fb5fa1d", :page 375, :position {:bounding {:x1 89.99999809265137, :y1 483.95831298828125, :x2 750.2317714691162, :y2 559.609375, :width 839.9999999999999, :height 1092}, :rects ({:x1 632.8264980316162, :y1 483.95831298828125, :x2 750.2317714691162, :y2 511.45831298828125, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 508.0338439941406, :x2 492.95956230163574, :y2 535.5338134765625, :width 839.9999999999999, :height 1092} {:x1 522.2916469573975, :y1 508.0338439941406, :x2 750.165548324585, :y2 535.5338134765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 512.2005004882812, :x2 750.165548324585, :y2 531.3671875, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 532.109375, :x2 156.60886192321777, :y2 559.609375, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 536.2760009765625, :x2 156.60886192321777, :y2 555.4426879882812, :width 839.9999999999999, :height 1092}), :page 375}, :content {:text " this argumentbe immutable so that it cannot change between theisexpression and the call madeafter the"}, :properties {:color "yellow"}} {:id #uuid "62d3980a-4bfb-4297-8968-8474f1b0408a", :page 376, :position {:bounding {:x1 89.44009971618652, :y1 186.69268798828125, :x2 727.7523403167725, :y2 214.19268798828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.44009971618652, :y1 186.69268798828125, :x2 119.61714744567871, :y2 214.19268798828125, :width 839.9999999999999, :height 1092} {:x1 141.36717796325684, :y1 186.69268798828125, :x2 347.25136375427246, :y2 214.19268798828125, :width 839.9999999999999, :height 1092} {:x1 388.82811546325684, :y1 186.69268798828125, :x2 404.5825710296631, :y2 214.19268798828125, :width 839.9999999999999, :height 1092} {:x1 516.0807094573975, :y1 186.69268798828125, :x2 560.4095058441162, :y2 214.19268798828125, :width 839.9999999999999, :height 1092} {:x1 602.1093349456787, :y1 186.69268798828125, :x2 617.863790512085, :y2 214.19268798828125, :width 839.9999999999999, :height 1092} {:x1 723.4505214691162, :y1 186.69268798828125, :x2 727.7523403167725, :y2 214.19268798828125, :width 839.9999999999999, :height 1092} {:x1 125.49478721618652, :y1 189.765625, :x2 723.457052230835, :y2 210.59893798828125, :width 839.9999999999999, :height 1092}), :page 376}, :content {:text "Thecconstructor argument is avalinSmartCast1and avarinSmartCast2."}, :properties {:color "blue"}} {:id #uuid "62d3982a-eba2-4c77-90c6-50b1162e25c3", :page 376, :position {:bounding {:x1 89.99999809265137, :y1 245.15625, :x2 750.2745571136475, :y2 296.73175048828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 245.15625, :x2 255.06508445739746, :y2 272.65625, :width 839.9999999999999, :height 1092} {:x1 352.68227195739746, :y1 245.15625, :x2 750.2745571136475, :y2 272.65625, :width 839.9999999999999, :height 1092} {:x1 110.23436546325684, :y1 249.32293701171875, :x2 750.2745571136475, :y2 268.48956298828125, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 269.23175048828125, :x2 585.0510540008545, :y2 296.73175048828125, :width 839.9999999999999, :height 1092}), :page 376}, :content {:text "In[1], the expressionval c = clooks odd, and only used here for convenience—wedon’t recommend “shadowing” identifier names in normal code"}, :properties {:color "blue"}} {:id #uuid "62d39840-f5fa-4c97-a8c5-d513899ec955", :page 376, :position {:bounding {:x1 254.33522605895996, :y1 293.30731201171875, :x2 535.7812099456787, :y2 320.80731201171875, :width 839.9999999999999, :height 1092}, :rects ({:x1 254.33522605895996, :y1 293.30731201171875, :x2 520.915548324585, :y2 320.80731201171875, :width 839.9999999999999, :height 1092} {:x1 524.8177089691162, :y1 296.38018798828125, :x2 535.7812099456787, :y2 317.21356201171875, :width 839.9999999999999, :height 1092}), :page 376}, :content {:text " captures the value of the propertyc"}, :properties {:color "blue"}} {:id #uuid "62d3984e-407f-4425-991c-8a4b83cd6633", :page 376, :position {:bounding {:x1 89.99999809265137, :y1 293.30731201171875, :x2 750.0224208831787, :y2 344.8828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 618.1551723480225, :y1 293.30731201171875, :x2 719.2878017425537, :y2 320.80731201171875, :width 839.9999999999999, :height 1092} {:x1 737.3958339691162, :y1 293.30731201171875, :x2 750.0224208831787, :y2 320.80731201171875, :width 839.9999999999999, :height 1092} {:x1 723.2942714691162, :y1 296.38018798828125, :x2 750.0224208831787, :y2 317.21356201171875, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 317.3828125, :x2 100.05208396911621, :y2 344.8828125, :width 839.9999999999999, :height 1092} {:x1 138.2942714691162, :y1 317.3828125, :x2 349.9005947113037, :y2 344.8828125, :width 839.9999999999999, :height 1092} {:x1 369.12758445739746, :y1 317.3828125, :x2 395.43578147888184, :y2 344.8828125, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 321.54949951171875, :x2 430.0391445159912, :y2 342.3828125, :width 839.9999999999999, :height 1092}), :page 376}, :content {:text " the propertycisavarwhile the local (shadowed)cis aval"}, :properties {:color "blue"}} {:id #uuid "62d3985f-9af6-4a61-a1b4-b073a7fa9775", :page 376, :position {:bounding {:x1 89.99999809265137, :y1 341.47137451171875, :x2 750.1888637542725, :y2 393.046875, :width 839.9999999999999, :height 1092}, :rects ({:x1 151.3013515472412, :y1 341.47137451171875, :x2 151.3138027191162, :y2 368.97137451171875, :width 839.9999999999999, :height 1092} {:x1 171.3020839691162, :y1 341.47137451171875, :x2 456.5285243988037, :y2 368.97137451171875, :width 839.9999999999999, :height 1092} {:x1 491.2499599456787, :y1 341.47137451171875, :x2 750.1888637542725, :y2 368.97137451171875, :width 839.9999999999999, :height 1092} {:x1 156.28905296325684, :y1 344.53125, :x2 750.1888637542725, :y2 365.36456298828125, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 365.546875, :x2 180.7552089691162, :y2 393.046875, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 369.71356201171875, :x2 176.40334129333496, :y2 388.88018798828125, :width 839.9999999999999, :height 1092}), :page 376}, :content {:text "cwill now be the property, which is avar. This produces an error messagefor line[2]:"}, :properties {:color "blue"}} {:id #uuid "62d39866-d803-43bf-ad46-d7a7357b9057", :page 376, :position {:bounding {:x1 131.51041221618652, :y1 404.90887451171875, :x2 750.5318965911865, :y2 456.484375, :width 839.9999999999999, :height 1092}, :rects ({:x1 131.51041221618652, :y1 404.90887451171875, :x2 750.5318965911865, :y2 432.40887451171875, :width 839.9999999999999, :height 1092} {:x1 131.51041221618652, :y1 428.984375, :x2 378.2105007171631, :y2 456.484375, :width 839.9999999999999, :height 1092}), :page 376}, :content {:text "Smartcastto‘Human’isimpossible,because‘c’isamutablepropertythatcouldhave been changed by this time"}, :properties {:color "red"}} {:id #uuid "62d398a2-e05d-4596-82bf-64994299bbb2", :page 375, :position {:bounding {:x1 74, :y1 821.15625, :x2 487, :y2 997.15625, :width 839.9999999999999, :height 1092}, :rects (), :page 375}, :content {:text "[:span]", :image 1658034337320}, :properties {:color "blue"}} {:id #uuid "62d3990f-cd24-4eb9-b7ba-4abfc805c87f", :page 376, :position {:bounding {:x1 89.99999809265137, :y1 468.34637451171875, :x2 753.4264125823975, :y2 519.921875, :width 839.9999999999999, :height 1092}, :rects ({:x1 471.8768825531006, :y1 468.34637451171875, :x2 638.5486660003662, :y2 495.84637451171875, :width 839.9999999999999, :height 1092} {:x1 695.9635219573975, :y1 468.34637451171875, :x2 753.4264125823975, :y2 495.84637451171875, :width 839.9999999999999, :height 1092} {:x1 642.1744594573975, :y1 471.41925048828125, :x2 753.4264125823975, :y2 492.25262451171875, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 492.421875, :x2 669.1914043426514, :y2 519.921875, :width 839.9999999999999, :height 1092}), :page 376}, :content {:text " This is not limited towhileexpres-sions; there are other situations that can produce the same error message."}, :properties {:color "green"}} {:id #uuid "62d3994b-b955-4bd7-8443-a36febddf5ba", :page 376, :position {:bounding {:x1 136.85329246520996, :y1 574.9609375, :x2 693.5497646331787, :y2 602.4609375, :width 839.9999999999999, :height 1092}, :rects ({:x1 136.85329246520996, :y1 574.9609375, :x2 693.5497646331787, :y2 602.4609375, :width 839.9999999999999, :height 1092}), :page 376}, :content {:text " (Concurrency is an advanced topic that we do not cover in this book)."}, :properties {:color "red"}} {:id #uuid "62d3c1fe-ad9c-4dfc-b791-d156c557ca63", :page 376, :position {:bounding {:x1 89.99999809265137, :y1 847.8515396118164, :x2 311.8965358734131, :y2 887.8515396118164, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 847.8515396118164, :x2 142.43651390075684, :y2 887.8515396118164, :width 839.9999999999999, :height 1092} {:x1 186.04166221618652, :y1 847.8515396118164, :x2 311.8965358734131, :y2 887.8515396118164, :width 839.9999999999999, :height 1092} {:x1 149.86978721618652, :y1 852.0051651000977, :x2 178.6005153656006, :y2 882.8385391235352, :width 839.9999999999999, :height 1092} {:x1 149.86978721618652, :y1 854.5051651000977, :x2 178.6005153656006, :y2 880.3385391235352, :width 839.9999999999999, :height 1092}), :page 376}, :content {:text "TheasKeyword"}, :properties {:color "yellow"}} {:id #uuid "62d3c201-2bc6-4acc-b86f-bc8b70d891b5", :page 376, :position {:bounding {:x1 89.99999809265137, :y1 847.8515396118164, :x2 311.8965358734131, :y2 887.8515396118164, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 847.8515396118164, :x2 142.43651390075684, :y2 887.8515396118164, :width 839.9999999999999, :height 1092} {:x1 186.04166221618652, :y1 847.8515396118164, :x2 311.8965358734131, :y2 887.8515396118164, :width 839.9999999999999, :height 1092} {:x1 149.86978721618652, :y1 852.0051651000977, :x2 178.6005153656006, :y2 882.8385391235352, :width 839.9999999999999, :height 1092} {:x1 149.86978721618652, :y1 854.5051651000977, :x2 178.6005153656006, :y2 880.3385391235352, :width 839.9999999999999, :height 1092}), :page 376}, :content {:text "TheasKeyword"}, :properties {:color "yellow"}} {:id #uuid "62d3c203-fb13-45db-ad18-a280da2f8c4a", :page 376, :position {:bounding {:x1 89.99999809265137, :y1 847.8515396118164, :x2 311.8965358734131, :y2 887.8515396118164, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 847.8515396118164, :x2 142.43651390075684, :y2 887.8515396118164, :width 839.9999999999999, :height 1092} {:x1 186.04166221618652, :y1 847.8515396118164, :x2 311.8965358734131, :y2 887.8515396118164, :width 839.9999999999999, :height 1092} {:x1 149.86978721618652, :y1 852.0051651000977, :x2 178.6005153656006, :y2 882.8385391235352, :width 839.9999999999999, :height 1092} {:x1 149.86978721618652, :y1 854.5051651000977, :x2 178.6005153656006, :y2 880.3385391235352, :width 839.9999999999999, :height 1092}), :page 376}, :content {:text "TheasKeyword"}, :properties {:color "yellow"}} {:id #uuid "62d3c3b4-7d85-46e7-812a-2fc5857a4ec7", :page 376, :position {:bounding {:x1 89.50520896911621, :y1 633.4244384765625, :x2 750.190938949585, :y2 709.0755004882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 569.1284999847412, :y1 633.4244384765625, :x2 569.1415615081787, :y2 660.9244384765625, :width 839.9999999999999, :height 1092} {:x1 679.8437099456787, :y1 633.4244384765625, :x2 750.0439052581787, :y2 660.9244384765625, :width 839.9999999999999, :height 1092} {:x1 574.5442714691162, :y1 636.4973754882812, :x2 750.0439052581787, :y2 657.3306884765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 657.5, :x2 206.07640647888184, :y2 685, :width 839.9999999999999, :height 1092} {:x1 228.04686546325684, :y1 657.5, :x2 311.08412742614746, :y2 685, :width 839.9999999999999, :height 1092} {:x1 346.99217796325684, :y1 657.5, :x2 386.85829734802246, :y2 685, :width 839.9999999999999, :height 1092} {:x1 498.6458339691162, :y1 657.5, :x2 750.190938949585, :y2 685, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 661.6666259765625, :x2 750.190938949585, :y2 682.5, :width 839.9999999999999, :height 1092} {:x1 139.3489589691162, :y1 681.5755004882812, :x2 143.7239589691162, :y2 709.0755004882812, :width 839.9999999999999, :height 1092} {:x1 89.50520896911621, :y1 684.6484375, :x2 139.3529109954834, :y2 705.4817504882812, :width 839.9999999999999, :height 1092}), :page 376}, :content {:text "SmartCast1does thisby making thecproperty aval, andSmartCast2does it by introducing the localval c."}, :properties {:color "red"}} {:id #uuid "62d3c3c0-c667-42cf-89c4-0bb9747f7a7c", :page 375, :position {:bounding {:x1 57, :y1 629.3125, :x2 447, :y2 820.3125, :width 839.9999999999999, :height 1092}, :rects (), :page 375}, :content {:text "[:span]", :image 1658045375247}, :properties {:color "blue"}} {:id #uuid "62d3c56c-001f-44da-b57b-d0aa3700194d", :page 375, :position {:bounding {:x1 89.99999809265137, :y1 353.2682113647461, :x2 750.5411586761475, :y2 453.00777435302734, :width 839.9999999999999, :height 1092}, :rects ({:x1 538.9326992034912, :y1 353.2682113647461, :x2 750.5411586761475, :y2 380.7682113647461, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 377.34374237060547, :x2 313.5222454071045, :y2 404.84374237060547, :width 839.9999999999999, :height 1092} {:x1 347.92967796325684, :y1 377.34374237060547, :x2 750.3465175628662, :y2 404.84374237060547, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 381.5103988647461, :x2 750.3465175628662, :y2 400.67708587646484, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 401.41927337646484, :x2 750.5059185028076, :y2 428.91927337646484, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 405.58592987060547, :x2 750.5059185028076, :y2 424.7525863647461, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 425.50777435302734, :x2 145.6740016937256, :y2 453.00777435302734, :width 839.9999999999999, :height 1092}), :page 375}, :content {:text " If the base-class referenceto the object is modifiable (avar), then there’s a possibility that this reference couldbe assigned to a different object between the instant that the type is detected and theinstant"}, :properties {:color "red"}} {:id #uuid "62d3ca10-d074-4eba-9ba2-5d2f93334f24", :page 376, :position {:bounding {:x1 89.99999809265137, :y1 609.3489379882812, :x2 750.0658168792725, :y2 660.9244384765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 609.3489379882812, :x2 329.8269329071045, :y2 636.8489379882812, :width 839.9999999999999, :height 1092} {:x1 350.58592796325684, :y1 609.3489379882812, :x2 656.1980800628662, :y2 636.8489379882812, :width 839.9999999999999, :height 1092} {:x1 686.8619594573975, :y1 609.3489379882812, :x2 750.0658168792725, :y2 636.8489379882812, :width 839.9999999999999, :height 1092} {:x1 335.1302089691162, :y1 612.421875, :x2 750.0658168792725, :y2 633.2551879882812, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 633.4244384765625, :x2 316.1486186981201, :y2 660.9244384765625, :width 839.9999999999999, :height 1092} {:x1 337.14842796325684, :y1 633.4244384765625, :x2 564.7668056488037, :y2 660.9244384765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 637.5911254882812, :x2 332.53905296325684, :y2 656.7578125, :width 839.9999999999999, :height 1092}), :page 376}, :content {:text "Kotlin forces us to ensure thatcwill not change from the time that theischeck isperformed and the time thatcis used as the downcast type"}, :properties {:color "red"}} {:id #uuid "62d3cd95-2e89-46a3-8b6b-5555fadb4a6e", :page 377, :position {:bounding {:x1 108.12499046325684, :y1 290.28643798828125, :x2 180.64542198181152, :y2 309.453125, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.12499046325684, :y1 290.28643798828125, :x2 180.64542198181152, :y2 309.453125, :width 839.9999999999999, :height 1092}), :page 377}, :content {:text "casDog"}, :properties {:color "blue"}} {:id #uuid "62d3ceb7-7da3-4c5c-b962-e39e6da9f174", :page 377, :position {:bounding {:x1 89.99999809265137, :y1 555.0650634765625, :x2 750.0224208831787, :y2 606.640625, :width 839.9999999999999, :height 1092}, :rects ({:x1 257.0833339691162, :y1 555.0650634765625, :x2 454.04295921325684, :y2 582.5650634765625, :width 839.9999999999999, :height 1092} {:x1 483.04686546325684, :y1 555.0650634765625, :x2 577.8470058441162, :y2 582.5650634765625, :width 839.9999999999999, :height 1092} {:x1 665.0911464691162, :y1 555.0650634765625, :x2 712.3501796722412, :y2 582.5650634765625, :width 839.9999999999999, :height 1092} {:x1 737.3958339691162, :y1 555.0650634765625, :x2 750.0224208831787, :y2 582.5650634765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 558.1380004882812, :x2 750.0224208831787, :y2 578.9713134765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 579.140625, :x2 180.46381187438965, :y2 606.640625, :width 839.9999999999999, :height 1092} {:x1 220.2864589691162, :y1 579.140625, :x2 476.6170253753662, :y2 606.640625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 583.3072509765625, :x2 215.31256675720215, :y2 602.4739379882812, :width 839.9999999999999, :height 1092}), :page 377}, :content {:text "dogBarkUnsafe2()shows a second form ofas: if you sayc as Dog, thencistreated as aDogthroughout the rest of the scope."}, :properties {:color "yellow"}} {:id #uuid "62d3cec4-6f57-4bd5-8dd6-2f3d187bbbb2", :page 377, :position {:bounding {:x1 102.44273948669434, :y1 613.5286483764648, :x2 474.23573875427246, :y2 641.0286483764648, :width 839.9999999999999, :height 1092}, :rects ({:x1 102.44273948669434, :y1 613.5286483764648, :x2 158.4803066253662, :y2 641.0286483764648, :width 839.9999999999999, :height 1092} {:x1 187.1614589691162, :y1 613.5286483764648, :x2 290.4038600921631, :y2 641.0286483764648, :width 839.9999999999999, :height 1092} {:x1 162.81249046325684, :y1 616.6015243530273, :x2 474.23573875427246, :y2 637.4348983764648, :width 839.9999999999999, :height 1092}), :page 377}, :content {:text " failingascast throws aClassCastException"}, :properties {:color "yellow"}} {:id #uuid "62d3cef1-5e42-4ccb-808b-05d42997f564", :page 377, :position {:bounding {:x1 89.99999809265137, :y1 696.0677108764648, :x2 293.8575038909912, :y2 723.5677108764648, :width 839.9999999999999, :height 1092}, :rects ({:x1 289.41405296325684, :y1 696.0677108764648, :x2 293.8575038909912, :y2 723.5677108764648, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 699.1405868530273, :x2 289.44018363952637, :y2 719.9739608764648, :width 839.9999999999999, :height 1092}), :page 377}, :content {:text "NullPointerException."}, :properties {:color "yellow"}} {:id #uuid "62d3d016-457c-413d-aca5-dedbc38db3f3", :page 214, :position {:bounding {:x1 81.74479168653488, :y1 166.97918701171875, :x2 357.3277079463005, :y2 219.47918701171875, :width 763, :height 991.9000000000001}, :rects ({:x1 81.74479168653488, :y1 166.97918701171875, :x2 357.3277079463005, :y2 219.47918701171875, :width 763, :height 991.9000000000001}), :page 214}, :content {:text "Nullable Types"}, :properties {:color "yellow"}} {:id #uuid "62d4cb0a-1b06-450c-89ad-20a222246441", :page 225, :position {:bounding {:x1 89.6753009557724, :y1 183.1875, :x2 695.6493610143661, :y2 240.6983642578125, :width 837, :height 1088.1000000000001}, :rects ({:x1 89.6753009557724, :y1 183.1875, :x2 695.6493610143661, :y2 240.6983642578125, :width 837, :height 1088.1000000000001}), :page 225}, :content {:text "Extensions for Nullable Types"}, :properties {:color "yellow"}} {:id #uuid "62d4cb21-2a96-430d-85c2-1c6f8933a69f", :page 218, :position {:bounding {:x1 89.6753009557724, :y1 183.1875, :x2 708.6642535924911, :y2 240.6983642578125, :width 837, :height 1088.1000000000001}, :rects ({:x1 89.6753009557724, :y1 183.1875, :x2 708.6642535924911, :y2 240.6983642578125, :width 837, :height 1088.1000000000001}), :page 218}, :content {:text "Safe Calls & the Elvis Operator"}, :properties {:color "yellow"}} {:id #uuid "62d4cd34-f40d-4b45-a9b6-10792dcc92ec", :page 377, :position {:bounding {:x1 70, :y1 840.53125, :x2 434, :y2 898.53125, :width 837, :height 1088.1000000000001}, :rects (), :page 377}, :content {:text "[:span]", :image 1658113332092}, :properties {:color "blue"}} {:id #uuid "62d4cdd6-9901-489b-918f-a1a41e94be5e", :page 378, :position {:bounding {:x1 89.6753009557724, :y1 121.3262939453125, :x2 747.3818897008896, :y2 172.70379638671875, :width 837, :height 1088.1000000000001}, :rects ({:x1 400.19545781612396, :y1 121.3262939453125, :x2 444.12221562862396, :y2 148.71240234375, :width 837, :height 1088.1000000000001} {:x1 563.8689502477646, :y1 121.3262939453125, :x2 747.3818897008896, :y2 148.71240234375, :width 837, :height 1088.1000000000001} {:x1 449.34642827510834, :y1 124.63543701171875, :x2 747.3818897008896, :y2 145.6314697265625, :width 837, :height 1088.1000000000001} {:x1 89.6753009557724, :y1 145.317626953125, :x2 399.9929279088974, :y2 172.70379638671875, :width 837, :height 1088.1000000000001} {:x1 432.1587756872177, :y1 145.317626953125, :x2 481.4536975622177, :y2 172.70379638671875, :width 837, :height 1088.1000000000001} {:x1 89.6753009557724, :y1 149.88201904296875, :x2 547.2404712438583, :y2 170.8780517578125, :width 837, :height 1088.1000000000001}), :page 378}, :content {:text "Thus,(c as? Dog)is a nullable expressionand we must use the safe call operator?.to callbark()"}, :properties {:color "yellow"}} {:id #uuid "62d4d08f-8873-4f2d-ad71-cdc5e5ee6034", :page 378, :position {:bounding {:x1 81.74479168653488, :y1 230.24737548828125, :x2 413.34458416700363, :y2 266.9140625, :width 763, :height 991.9000000000001}, :rects ({:x1 81.74479168653488, :y1 230.24737548828125, :x2 413.34458416700363, :y2 266.9140625, :width 763, :height 991.9000000000001}), :page 378}, :content {:text "Discovering Types in Lists"}, :properties {:color "yellow"}} {:id #uuid "62d4d3a8-01c6-484d-bab2-d74f78167fbf", :page 378, :position {:bounding {:x1 80.91145581007004, :y1 289.27081298828125, :x2 681.7134806513786, :y2 336.14581298828125, :width 763, :height 991.9000000000001}, :rects ({:x1 80.91145581007004, :y1 289.27081298828125, :x2 273.7911860346794, :y2 314.27081298828125, :width 763, :height 991.9000000000001} {:x1 304.0494791865349, :y1 289.27081298828125, :x2 581.3397013545036, :y2 314.27081298828125, :width 763, :height 991.9000000000001} {:x1 623.5156046748161, :y1 289.27081298828125, :x2 681.7134806513786, :y2 314.27081298828125, :width 763, :height 991.9000000000001} {:x1 279.80466717481613, :y1 292.2916564941406, :x2 681.7134806513786, :y2 311.45831298828125, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 311.14581298828125, :x2 404.1085154414177, :y2 336.14581298828125, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 315.3125, :x2 135.75986737012863, :y2 332.8125, :width 763, :height 991.9000000000001}), :page 378}, :content {:text "When used in a predicate,isfinds objects of a given type within aList, or anyiterable(something you can iterate through):"}, :properties {:color "yellow"}} {:id #uuid "62d4d423-0721-4079-9636-5f695fd7db6d", :page 378, :position {:bounding {:x1 98.21614331007004, :y1 556.5885009765625, :x2 419.2915751338005, :y2 574.0885009765625, :width 763, :height 991.9000000000001}, :rects ({:x1 98.21614331007004, :y1 556.5885009765625, :x2 271.10352581739426, :y2 574.0885009765625, :width 763, :height 991.9000000000001} {:x1 369.9088541865349, :y1 556.5885009765625, :x2 419.2915751338005, :y2 574.0885009765625, :width 763, :height 991.9000000000001}), :page 378}, :content {:text "dog?.bark() eq\"Yip!\"// [2]"}, :properties {:color "yellow"}} {:id #uuid "62d4d432-d600-4cdb-81a4-bb0678d908de", :page 378, :position {:bounding {:x1 114.67447918653488, :y1 519.4140625, :x2 419.2915751338005, :y2 555.4947509765625, :width 763, :height 991.9000000000001}, :rects ({:x1 172.29000347852707, :y1 519.4140625, :x2 221.6914011836052, :y2 536.9140625, :width 763, :height 991.9000000000001} {:x1 114.67447918653488, :y1 537.9947509765625, :x2 336.98923748731613, :y2 555.4947509765625, :width 763, :height 991.9000000000001} {:x1 369.9088541865349, :y1 537.9947509765625, :x2 419.2915751338005, :y2 555.4947509765625, :width 763, :height 991.9000000000001}), :page 378}, :content {:text " group.find { itisDog }asDog?// [1]"}, :properties {:color "yellow"}} {:id #uuid "62d4f77e-33e5-43c1-8aff-6e4bdb5dd9a3", :page 378, :position {:bounding {:x1 81.74479168653488, :y1 610.9765625, :x2 681.3121134638786, :y2 657.8385009765625, :width 763, :height 991.9000000000001}, :rects ({:x1 81.74479168653488, :y1 610.9765625, :x2 139.50838726758957, :y2 635.9765625, :width 763, :height 991.9000000000001} {:x1 194.83072918653488, :y1 610.9765625, :x2 255.12786358594894, :y2 635.9765625, :width 763, :height 991.9000000000001} {:x1 332.57810467481613, :y1 610.9765625, :x2 343.197458922863, :y2 635.9765625, :width 763, :height 991.9000000000001} {:x1 407.5911356806755, :y1 610.9765625, :x2 472.22889202833176, :y2 635.9765625, :width 763, :height 991.9000000000001} {:x1 549.7004801630974, :y1 610.9765625, :x2 681.3121134638786, :y2 635.9765625, :width 763, :height 991.9000000000001} {:x1 144.5051981806755, :y1 613.984375, :x2 681.3121134638786, :y2 633.1510009765625, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 632.8385009765625, :x2 123.575144469738, :y2 657.8385009765625, :width 763, :height 991.9000000000001} {:x1 155.0130106806755, :y1 632.8385009765625, :x2 472.54603070020676, :y2 657.8385009765625, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 637.0051879882812, :x2 446.4874674677849, :y2 654.5051879882812, :width 763, :height 991.9000000000001}), :page 378}, :content {:text "BecausegroupcontainsCreatures,find()returns aCreature. We want to treatit as aDog, so we explicitly cast it at the end of line[1]"}, :properties {:color "yellow"}} {:id #uuid "62d4f798-af0f-4341-be92-dabf92a3e0ad", :page 378, :position {:bounding {:x1 47, :y1 484.15625, :x2 459, :y2 607.15625, :width 763, :height 991.9000000000001}, :rects (), :page 378}, :content {:text "[:span]", :image 1658124183300}, :properties {:color "blue"}} {:id #uuid "62d4f7af-572a-4ce0-afc1-307e963c9ecc", :page 378, :position {:bounding {:x1 81.74479168653488, :y1 632.8385429382324, :x2 681.2626139521599, :y2 679.7135429382324, :width 763, :height 991.9000000000001}, :rects ({:x1 480.78235882520676, :y1 632.8385429382324, :x2 624.6924235224724, :y2 657.8385429382324, :width 763, :height 991.9000000000001} {:x1 656.0416666865349, :y1 632.8385429382324, :x2 681.2626139521599, :y2 657.8385429382324, :width 763, :height 991.9000000000001} {:x1 628.8671671748161, :y1 635.8593559265137, :x2 681.2626139521599, :y2 655.0260429382324, :width 763, :height 991.9000000000001} {:x1 127.0312449336052, :y1 654.7135429382324, :x2 232.75882977247238, :y2 679.7135429382324, :width 763, :height 991.9000000000001} {:x1 295.6380106806755, :y1 654.7135429382324, :x2 359.55173748731613, :y2 679.7135429382324, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 657.7213554382324, :x2 400.0579020380974, :y2 676.8879814147949, :width 763, :height 991.9000000000001}), :page 378}, :content {:text "There might be zeroDogs ingroup, in which casefind()returns anull"}, :properties {:color "blue"}} {:id #uuid "62d4f7bc-f19a-42b1-9684-f9be766fe460", :page 378, :position {:bounding {:x1 81.22395581007004, :y1 707.8124809265137, :x2 627.0479533076286, :y2 732.8124809265137, :width 763, :height 991.9000000000001}, :rects ({:x1 81.22395581007004, :y1 707.8124809265137, :x2 458.34873455762863, :y2 732.8124809265137, :width 763, :height 991.9000000000001} {:x1 368.0729166865349, :y1 711.9791679382324, :x2 627.0479533076286, :y2 729.4791679382324, :width 763, :height 991.9000000000001}), :page 378}, :content {:text "You can usually avoid the code in line[1]by usingfilterIsInstance()"}, :properties {:color "yellow"}} {:id #uuid "62d4f7cf-4894-444b-8a33-ba4fd466f73f", :page 379, :position {:bounding {:x1 56, :y1 173.65625, :x2 425, :y2 346.65625, :width 763, :height 991.9000000000001}, :rects (), :page 379}, :content {:text "[:span]", :image 1658124238125}, :properties {:color "blue"}} {:id #uuid "62d4f803-dea6-463a-8150-c67ca5442e70", :page 379, :position {:bounding {:x1 81.74479168653488, :y1 376.96612548828125, :x2 683.0245158076286, :y2 445.703125, :width 763, :height 991.9000000000001}, :rects ({:x1 131.04648846387863, :y1 376.96612548828125, :x2 469.2776286005974, :y2 401.96612548828125, :width 763, :height 991.9000000000001} {:x1 553.3593546748161, :y1 376.96612548828125, :x2 618.8840739130974, :y2 401.96612548828125, :width 763, :height 991.9000000000001} {:x1 666.9140421748161, :y1 376.96612548828125, :x2 681.2596232295036, :y2 401.96612548828125, :width 763, :height 991.9000000000001} {:x1 474.9869791865349, :y1 379.97393798828125, :x2 681.2596232295036, :y2 399.140625, :width 763, :height 991.9000000000001} {:x1 157.8124949336052, :y1 398.828125, :x2 458.4163767695427, :y2 423.828125, :width 763, :height 991.9000000000001} {:x1 507.0963541865349, :y1 398.828125, :x2 516.4311320185661, :y2 423.828125, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 401.84893798828125, :x2 683.0245158076286, :y2 421.015625, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 420.703125, :x2 306.11094158887863, :y2 445.703125, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 424.86981201171875, :x2 356.7656962275505, :y2 442.36981201171875, :width 763, :height 991.9000000000001}), :page 379}, :content {:text " However, the result types are different: whilefilter()returns aListofCreature(even though all the resulting elements areHuman),filterIsInstance()returns a list of the target typeHuman"}, :properties {:color "yellow"}} {:id #uuid "62d4fbd1-13da-4626-af7f-c7e7f717bc48", :page 381, :position {:bounding {:x1 81.2890574336052, :y1 110.5859375, :x2 620.2224528193474, :y2 135.5859375, :width 763, :height 991.9000000000001}, :rects ({:x1 131.1067606806755, :y1 110.5859375, :x2 157.84559124708176, :y2 135.5859375, :width 763, :height 991.9000000000001} {:x1 194.04947918653488, :y1 110.5859375, :x2 486.196238219738, :y2 135.5859375, :width 763, :height 991.9000000000001} {:x1 576.5624796748161, :y1 110.5859375, :x2 620.2224528193474, :y2 135.5859375, :width 763, :height 991.9000000000001} {:x1 81.2890574336052, :y1 113.60675048828125, :x2 572.0331217646599, :y2 132.7734375, :width 763, :height 991.9000000000001}), :page 381}, :content {:text "TrainandBuseach contain different details about theirTransportmode."}, :properties {:color "yellow"}} {:id #uuid "62d4fd52-a290-46c1-b2e1-66399413738d", :page 382, :position {:bounding {:x1 81.10676831007004, :y1 169.20574951171875, :x2 681.4830119013786, :y2 216.0677490234375, :width 763, :height 991.9000000000001}, :rects ({:x1 81.10676831007004, :y1 169.20574951171875, :x2 260.8290278315544, :y2 194.20574951171875, :width 763, :height 991.9000000000001} {:x1 325.6770731806755, :y1 169.20574951171875, :x2 681.4830119013786, :y2 194.20574951171875, :width 763, :height 991.9000000000001} {:x1 266.01560467481613, :y1 172.21356201171875, :x2 681.4830119013786, :y2 191.3802490234375, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 191.0677490234375, :x2 119.36431378126144, :y2 216.0677490234375, :width 763, :height 991.9000000000001}), :page 382}, :content {:text "All direct subclasses of asealedclass must be located in the same file as the baseclass."}, :properties {:color "red"}} {:id #uuid "62d4fd5f-54d2-4086-8284-546d142e8da7", :page 381, :position {:bounding {:x1 80.91145581007004, :y1 335.5078125, :x2 683.2291666865349, :y2 382.3828125, :width 763, :height 991.9000000000001}, :rects ({:x1 80.91145581007004, :y1 335.5078125, :x2 356.6224848628044, :y2 360.5078125, :width 763, :height 991.9000000000001} {:x1 417.6301981806755, :y1 335.5078125, :x2 594.4259440302849, :y2 360.5078125, :width 763, :height 991.9000000000001} {:x1 679.2577921748161, :y1 335.5078125, :x2 683.2291666865349, :y2 360.5078125, :width 763, :height 991.9000000000001} {:x1 359.8697916865349, :y1 338.52862548828125, :x2 683.2291666865349, :y2 357.6953125, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 357.3828125, :x2 132.82674664258957, :y2 382.3828125, :width 763, :height 991.9000000000001} {:x1 232.3828074336052, :y1 357.3828125, :x2 265.41761273145676, :y2 382.3828125, :width 763, :height 991.9000000000001} {:x1 378.6067606806755, :y1 357.3828125, :x2 382.57810467481613, :y2 382.3828125, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 361.54949951171875, :x2 378.5709635615349, :y2 380.7161865234375, :width 763, :height 991.9000000000001}), :page 381}, :content {:text "We can improve the situation using thesealedkeyword. When definingTransport,replaceopen classwithsealed class:"}, :properties {:color "yellow"}} {:id #uuid "62d4fd9e-23f6-4280-9a94-fb2553115d36", :page 381, :position {:bounding {:x1 81.74479168653488, :y1 238.67184448242188, :x2 681.3374430537224, :y2 285.5338439941406, :width 763, :height 991.9000000000001}, :rects ({:x1 310.86988323926926, :y1 238.67184448242188, :x2 410.68699139356613, :y2 263.6718444824219, :width 763, :height 991.9000000000001} {:x1 495.6770731806755, :y1 238.67184448242188, :x2 681.3374430537224, :y2 263.6718444824219, :width 763, :height 991.9000000000001} {:x1 416.9270731806755, :y1 241.67965698242188, :x2 681.3374430537224, :y2 260.8463439941406, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 260.5338439941406, :x2 538.4982706904411, :y2 285.5338439941406, :width 763, :height 991.9000000000001} {:x1 582.1484171748161, :y1 260.5338439941406, :x2 586.4712931513786, :y2 285.5338439941406, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 264.7005310058594, :x2 582.1542765498161, :y2 282.2005310058594, :width 763, :height 991.9000000000001}), :page 381}, :content {:text "f you do this,travel()continues to compile andrun, giving you no clue that you should modify it to detectTram."}, :properties {:color "yellow"}} {:id #uuid "62d4fe83-3ad4-4dfe-8ae8-83e8430d0cac", :page 382, :position {:bounding {:x1 115.1867625117302, :y1 244.17965698242188, :x2 529.8317057490349, :y2 269.1796569824219, :width 763, :height 991.9000000000001}, :rects ({:x1 115.1867625117302, :y1 244.17965698242188, :x2 142.33452862501144, :y2 269.1796569824219, :width 763, :height 991.9000000000001} {:x1 187.13541668653488, :y1 244.17965698242188, :x2 201.44329327344894, :y2 269.1796569824219, :width 763, :height 991.9000000000001} {:x1 282.5130106806755, :y1 244.17965698242188, :x2 434.864695250988, :y2 269.1796569824219, :width 763, :height 991.9000000000001} {:x1 479.64841717481613, :y1 244.17965698242188, :x2 529.8317057490349, :y2 269.1796569824219, :width 763, :height 991.9000000000001} {:x1 146.6015574336052, :y1 247.18746948242188, :x2 475.3313700556755, :y2 266.3541564941406, :width 763, :height 991.9000000000001}), :page 382}, :content {:text " thewhenintravel()no longer requires anelsebranch"}, :properties {:color "yellow"}} {:id #uuid "62d4ff04-c2cd-4eeb-953b-d7788d433027", :page 382, :position {:bounding {:x1 81.74479168653488, :y1 266.0416564941406, :x2 681.3210245966911, :y2 312.9166564941406, :width 763, :height 991.9000000000001}, :rects ({:x1 151.3281199336052, :y1 266.0416564941406, :x2 479.6182810664177, :y2 291.0416564941406, :width 763, :height 991.9000000000001} {:x1 570.0129801630974, :y1 266.0416564941406, :x2 681.3210245966911, :y2 291.0416564941406, :width 763, :height 991.9000000000001} {:x1 484.7005106806755, :y1 269.0624694824219, :x2 681.3210245966911, :y2 288.2291564941406, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 287.9166564941406, :x2 275.7187907099724, :y2 312.9166564941406, :width 763, :height 991.9000000000001}), :page 382}, :content {:text ", Kotlin knows that no additional subclasses ofTransportexist other thanthe ones present in this file."}, :properties {:color "yellow"}} {:id #uuid "62d4ff3d-c818-4933-b610-f2b4879218c5", :page 382, :position {:bounding {:x1 81.74479168653488, :y1 287.9166564941406, :x2 681.2428385615349, :y2 334.7786560058594, :width 763, :height 991.9000000000001}, :rects ({:x1 275.70618695020676, :y1 287.9166564941406, :x2 307.6791178584099, :y2 312.9166564941406, :width 763, :height 991.9000000000001} {:x1 351.7057291865349, :y1 287.9166564941406, :x2 641.2271525263786, :y2 312.9166564941406, :width 763, :height 991.9000000000001} {:x1 311.5104166865349, :y1 290.9244689941406, :x2 681.2428385615349, :y2 310.0911560058594, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 309.7786560058594, :x2 135.5303904414177, :y2 334.7786560058594, :width 763, :height 991.9000000000001}), :page 382}, :content {:text " Thewhenexpression is now exhaustive without anelsebranch."}, :properties {:color "red"}} {:id #uuid "62d4ff76-10d6-4849-abdb-069d123b159d", :page 382, :position {:bounding {:x1 81.74479168653488, :y1 341.0155944824219, :x2 684.618830382824, :y2 387.8905944824219, :width 763, :height 991.9000000000001}, :rects ({:x1 142.0312449336052, :y1 341.0155944824219, :x2 684.618830382824, :y2 366.0155944824219, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 344.0364685058594, :x2 684.618830382824, :y2 363.2030944824219, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 362.8905944824219, :x2 684.4554240107536, :y2 387.8905944824219, :width 763, :height 991.9000000000001}), :page 382}, :content {:text "sealedhierarchies discover errors when adding new subclasses. When you intro-duce a new subclass, you must update all the code that uses the existing hierarchy."}, :properties {:color "yellow"}} {:id #uuid "62d5021b-923b-4f3c-a198-05c635b8b6d1", :page 382, :position {:bounding {:x1 81.74479168653488, :y1 481.5885009765625, :x2 681.3675333857536, :y2 528.4635009765625, :width 763, :height 991.9000000000001}, :rects ({:x1 121.32586163282394, :y1 481.5885009765625, :x2 153.11185711622238, :y2 506.5885009765625, :width 763, :height 991.9000000000001} {:x1 233.9583231806755, :y1 481.5885009765625, :x2 312.902292907238, :y2 506.5885009765625, :width 763, :height 991.9000000000001} {:x1 466.17185467481613, :y1 481.5885009765625, :x2 681.3675333857536, :y2 506.5885009765625, :width 763, :height 991.9000000000001} {:x1 157.3046824336052, :y1 484.609375, :x2 681.3675333857536, :y2 503.7760009765625, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 503.4635009765625, :x2 104.354441344738, :y2 528.4635009765625, :width 763, :height 991.9000000000001} {:x1 151.97916668653488, :y1 503.4635009765625, :x2 457.66370648145676, :y2 528.4635009765625, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 507.63018798828125, :x2 146.26885479688644, :y2 525.1301879882812, :width 763, :height 991.9000000000001}), :page 382}, :content {:text " Thetravel()function inSealedClasses.ktwon’t compile if we introducetheTramclass without making additional changes. "}, :properties {:color "red"}} {:id #uuid "62d50265-a001-4bd5-a485-5401d65e8287", :page 382, :position {:bounding {:x1 257.601755797863, :y1 578.4375, :x2 523.3046061396599, :y2 603.4375, :width 763, :height 991.9000000000001}, :rects ({:x1 257.601755797863, :y1 578.4375, :x2 523.3046061396599, :y2 603.4375, :width 763, :height 991.9000000000001}), :page 382}, :content {:text "t make excessive use of downcasting. "}, :properties {:color "yellow"}} {:id #uuid "62d5026e-c63e-42cf-b661-bde88d4a7330", :page 382, :position {:bounding {:x1 81.74479168653488, :y1 600.2994384765625, :x2 488.7320963740349, :y2 625.2994384765625, :width 763, :height 991.9000000000001}, :rects ({:x1 81.74479168653488, :y1 600.2994384765625, :x2 488.7320963740349, :y2 625.2994384765625, :width 763, :height 991.9000000000001}), :page 382}, :content {:text "and cleaner way to write that code using polymorphism."}, :properties {:color "yellow"}} {:id #uuid "62d502c0-a465-4a85-8921-23ca8c553aec", :page 382, :position {:bounding {:x1 81.74479168653488, :y1 654.3489170074463, :x2 313.07737225294113, :y2 691.015604019165, :width 763, :height 991.9000000000001}, :rects ({:x1 166.7708231806755, :y1 654.3489170074463, :x2 201.98423260450363, :y2 691.015604019165, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 658.4244785308838, :x2 313.07737225294113, :y2 685.9244785308838, :width 763, :height 991.9000000000001}), :page 382}, :content {:text "sealedvs.abstract"}, :properties {:color "yellow"}} {:id #uuid "62d502e4-4142-478e-af1d-7bf8fcaff73d", :page 382, :position {:bounding {:x1 81.74479168653488, :y1 713.3853912353516, :x2 681.3824259638786, :y2 760.2473907470703, :width 763, :height 991.9000000000001}, :rects ({:x1 230.49158734083176, :y1 713.3853912353516, :x2 266.25144451856613, :y2 738.3853912353516, :width 763, :height 991.9000000000001} {:x1 353.6197916865349, :y1 713.3853912353516, :x2 380.358591735363, :y2 738.3853912353516, :width 763, :height 991.9000000000001} {:x1 449.68747967481613, :y1 713.3853912353516, :x2 681.3824259638786, :y2 738.3853912353516, :width 763, :height 991.9000000000001} {:x1 273.6588541865349, :y1 716.3932037353516, :x2 681.3824259638786, :y2 735.5598907470703, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 735.2473907470703, :x2 361.32825726270676, :y2 760.2473907470703, :width 763, :height 991.9000000000001}), :page 382}, :content {:text "bothabstractandsealedclasses allow identical types offunctions, properties, and constructors:"}, :properties {:color "yellow"}} {:id #uuid "62d502f0-c790-4ac3-9235-a296f825160e", :page 383, :position {:bounding {:x1 81.10676831007004, :y1 856.6926879882812, :x2 681.4653117060661, :y2 903.5676574707031, :width 763, :height 991.9000000000001}, :rects ({:x1 81.10676831007004, :y1 856.6926879882812, :x2 93.3984324336052, :y2 881.6926574707031, :width 763, :height 991.9000000000001} {:x1 155.2473856806755, :y1 856.6926879882812, :x2 291.45752972364426, :y2 881.6926574707031, :width 763, :height 991.9000000000001} {:x1 371.01560467481613, :y1 856.6926879882812, :x2 681.4653117060661, :y2 881.6926574707031, :width 763, :height 991.9000000000001} {:x1 97.29166668653488, :y1 859.7135314941406, :x2 681.4653117060661, :y2 878.8801574707031, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 878.5676574707031, :x2 425.42481487989426, :y2 903.5676574707031, :width 763, :height 991.9000000000001}), :page 383}, :content {:text "Asealedclass is basically anabstractclass with the extra constraint that all directsubclasses must be defined within the same file."}, :properties {:color "yellow"}} {:id #uuid "62d5032f-748e-40c3-8675-301baafba020", :page 383, :position {:bounding {:x1 81.74479168653488, :y1 468.00779724121094, :x2 386.3525797724724, :y2 485.50779724121094, :width 763, :height 991.9000000000001}, :rects ({:x1 81.74479168653488, :y1 468.00779724121094, :x2 386.3525797724724, :y2 485.50779724121094, :width 763, :height 991.9000000000001}), :page 383}, :content {:text "sealedclassSealed(valav: String) {"}, :properties {:color "yellow"}} {:id #uuid "62d50335-26d2-477d-801c-22dc5cecc894", :page 384, :position {:bounding {:x1 81.74479168653488, :y1 207.31768798828125, :x2 369.87220257520676, :y2 224.81768798828125, :width 763, :height 991.9000000000001}, :rects ({:x1 81.74479168653488, :y1 207.31768798828125, :x2 369.87220257520676, :y2 224.81768798828125, :width 763, :height 991.9000000000001}), :page 384}, :content {:text "classThirdLevel: SealedSubclass()"}, :properties {:color "yellow"}} {:id #uuid "62d5036f-e215-4e53-becb-44e45713d2a9", :page 384, :position {:bounding {:x1 81.10676831007004, :y1 296.22393798828125, :x2 681.6030070185661, :y2 364.9609375, :width 763, :height 991.9000000000001}, :rects ({:x1 81.10676831007004, :y1 296.22393798828125, :x2 164.15963238477707, :y2 321.22393798828125, :width 763, :height 991.9000000000001} {:x1 322.0442606806755, :y1 296.22393798828125, :x2 681.4850870966911, :y2 321.22393798828125, :width 763, :height 991.9000000000001} {:x1 170.61197918653488, :y1 299.24481201171875, :x2 681.4850870966911, :y2 318.41143798828125, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 318.0859375, :x2 681.6030070185661, :y2 343.0859375, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 322.25262451171875, :x2 681.6030070185661, :y2 339.75262451171875, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 339.9609375, :x2 189.6705271601677, :y2 364.9609375, :width 763, :height 991.9000000000001}), :page 384}, :content {:text "Although asealed interfaceseems like it would be a useful construct, Kotlindoesn’t provide it because Java classes cannot be prevented from implementing thesame interface."}, :properties {:color "yellow"}} {:id #uuid "62d503d1-1727-496b-af32-ff3175e23b31", :page 384, :position {:bounding {:x1 81.74479168653488, :y1 393.9973945617676, :x2 396.327830016613, :y2 430.6640510559082, :width 763, :height 991.9000000000001}, :rects ({:x1 81.74479168653488, :y1 393.9973945617676, :x2 396.327830016613, :y2 430.6640510559082, :width 763, :height 991.9000000000001}), :page 384}, :content {:text "Enumerating Subclasses"}, :properties {:color "yellow"}} {:id #uuid "62d503e4-7889-48a7-9434-e826a212bcde", :page 384, :position {:bounding {:x1 80.91145581007004, :y1 453.0338325500488, :x2 576.1278483271599, :y2 478.0338325500488, :width 763, :height 991.9000000000001}, :rects ({:x1 80.91145581007004, :y1 453.0338325500488, :x2 191.07723492383957, :y2 478.0338325500488, :width 763, :height 991.9000000000001} {:x1 249.8567606806755, :y1 453.0338325500488, :x2 576.1278483271599, :y2 478.0338325500488, :width 763, :height 991.9000000000001} {:x1 195.5208231806755, :y1 456.0546760559082, :x2 249.85366314649582, :y2 475.2213325500488, :width 763, :height 991.9000000000001}), :page 384}, :content {:text "When a class issealed, you can easily iterate through its subclasses:"}, :properties {:color "yellow"}} {:id #uuid "62d5040a-2d58-4a4c-b597-5321546eb073", :page 384, :position {:bounding {:x1 45, :y1 567, :x2 409, :y2 787, :width 763, :height 991.9000000000001}, :rects (), :page 384}, :content {:text "[:span]", :image 1658127368966}, :properties {:color "blue"}} {:id #uuid "62d5042b-1c31-4bd1-bdda-1f1f1fd08ea4", :page 384, :position {:bounding {:x1 227.0112254023552, :y1 833.7760009765625, :x2 473.39170330762863, :y2 858.7760009765625, :width 763, :height 991.9000000000001}, :rects ({:x1 227.0112254023552, :y1 833.7760009765625, :x2 227.02402752637863, :y2 858.7760009765625, :width 763, :height 991.9000000000001} {:x1 300.2473856806755, :y1 833.7760009765625, :x2 473.39170330762863, :y2 858.7760009765625, :width 763, :height 991.9000000000001} {:x1 231.8880106806755, :y1 836.7968139648438, :x2 295.2723795771599, :y2 855.9635009765625, :width 763, :height 991.9000000000001}), :page 384}, :content {:text "::classproduces a class object, "}, :properties {:color "yellow"}} {:id #uuid "62d50650-3bf1-4b41-a098-d34c255476f0", :page 385, :position {:bounding {:x1 81.74479168653488, :y1 110.5859375, :x2 511.55954998731613, :y2 135.5859375, :width 763, :height 991.9000000000001}, :rects ({:x1 81.74479168653488, :y1 110.5859375, :x2 358.7596842646599, :y2 135.5859375, :width 763, :height 991.9000000000001} {:x1 507.65622967481613, :y1 110.5859375, :x2 511.55954998731613, :y2 135.5859375, :width 763, :height 991.9000000000001} {:x1 362.7473856806755, :y1 113.6068115234375, :x2 507.6310221552849, :y2 132.7734375, :width 763, :height 991.9000000000001}), :page 385}, :content {:text "One of the properties of class objects issealedSubclasses,"}, :properties {:color "yellow"}} {:id #uuid "62d5076a-3739-4b9b-910d-53a9074b977e", :page 385, :position {:bounding {:x1 81.74479168653488, :y1 132.4609375, :x2 681.2809855341911, :y2 179.3359375, :width 763, :height 991.9000000000001}, :rects ({:x1 461.3032938838005, :y1 132.4609375, :x2 465.14402264356613, :y2 157.4609375, :width 763, :height 991.9000000000001} {:x1 616.8879801630974, :y1 132.4609375, :x2 681.2809855341911, :y2 157.4609375, :width 763, :height 991.9000000000001} {:x1 468.4635416865349, :y1 135.4818115234375, :x2 681.2809855341911, :y2 154.6484375, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 154.3359375, :x2 363.57703655958176, :y2 179.3359375, :width 763, :height 991.9000000000001}), :page 385}, :content {:text ".sealedSubclassesproducesall the class objects of those subclasses. "}, :properties {:color "yellow"}} {:id #uuid "62d5084a-2b3a-403c-b999-654f0fee22a1", :page 385, :position {:bounding {:x1 81.74479168653488, :y1 207.4349365234375, :x2 681.5223795771599, :y2 254.3099365234375, :width 763, :height 991.9000000000001}, :rects ({:x1 479.2071024775505, :y1 207.4349365234375, :x2 681.5223795771599, :y2 232.4349365234375, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 229.3099365234375, :x2 213.57401531934738, :y2 254.3099365234375, :width 763, :height 991.9000000000001} {:x1 313.1119791865349, :y1 229.3099365234375, :x2 377.78501385450363, :y2 254.3099365234375, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 233.4765625, :x2 308.5716044306755, :y2 250.9765625, :width 763, :height 991.9000000000001}), :page 385}, :content {:text "We produce the class namealone by using thesimpleNameproperty."}, :properties {:color "yellow"}} {:id #uuid "62d50881-7ef6-4a97-b4c0-7b7a5f178563", :page 385, :position {:bounding {:x1 81.74479168653488, :y1 260.53387451171875, :x2 685.7541300654411, :y2 307.40887451171875, :width 763, :height 991.9000000000001}, :rects ({:x1 233.5156199336052, :y1 260.53387451171875, :x2 615.6977946162224, :y2 285.53387451171875, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 263.5546875, :x2 685.7541300654411, :y2 282.72137451171875, :width 763, :height 991.9000000000001} {:x1 214.3359324336052, :y1 282.40887451171875, :x2 357.6572977900505, :y2 307.40887451171875, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 285.41668701171875, :x2 208.51352947950363, :y2 304.5833740234375, :width 763, :height 991.9000000000001}), :page 385}, :content {:text "sealedSubclassesusesreflection, which requires that the dependencykotlin-reflection.jarbe in the classpath."}, :properties {:color "yellow"}} {:id #uuid "62d508ce-c98e-494f-b8c1-c3204e4cc3d8", :page 385, :position {:bounding {:x1 81.74479168653488, :y1 335.5078125, :x2 684.2817179560661, :y2 360.5078125, :width 763, :height 991.9000000000001}, :rects ({:x1 231.86197918653488, :y1 335.5078125, :x2 684.2817179560661, :y2 360.5078125, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 338.5286865234375, :x2 226.6284129023552, :y2 357.6953125, :width 763, :height 991.9000000000001}), :page 385}, :content {:text "sealedSubclassescan be an important tool when building polymorphic systems."}, :properties {:color "yellow"}} {:id #uuid "62d508d4-09d1-4382-8785-b33e33d3f404", :page 385, :position {:bounding {:x1 81.74479168653488, :y1 357.3828125, :x2 681.6175944209099, :y2 404.24481201171875, :width 763, :height 991.9000000000001}, :rects ({:x1 221.35428875684738, :y1 357.3828125, :x2 681.6175944209099, :y2 382.3828125, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 379.24481201171875, :x2 160.07206219434738, :y2 404.24481201171875, :width 763, :height 991.9000000000001}), :page 385}, :content {:text "new classes will automatically be included in all appropriateoperations"}, :properties {:color "yellow"}} {:id #uuid "62d508de-1252-4359-b029-46ca11e7bf17", :page 385, :position {:bounding {:x1 81.74479168653488, :y1 379.24481201171875, :x2 681.6329142451286, :y2 426.11981201171875, :width 763, :height 991.9000000000001}, :rects ({:x1 577.6438395380974, :y1 379.24481201171875, :x2 681.6329142451286, :y2 404.24481201171875, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 401.11981201171875, :x2 343.78684490919113, :y2 426.11981201171875, :width 763, :height 991.9000000000001}), :page 385}, :content {:text " it may have aperformance impact on your system."}, :properties {:color "green"}} {:id #uuid "62d508f2-e7fe-4316-a9c7-3dacff0330e5", :page 385, :position {:bounding {:x1 81.74479168653488, :y1 401.11981201171875, :x2 681.5926920771599, :y2 491.71875, :width 763, :height 991.9000000000001}, :rects ({:x1 348.20896404981613, :y1 401.11981201171875, :x2 681.5926920771599, :y2 426.11981201171875, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 422.9818115234375, :x2 280.17310589551926, :y2 447.9818115234375, :width 763, :height 991.9000000000001} {:x1 432.85154217481613, :y1 422.9818115234375, :x2 681.3912760615349, :y2 447.9818115234375, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 427.1484375, :x2 681.3912760615349, :y2 444.6484375, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 444.8568115234375, :x2 681.2949625849724, :y2 469.8568115234375, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 449.0234375, :x2 681.2949625849724, :y2 466.5234375, :width 763, :height 991.9000000000001} {:x1 81.74479168653488, :y1 466.71875, :x2 242.8925730586052, :y2 491.71875, :width 763, :height 991.9000000000001}), :page 385}, :content {:text "If you are having speed issues, be sure to use aprofiler to discover whethersealedSubclassesmight be the problem (as you learnto use a profiler, you’ll discover that performance problems are usuallynotwhereyou guess them to be)."}, :properties {:color "green"}} {:id #uuid "62d50940-8a9d-41a0-a0aa-c4b1078ebbb2", :page 386, :position {:bounding {:x1 81.74479168653488, :y1 166.97918701171875, :x2 351.17786663770676, :y2 219.47918701171875, :width 763, :height 991.9000000000001}, :rects ({:x1 81.74479168653488, :y1 166.97918701171875, :x2 351.17786663770676, :y2 219.47918701171875, :width 763, :height 991.9000000000001}), :page 386}, :content {:text "Type Checking"}, :properties {:color "yellow"}} {:id #uuid "62d5096a-a368-4884-8564-b1d1646662b9", :page 391, :position {:bounding {:x1 81.74479168653488, :y1 205.6640625, :x2 558.0024821162224, :y2 242.33071899414062, :width 763, :height 991.9000000000001}, :rects ({:x1 81.74479168653488, :y1 205.6640625, :x2 558.0024821162224, :y2 242.33071899414062, :width 763, :height 991.9000000000001}), :page 391}, :content {:text "Type Checking in Auxiliary Functions"}, :properties {:color "yellow"}} {:id #uuid "62d509ad-6c53-4571-9370-a1b66041a329", :page 457, :position {:bounding {:x1 81.74479168653488, :y1 166.97915649414062, :x2 225.94756573438644, :y2 219.47915649414062, :width 763, :height 991.9000000000001}, :rects ({:x1 81.74479168653488, :y1 166.97915649414062, :x2 225.94756573438644, :y2 219.47915649414062, :width 763, :height 991.9000000000001}), :page 457}, :content {:text "Logging"}, :properties {:color "yellow"}} {:id #uuid "62d509d7-a415-4574-8f49-7a343a326bfa", :page 555, :position {:bounding {:x1 81.74479168653488, :y1 166.97915649414062, :x2 412.32932537794113, :y2 219.47915649414062, :width 763, :height 991.9000000000001}, :rects ({:x1 81.74479168653488, :y1 166.97915649414062, :x2 412.32932537794113, :y2 219.47915649414062, :width 763, :height 991.9000000000001}), :page 555}, :content {:text "Late Initialization"}, :properties {:color "yellow"}} {:id #uuid "62d50b05-9ae1-428c-b872-d66f2a4f4272", :page 564, :position {:bounding {:x1 81.74479168653488, :y1 543.4375, :x2 386.4288737177849, :y2 580.1041564941406, :width 763, :height 991.9000000000001}, :rects ({:x1 81.74479168653488, :y1 543.4375, :x2 386.4288737177849, :y2 580.1041564941406, :width 763, :height 991.9000000000001}), :page 564}, :content {:text "Calling Java from Kotlin"}, :properties {:color "yellow"}} {:id #uuid "62d50b0b-20c1-4b14-b2c0-a783eaae694a", :page 566, :position {:bounding {:x1 81.74479168653488, :y1 623.0208358764648, :x2 386.4288737177849, :y2 659.6874618530273, :width 763, :height 991.9000000000001}, :rects ({:x1 81.74479168653488, :y1 623.0208358764648, :x2 386.4288737177849, :y2 659.6874618530273, :width 763, :height 991.9000000000001}), :page 566}, :content {:text "Calling Kotlin from Java"}, :properties {:color "yellow"}} {:id #uuid "62d50b12-0aec-4fc0-9b55-eccbae6f10bb", :page 570, :position {:bounding {:x1 81.74479168653488, :y1 523.0729064941406, :x2 380.00867718458176, :y2 559.7395629882812, :width 763, :height 991.9000000000001}, :rects ({:x1 81.74479168653488, :y1 523.0729064941406, :x2 380.00867718458176, :y2 559.7395629882812, :width 763, :height 991.9000000000001}), :page 570}, :content {:text "Adapting Java to Kotlin"}, :properties {:color "yellow"}} {:id #uuid "62d50b24-0aae-4984-af87-be2c7004d0a2", :page 572, :position {:bounding {:x1 81.74479168653488, :y1 509.25779724121094, :x2 512.0634562373161, :y2 545.9244842529297, :width 763, :height 991.9000000000001}, :rects ({:x1 81.74479168653488, :y1 509.25779724121094, :x2 512.0634562373161, :y2 545.9244842529297, :width 763, :height 991.9000000000001}), :page 572}, :content {:text "Java Checked Exceptions & Kotlin"}, :properties {:color "yellow"}} {:id #uuid "62d50b2b-8398-4c10-ba0a-10a0804cb29d", :page 575, :position {:bounding {:x1 81.74479168653488, :y1 536.2629852294922, :x2 361.0991618037224, :y2 572.9296722412109, :width 763, :height 991.9000000000001}, :rects ({:x1 81.74479168653488, :y1 536.2629852294922, :x2 361.0991618037224, :y2 572.9296722412109, :width 763, :height 991.9000000000001}), :page 575}, :content {:text "Nullable Types & Java"}, :properties {:color "yellow"}} {:id #uuid "62d50b34-6106-4b34-9a9b-0018d6918af6", :page 578, :position {:bounding {:x1 81.74479168653488, :y1 745.1041259765625, :x2 385.80405682325363, :y2 781.7708129882812, :width 763, :height 991.9000000000001}, :rects ({:x1 81.74479168653488, :y1 745.1041259765625, :x2 385.80405682325363, :y2 781.7708129882812, :width 763, :height 991.9000000000001}), :page 578}, :content {:text "Nullability Annotations"}, :properties {:color "yellow"}} {:id #uuid "62d50b3f-ac92-4676-9b26-1890d4179458", :page 580, :position {:bounding {:x1 81.74479168653488, :y1 737.5260314941406, :x2 312.65354412794113, :y2 774.1926574707031, :width 763, :height 991.9000000000001}, :rects ({:x1 81.74479168653488, :y1 737.5260314941406, :x2 312.65354412794113, :y2 774.1926574707031, :width 763, :height 991.9000000000001}), :page 580}, :content {:text "Collections & Java"}, :properties {:color "yellow"}} {:id #uuid "62d50b47-3214-46a7-986b-35b55438f4be", :page 584, :position {:bounding {:x1 81.74479168653488, :y1 577.2265396118164, :x2 344.15882366895676, :y2 613.8932266235352, :width 763, :height 991.9000000000001}, :rects ({:x1 81.74479168653488, :y1 577.2265396118164, :x2 344.15882366895676, :y2 613.8932266235352, :width 763, :height 991.9000000000001}), :page 584}, :content {:text "Java Primitive Types"}, :properties {:color "yellow"}} {:id #uuid "62d78bdb-098e-4d29-b16b-b355711eff8c", :page 108, :position {:bounding {:x1 61.06770706176758, :y1 124.51822280883789, :x2 242.60747146606445, :y2 163.6848907470703, :width 570, :height 741}, :rects ({:x1 61.06770706176758, :y1 124.51822280883789, :x2 242.60747146606445, :y2 163.6848907470703, :width 570, :height 741}), :page 108}, :content {:text "Constructors"}, :properties {:color "yellow"}} {:id #uuid "62d7f7cb-9b52-4352-8df3-c039aaf03a02", :page 386, :position {:bounding {:x1 89.2578125, :y1 386.640625, :x2 751.9974365234375, :y2 462.2916564941406, :width 839.9999999999999, :height 1092}, :rects ({:x1 552.1612548828125, :y1 386.640625, :x2 750.46728515625, :y2 414.140625, :width 839.9999999999999, :height 1092} {:x1 90, :y1 410.71612548828125, :x2 174.66995239257812, :y2 438.21612548828125, :width 839.9999999999999, :height 1092} {:x1 241.92706298828125, :y1 410.71612548828125, :x2 678.7967529296875, :y2 438.21612548828125, :width 839.9999999999999, :height 1092} {:x1 90, :y1 414.8828125, :x2 751.9974365234375, :y2 435.71612548828125, :width 839.9999999999999, :height 1092} {:x1 89.2578125, :y1 434.7916564941406, :x2 399.03643798828125, :y2 462.2916564941406, :width 839.9999999999999, :height 1092}), :page 386}, :content {:text "It doesn’t make sense toburden theInsectinterface with the few insects that are unable to fly, so inbasic()we use type checking to pick those out:"}, :properties {:color "yellow"}} {:id #uuid "62d7f7e9-6768-4415-aa3d-60b5d6dc96e9", :page 386, :position {:bounding {:x1 108.125, :y1 725.2213134765625, :x2 435.3515625, :y2 785.3125, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.125, :y1 725.2213134765625, :x2 289.4076843261719, :y2 744.3880004882812, :width 839.9999999999999, :height 1092} {:x1 126.25, :y1 745.6770629882812, :x2 435.3515625, :y2 764.84375, :width 839.9999999999999, :height 1092} {:x1 108.125, :y1 766.1458129882812, :x2 352.8708801269531, :y2 785.3125, :width 839.9999999999999, :height 1092}), :page 386}, :content {:text "overridefunfly() =throwException(\"Flea cannot fly\")funcrawl() =\"Flea: crawl\""}, :properties {:color "yellow"}} {:id #uuid "62d7f7f5-b068-4798-9736-8cff2c050f71", :page 386, :position {:bounding {:x1 90, :y1 827.5390625, :x2 271.28680419921875, :y2 949.0364379882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 827.5390625, :x2 271.28680419921875, :y2 846.7056884765625, :width 839.9999999999999, :height 1092} {:x1 108.125, :y1 848.0078125, :x2 235.9375, :y2 867.1744384765625, :width 839.9999999999999, :height 1092} {:x1 108.125, :y1 868.4765625, :x2 262.22662353515625, :y2 887.6431884765625, :width 839.9999999999999, :height 1092} {:x1 126.25, :y1 888.9322509765625, :x2 189.71932983398438, :y2 908.0989379882812, :width 839.9999999999999, :height 1092} {:x1 108.125, :y1 909.4010009765625, :x2 144.3982696533203, :y2 928.5676879882812, :width 839.9999999999999, :height 1092} {:x1 126.25, :y1 929.8697509765625, :x2 171.588623046875, :y2 949.0364379882812, :width 839.9999999999999, :height 1092}), :page 386}, :content {:text "funInsect.basic() =walk() +\" \"+if(thisisFlea)crawl()elsefly()"}, :properties {:color "yellow"}} {:id #uuid "62d7f821-945a-48f4-aa23-0dd88bf2d29f", :page 387, :position {:bounding {:x1 90, :y1 943.5677032470703, :x2 750.4949493408203, :y2 995.1432037353516, :width 839.9999999999999, :height 1092}, :rects ({:x1 190.19044494628906, :y1 943.5677032470703, :x2 750.4949493408203, :y2 971.0677032470703, :width 839.9999999999999, :height 1092} {:x1 90, :y1 967.6432037353516, :x2 536.6198120117188, :y2 995.1432037353516, :width 839.9999999999999, :height 1092}), :page 387}, :content {:text " Again, it doesn’t make sense to put those special-case behaviors inthe base class to support such a small fraction of types."}, :properties {:color "yellow"}} {:id #uuid "62d7f830-1a39-4413-9e8f-d088d0fc6c9f", :page 387, :position {:bounding {:x1 108.125, :y1 413.08589935302734, :x2 389.1438293457031, :y2 514.1145858764648, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.125, :y1 413.08589935302734, :x2 216.89183044433594, :y2 432.2525863647461, :width 839.9999999999999, :height 1092} {:x1 126.25, :y1 433.5416488647461, :x2 371.0130920410156, :y2 452.70833587646484, :width 839.9999999999999, :height 1092} {:x1 126.25, :y1 454.0103988647461, :x2 389.1438293457031, :y2 473.17708587646484, :width 839.9999999999999, :height 1092} {:x1 126.25, :y1 474.4791488647461, :x2 325.6732482910156, :y2 493.64583587646484, :width 839.9999999999999, :height 1092} {:x1 108.125, :y1 494.9478988647461, :x2 118.09895324707031, :y2 514.1145858764648, :width 839.9999999999999, :height 1092}), :page 387}, :content {:text "when(this) {isSwimmingInsect -> swim()isWaterWalker -> walkWater()else->\"$name: drown\"}"}, :properties {:color "yellow"}} {:id #uuid "62d7f83d-5156-4b2f-9ff0-9521be7111b8", :page 388, :position {:bounding {:x1 90, :y1 180.63800048828125, :x2 750.5321044921875, :y2 232.2135009765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 180.63800048828125, :x2 750.5321044921875, :y2 208.13800048828125, :width 839.9999999999999, :height 1092} {:x1 90, :y1 204.7135009765625, :x2 165.9693145751953, :y2 232.2135009765625, :width 839.9999999999999, :height 1092}), :page 388}, :content {:text "Selecting a few isolated types for special treatment is the typical use case for typechecking."}, :properties {:color "yellow"}} {:id #uuid "62d8015e-aaab-44b5-b5a1-b30eec4d2b8a", :page 388, :position {:bounding {:x1 85.06509908288717, :y1 855.1822662353516, :x2 342.09483846277, :y2 931.5494537353516, :width 794, :height 1032.2}, :rects ({:x1 85.06509908288717, :y1 855.1822662353516, :x2 342.09483846277, :y2 873.5155944824219, :width 794, :height 1032.2} {:x1 102.20052083581686, :y1 874.5312194824219, :x2 299.29887899011374, :y2 892.8645629882812, :width 794, :height 1032.2} {:x1 102.20052083581686, :y1 893.8801879882812, :x2 187.89038594812155, :y2 912.2135162353516, :width 794, :height 1032.2} {:x1 85.06509908288717, :y1 913.2161254882812, :x2 94.49218495935202, :y2 931.5494537353516, :width 794, :height 1032.2}), :page 388}, :content {:text "funturn(s: Shape) =when(s) {isSquare -> s.rotate()else->\"\"}"}, :properties {:color "yellow"}} {:id #uuid "62d80902-745a-40cc-957c-94a136fdc852", :page 389, :position {:bounding {:x1 102.20052083581686, :y1 721.5624694824219, :x2 384.97505696862936, :y2 739.8958129882812, :width 794, :height 1032.2}, :rects ({:x1 102.20052083581686, :y1 721.5624694824219, :x2 384.97505696862936, :y2 739.8958129882812, :width 794, :height 1032.2}), :page 389}, :content {:text "funrotate() =\"Triangle: Rotate\""}, :properties {:color "yellow"}} {:id #uuid "62d80924-8106-4bce-bb8b-08310f46dff5", :page 389, :position {:bounding {:x1 85.06509908288717, :y1 540.2213439941406, :x2 709.3274281844497, :y2 589.6484375, :width 794, :height 1032.2}, :rects ({:x1 85.06509908288717, :y1 540.2213439941406, :x2 709.3274281844497, :y2 566.8880157470703, :width 794, :height 1032.2} {:x1 85.06509908288717, :y1 562.9817657470703, :x2 135.2863210067153, :y2 589.6484375, :width 794, :height 1032.2}), :page 389}, :content {:text "If, however, you must evolve your system by adding more types, it begins to getmessy:"}, :properties {:color "yellow"}} {:id #uuid "62d809c4-c04a-4cf9-95e5-7f7fe29904e9", :page 390, :position {:bounding {:x1 102.20052083581686, :y1 138.89321899414062, :x2 316.44966634362936, :y2 157.2265625, :width 794, :height 1032.2}, :rects ({:x1 102.20052083581686, :y1 138.89321899414062, :x2 316.44966634362936, :y2 157.2265625, :width 794, :height 1032.2}), :page 390}, :content {:text "shapes.map { it.draw() } "}, :properties {:color "yellow"}} {:id #uuid "62d80c7d-494c-4012-a865-f4117fccbe3f", :page 390, :position {:bounding {:x1 84.37499745935202, :y1 467.69529724121094, :x2 709.3846181258559, :y2 608.1510162353516, :width 794, :height 1032.2}, :rects ({:x1 85.06509908288717, :y1 467.69529724121094, :x2 557.5899403914809, :y2 494.36195373535156, :width 794, :height 1032.2} {:x1 618.9062093123794, :y1 467.69529724121094, :x2 656.6982014998794, :y2 494.36195373535156, :width 794, :height 1032.2} {:x1 562.3567708358169, :y1 470.72914123535156, :x2 708.9255574569106, :y2 490.72914123535156, :width 794, :height 1032.2} {:x1 85.06509908288717, :y1 490.45570373535156, :x2 709.3618520125747, :y2 517.1223907470703, :width 794, :height 1032.2} {:x1 85.06509908288717, :y1 494.6223907470703, :x2 709.3618520125747, :y2 512.9557037353516, :width 794, :height 1032.2} {:x1 84.37499745935202, :y1 513.2031097412109, :x2 162.34773763269186, :y2 539.8697662353516, :width 794, :height 1032.2} {:x1 219.79166158288717, :y1 513.2031097412109, :x2 522.5651601180434, :y2 539.8697662353516, :width 794, :height 1032.2} {:x1 576.2369588240981, :y1 513.2031097412109, :x2 709.0327962264419, :y2 539.8697662353516, :width 794, :height 1032.2} {:x1 84.37499745935202, :y1 517.3697662353516, :x2 709.0327962264419, :y2 537.3697662353516, :width 794, :height 1032.2} {:x1 85.06509908288717, :y1 535.9635162353516, :x2 320.7257283553481, :y2 562.6302032470703, :width 794, :height 1032.2} {:x1 368.99739583581686, :y1 535.9635162353516, :x2 506.2578328475356, :y2 562.6302032470703, :width 794, :height 1032.2} {:x1 563.9973958358169, :y1 535.9635162353516, :x2 709.0201009139419, :y2 562.6302032470703, :width 794, :height 1032.2} {:x1 85.06509908288717, :y1 540.1302032470703, :x2 709.0201009139419, :y2 560.1302032470703, :width 794, :height 1032.2} {:x1 85.06509908288717, :y1 558.7239532470703, :x2 709.3846181258559, :y2 585.3906097412109, :width 794, :height 1032.2} {:x1 85.06509908288717, :y1 562.8906097412109, :x2 709.3846181258559, :y2 581.2239532470703, :width 794, :height 1032.2} {:x1 85.06509908288717, :y1 581.4843597412109, :x2 99.93443044275045, :y2 608.1510162353516, :width 794, :height 1032.2}), :page 390}, :content {:text "Suppose your system begins to accumulate more functions liketurn(). TheShapelogic is now distributed across all these functions, rather than being centralizedwithin theShapehierarchy. If you add more new types ofShape, you must searchfor every function containing awhenthat switches on aShapetype, and modify itto include the new case. If you miss any of these functions, the compiler won’t catchit."}, :properties {:color "purple"}} {:id #uuid "62d81007-dd11-46b7-bd9c-61a1f4a7c987", :page 391, :position {:bounding {:x1 84.19270833581686, :y1 115.26040649414062, :x2 709.3940633162856, :y2 187.43490600585938, :width 794, :height 1032.2}, :rects ({:x1 84.19270833581686, :y1 115.26040649414062, :x2 709.3940633162856, :y2 141.92709350585938, :width 794, :height 1032.2} {:x1 146.58853658288717, :y1 138.0078125, :x2 709.3758900985122, :y2 164.67446899414062, :width 794, :height 1032.2} {:x1 85.06509908288717, :y1 141.0546875, :x2 709.3758900985122, :y2 161.0546875, :width 794, :height 1032.2} {:x1 85.06509908288717, :y1 160.76821899414062, :x2 274.10088094323874, :y2 187.43490600585938, :width 794, :height 1032.2}), :page 391}, :content {:text "We shall see that Kotlin significantly mitigates this problem through the use ofsealedclasses. The solution isn’t perfect, but type checking becomes a much morereasonable design choice."}, :properties {:color "yellow"}} {:id #uuid "62d8f42a-d7fe-4cbb-9847-3623b516734c", :page 392, :position {:bounding {:x1 189.4375, :y1 312.21875, :x2 279.1962585449219, :y2 333.21875, :width 839.9999999999999, :height 1092}, :rects ({:x1 189.4375, :y1 312.21875, :x2 279.1962585449219, :y2 333.21875, :width 839.9999999999999, :height 1092}), :page 392}, :content {:text "recycle()"}, :properties {:color "yellow"}} {:id #uuid "62d8f435-ab8b-40dc-8840-5aa8edb16ac4", :page 391, :position {:bounding {:x1 90, :y1 807.984375, :x2 389.1256103515625, :y2 827.984375, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 807.984375, :x2 389.1256103515625, :y2 827.984375, :width 839.9999999999999, :height 1092}), :page 391}, :content {:text "funBeverageContainer.recycle() ="}, :properties {:color "yellow"}} {:id #uuid "62d8f653-e094-4d94-8be1-c2c8d7c6a509", :page 392, :position {:bounding {:x1 217.37535095214844, :y1 594.109375, :x2 752.2383422851562, :y2 622.109375, :width 839.9999999999999, :height 1092}, :rects ({:x1 217.37535095214844, :y1 594.109375, :x2 383.01190185546875, :y2 622.109375, :width 839.9999999999999, :height 1092} {:x1 451.953125, :y1 594.109375, :x2 602.0496215820312, :y2 622.109375, :width 839.9999999999999, :height 1092} {:x1 661.15625, :y1 594.109375, :x2 752.2383422851562, :y2 622.109375, :width 839.9999999999999, :height 1092} {:x1 387.484375, :y1 597.6875, :x2 752.2383422851562, :y2 618.6875, :width 839.9999999999999, :height 1092}), :page 392}, :content {:text " Interfaces cannot besealedso we must rewriteShapeinto a class:"}, :properties {:color "yellow"}} {:id #uuid "62d8f65e-2794-44ad-941f-f73473f2051f", :page 392, :position {:bounding {:x1 90, :y1 741.78125, :x2 343.8074645996094, :y2 802.703125, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 741.78125, :x2 272.1875, :y2 761.78125, :width 839.9999999999999, :height 1092} {:x1 108.125, :y1 762.25, :x2 343.8074645996094, :y2 782.25, :width 839.9999999999999, :height 1092} {:x1 90, :y1 782.703125, :x2 99.96875, :y2 802.703125, :width 839.9999999999999, :height 1092}), :page 392}, :content {:text "sealedclassShape{fundraw() =\"$name: Draw\"}"}, :properties {:color "yellow"}} {:id #uuid "62d8f71b-acc8-449c-a7a6-191227f62bb3", :page 393, :position {:bounding {:x1 90, :y1 637.578125, :x2 380.953125, :y2 718.96875, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 637.578125, :x2 380.953125, :y2 657.578125, :width 839.9999999999999, :height 1092} {:x1 108.125, :y1 658.046875, :x2 352.8699035644531, :y2 678.046875, :width 839.9999999999999, :height 1092} {:x1 108.125, :y1 678.5, :x2 352.8699035644531, :y2 698.5, :width 839.9999999999999, :height 1092} {:x1 90, :y1 698.96875, :x2 99.96875, :y2 718.96875, :width 839.9999999999999, :height 1092}), :page 393}, :content {:text "sealedclassBeverageContainer{abstractfunopen(): Stringabstractfunpour(): String}"}, :properties {:color "yellow"}} {:id #uuid "62d8f71f-add1-45ae-b856-447dedaccefe", :page 393, :position {:bounding {:x1 90, :y1 739.90625, :x2 452.5860290527344, :y2 821.296875, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 739.90625, :x2 452.5860290527344, :y2 759.90625, :width 839.9999999999999, :height 1092} {:x1 108.125, :y1 760.359375, :x2 389.1099548339844, :y2 780.359375, :width 839.9999999999999, :height 1092} {:x1 108.125, :y1 780.828125, :x2 407.24066162109375, :y2 800.828125, :width 839.9999999999999, :height 1092} {:x1 90, :y1 801.296875, :x2 99.96875, :y2 821.296875, :width 839.9999999999999, :height 1092}), :page 393}, :content {:text "sealedclassCan: BeverageContainer() {overridefunopen() =\"Pop Top\"overridefunpour() =\"Can: Pour\"}"}, :properties {:color "yellow"}} {:id #uuid "62d8f724-9a36-4f8f-bcbf-d20d738f9331", :page 393, :position {:bounding {:x1 90, :y1 903.625, :x2 479.7891540527344, :y2 985.015625, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 903.625, :x2 479.7891540527344, :y2 923.625, :width 839.9999999999999, :height 1092} {:x1 108.125, :y1 924.078125, :x2 416.3131103515625, :y2 944.078125, :width 839.9999999999999, :height 1092} {:x1 108.125, :y1 944.546875, :x2 434.44384765625, :y2 964.546875, :width 839.9999999999999, :height 1092} {:x1 90, :y1 965.015625, :x2 99.96875, :y2 985.015625, :width 839.9999999999999, :height 1092}), :page 393}, :content {:text "sealedclassBottle: BeverageContainer() {overridefunopen() =\"Remove Cap\"overridefunpour() =\"Bottle: Pour\"}"}, :properties {:color "yellow"}} {:id #uuid "62d8f730-d381-4cd7-8e3b-d2f8351b8d09", :page 394, :position {:bounding {:x1 90, :y1 371.8125, :x2 470.70526123046875, :y2 657.859375, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 371.8125, :x2 398.1980895996094, :y2 391.8125, :width 839.9999999999999, :height 1092} {:x1 108.125, :y1 392.28125, :x2 216.8896942138672, :y2 412.28125, :width 839.9999999999999, :height 1092} {:x1 126.25, :y1 412.75, :x2 325.6553039550781, :y2 432.75, :width 839.9999999999999, :height 1092} {:x1 144.375, :y1 433.21875, :x2 416.32879638671875, :y2 453.21875, :width 839.9999999999999, :height 1092} {:x1 144.375, :y1 453.671875, :x2 470.70526123046875, :y2 473.671875, :width 839.9999999999999, :height 1092} {:x1 126.25, :y1 474.140625, :x2 136.21875, :y2 494.140625, :width 839.9999999999999, :height 1092} {:x1 126.25, :y1 494.609375, :x2 352.8428039550781, :y2 514.609375, :width 839.9999999999999, :height 1092} {:x1 144.375, :y1 515.078125, :x2 443.51629638671875, :y2 535.078125, :width 839.9999999999999, :height 1092} {:x1 144.375, :y1 535.53125, :x2 434.4365539550781, :y2 555.53125, :width 839.9999999999999, :height 1092} {:x1 162.5, :y1 556, :x2 425.3855895996094, :y2 576, :width 839.9999999999999, :height 1092} {:x1 162.5, :y1 576.46875, :x2 443.50634765625, :y2 596.46875, :width 839.9999999999999, :height 1092} {:x1 144.375, :y1 596.9375, :x2 154.34375, :y2 616.9375, :width 839.9999999999999, :height 1092} {:x1 126.25, :y1 617.390625, :x2 136.21875, :y2 637.390625, :width 839.9999999999999, :height 1092} {:x1 108.125, :y1 637.859375, :x2 118.09375, :y2 657.859375, :width 839.9999999999999, :height 1092}), :page 394}, :content {:text "funBeverageContainer.recycle2() =when(this) {isCan ->when(this) {isSteelCan ->\"Recycle Steel\"isAluminumCan ->\"Recycle Aluminum\"}isBottle ->when(this) {isGlassBottle ->\"Recycle Glass\"isPlasticBottle ->when(this) {isPETBottle ->\"Recycle PET\"isHDPEBottle ->\"Recycle HDPE\"}}}"}, :properties {:color "yellow"}} {:id #uuid "62d8f8ce-2bcf-41f9-bbe7-eb40e63e52b9", :page 395, :position {:bounding {:x1 90, :y1 804.53125, :x2 353.765625, :y2 906.390625, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 804.53125, :x2 353.765625, :y2 824.53125, :width 839.9999999999999, :height 1092} {:x1 108.125, :y1 825, :x2 271.2917785644531, :y2 845, :width 839.9999999999999, :height 1092} {:x1 108.125, :y1 845.46875, :x2 343.8074645996094, :y2 865.46875, :width 839.9999999999999, :height 1092} {:x1 108.125, :y1 865.921875, :x2 298.4792785644531, :y2 885.921875, :width 839.9999999999999, :height 1092} {:x1 90, :y1 886.390625, :x2 99.96875, :y2 906.390625, :width 839.9999999999999, :height 1092}), :page 395}, :content {:text "interfaceBeverageContainer{funopen(): Stringfunpour() =\"$name: Pour\"funrecycle(): String}"}, :properties {:color "yellow"}} {:id #uuid "62da12e8-2eb0-43cb-a810-9adcf63fdd80", :page 398, :position {:bounding {:x1 90, :y1 183.09375, :x2 397.7181396484375, :y2 241.09375, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 183.09375, :x2 397.7181396484375, :y2 241.09375, :width 839.9999999999999, :height 1092}), :page 398}, :content {:text "Nested Classes"}, :properties {:color "yellow"}} {:id #uuid "62da49c8-e85d-43b9-9cc1-3343bf3c12a1", :page 398, :position {:bounding {:x1 93.59374809265137, :y1 352.2005310058594, :x2 780.2630214691162, :y2 405.5729064941406, :width 873.6, :height 1135.68}, :rects ({:x1 515.2447109222412, :y1 352.2005310058594, :x2 780.2630214691162, :y2 380.5338439941406, :width 873.6, :height 1135.68} {:x1 93.59374809265137, :y1 377.2395935058594, :x2 443.97836112976074, :y2 405.5729064941406, :width 873.6, :height 1135.68} {:x1 506.04164695739746, :y1 377.2395935058594, :x2 636.5816249847412, :y2 405.5729064941406, :width 873.6, :height 1135.68} {:x1 714.2968349456787, :y1 377.2395935058594, :x2 718.8411464691162, :y2 405.5729064941406, :width 873.6, :height 1135.68} {:x1 93.59374809265137, :y1 381.4062194824219, :x2 714.3269863128662, :y2 403.0728454589844, :width 873.6, :height 1135.68}), :page 398}, :content {:text "This feature is not essential, butnesting a class can clarify your code. Here,Planeis nested withinAirport:"}, :properties {:color "yellow"}} {:id #uuid "62da4a48-11ce-4169-ba44-795263a8f7f3", :page 398, :position {:bounding {:x1 112.44791221618652, :y1 785.5989151000977, :x2 291.62672996520996, :y2 805.5989151000977, :width 873.6, :height 1135.68}, :rects ({:x1 112.44791221618652, :y1 785.5989151000977, :x2 291.62672996520996, :y2 805.5989151000977, :width 873.6, :height 1135.68}), :page 398}, :content {:text "varplane = Plane()"}, :properties {:color "yellow"}} {:id #uuid "62da4a4e-55f9-4592-99be-8a91adaeb8ae", :page 398, :position {:bounding {:x1 112.44791221618652, :y1 806.8749771118164, :x2 499.0303554534912, :y2 826.8749771118164, :width 873.6, :height 1135.68}, :rects ({:x1 112.44791221618652, :y1 806.8749771118164, :x2 499.0303554534912, :y2 826.8749771118164, :width 873.6, :height 1135.68}), :page 398}, :content {:text "plane.contact(denver) eq\"Contacting DEN\""}, :properties {:color "yellow"}} {:id #uuid "62da4a55-bd6a-4b34-acd3-4d8870c973e7", :page 398, :position {:bounding {:x1 112.44791221618652, :y1 849.4401016235352, :x2 527.459020614624, :y2 869.4401016235352, :width 873.6, :height 1135.68}, :rects ({:x1 112.44791221618652, :y1 849.4401016235352, :x2 527.459020614624, :y2 869.4401016235352, :width 873.6, :height 1135.68}), :page 398}, :content {:text "// val privatePlane = Airport.PrivatePlane()"}, :properties {:color "yellow"}} {:id #uuid "62da4a7f-8dab-48b9-9610-62afd9f20ebd", :page 399, :position {:bounding {:x1 93.59374809265137, :y1 127.22653198242188, :x2 780.0133876800537, :y2 180.59896850585938, :width 873.6, :height 1135.68}, :rects ({:x1 93.59374809265137, :y1 127.22653198242188, :x2 110.5044002532959, :y2 155.55990600585938, :width 873.6, :height 1135.68} {:x1 210.06509971618652, :y1 127.22653198242188, :x2 350.60146141052246, :y2 155.55990600585938, :width 873.6, :height 1135.68} {:x1 414.86977195739746, :y1 127.22653198242188, :x2 553.9984951019287, :y2 155.55990600585938, :width 873.6, :height 1135.68} {:x1 638.9973964691162, :y1 127.22653198242188, :x2 709.6718349456787, :y2 155.55990600585938, :width 873.6, :height 1135.68} {:x1 763.6327724456787, :y1 127.22653198242188, :x2 780.0133876800537, :y2 155.55990600585938, :width 873.6, :height 1135.68} {:x1 116.74478721618652, :y1 130.32553100585938, :x2 780.0133876800537, :y2 151.99215698242188, :width 873.6, :height 1135.68} {:x1 93.59374809265137, :y1 152.26559448242188, :x2 119.48326683044434, :y2 180.59896850585938, :width 873.6, :height 1135.68} {:x1 201.28905296325684, :y1 152.26559448242188, :x2 289.7730312347412, :y2 180.59896850585938, :width 873.6, :height 1135.68} {:x1 93.59374809265137, :y1 156.43228149414062, :x2 196.68373680114746, :y2 176.43228149414062, :width 873.6, :height 1135.68}), :page 399}, :content {:text "Incontact(), the nested classPlanehas access to theprivatepropertycodeintheairportargument, "}, :properties {:color "yellow"}} {:id #uuid "62da4aa6-23fd-4f12-8c86-c7f723493d2e", :page 399, :position {:bounding {:x1 178.30728721618652, :y1 177.3046875, :x2 629.275411605835, :y2 205.63800048828125, :width 873.6, :height 1135.68}, :rects ({:x1 235.33853721618652, :y1 177.3046875, :x2 452.1698818206787, :y2 205.63800048828125, :width 873.6, :height 1135.68} {:x1 535.0130214691162, :y1 177.3046875, :x2 629.275411605835, :y2 205.63800048828125, :width 873.6, :height 1135.68} {:x1 178.30728721618652, :y1 180.40362548828125, :x2 529.8607997894287, :y2 202.0703125, :width 873.6, :height 1135.68}), :page 399}, :content {:text "Planeis simply a class inside theAirportnamespace."}, :properties {:color "yellow"}} {:id #uuid "62da4ab2-6f13-4ee3-bc0a-6e4b7036bd6a", :page 399, :position {:bounding {:x1 118.71728324890137, :y1 263.15106201171875, :x2 751.8112392425537, :y2 291.484375, :width 873.6, :height 1135.68}, :rects ({:x1 118.71728324890137, :y1 263.15106201171875, :x2 238.1293239593506, :y2 291.484375, :width 873.6, :height 1135.68} {:x1 528.4374599456787, :y1 263.15106201171875, :x2 751.8112392425537, :y2 291.484375, :width 873.6, :height 1135.68} {:x1 118.72395896911621, :y1 267.31768798828125, :x2 523.3449306488037, :y2 287.31768798828125, :width 873.6, :height 1135.68}), :page 399}, :content {:text ". By importingnestedclasses.Airport.Planewe avoid this qualification."}, :properties {:color "blue"}} {:id #uuid "62da4ab8-00ce-400f-a337-2226d3039147", :page 398, :position {:bounding {:x1 93.59374809265137, :y1 487.6301956176758, :x2 414.2542324066162, :y2 507.63018798828125, :width 873.6, :height 1135.68}, :rects ({:x1 93.59374809265137, :y1 487.6301956176758, :x2 414.2542324066162, :y2 507.63018798828125, :width 873.6, :height 1135.68}), :page 398}, :content {:text "importnestedclasses.Airport.Plane"}, :properties {:color "blue"}} {:id #uuid "62da4ae5-e7f2-4990-b402-8818ed197342", :page 399, :position {:bounding {:x1 92.86458396911621, :y1 298.90625, :x2 560.7997035980225, :y2 327.23956298828125, :width 873.6, :height 1135.68}, :rects ({:x1 92.86458396911621, :y1 298.90625, :x2 270.64500999450684, :y2 327.23956298828125, :width 873.6, :height 1135.68} {:x1 349.2317714691162, :y1 298.90625, :x2 420.61989402770996, :y2 327.23956298828125, :width 873.6, :height 1135.68} {:x1 551.0677089691162, :y1 298.90625, :x2 560.7997035980225, :y2 327.23956298828125, :width 873.6, :height 1135.68} {:x1 276.64061546325684, :y1 302.00518798828125, :x2 551.1186122894287, :y2 323.671875, :width 873.6, :height 1135.68}), :page 399}, :content {:text "A nested class can beprivate, as withPrivatePlane. "}, :properties {:color "yellow"}} {:id #uuid "62da4b1b-1af1-4c8d-8194-323025f33d3f", :page 399, :position {:bounding {:x1 93.59374809265137, :y1 348.984375, :x2 780.0406703948975, :y2 427.39581298828125, :width 873.6, :height 1135.68}, :rects ({:x1 626.6622524261475, :y1 348.984375, :x2 780.0406703948975, :y2 377.31768798828125, :width 873.6, :height 1135.68} {:x1 93.59374809265137, :y1 374.0234375, :x2 160.20754051208496, :y2 402.35675048828125, :width 873.6, :height 1135.68} {:x1 296.5755214691162, :y1 374.0234375, :x2 592.5543422698975, :y2 402.35675048828125, :width 873.6, :height 1135.68} {:x1 743.6067714691162, :y1 374.0234375, :x2 780.0192470550537, :y2 402.35675048828125, :width 873.6, :height 1135.68} {:x1 93.59374809265137, :y1 378.1900634765625, :x2 780.0192470550537, :y2 399.85675048828125, :width 873.6, :height 1135.68} {:x1 93.59374809265137, :y1 399.0625, :x2 312.62304496765137, :y2 427.39581298828125, :width 873.6, :height 1135.68} {:x1 388.67186546325684, :y1 399.0625, :x2 424.6088466644287, :y2 427.39581298828125, :width 873.6, :height 1135.68} {:x1 93.59374809265137, :y1 403.2291259765625, :x2 381.7441921234131, :y2 423.2291259765625, :width 873.6, :height 1135.68}), :page 399}, :content {:text " If you define andreturn aPrivatePlanefrom a member function, as seen inprivatePlane(), theresult must be upcast to apublictype"}, :properties {:color "yellow"}} {:id #uuid "62da4c33-4da1-4821-af55-a8364c15c874", :page 400, :position {:bounding {:x1 93.59374809265137, :y1 791.4583282470703, :x2 287.34054374694824, :y2 833.1249542236328, :width 873.6, :height 1135.68}, :rects ({:x1 93.59374809265137, :y1 791.4583282470703, :x2 287.34054374694824, :y2 833.1249542236328, :width 873.6, :height 1135.68}), :page 400}, :content {:text "Local Classes"}, :properties {:color "yellow"}} {:id #uuid "62da4c78-44f4-4543-b8a1-010c1c3ee875", :page 401, :position {:bounding {:x1 93.59374809265137, :y1 377.34375, :x2 780.1862697601318, :y2 430.71612548828125, :width 873.6, :height 1135.68}, :rects ({:x1 93.59374809265137, :y1 377.34375, :x2 137.97548484802246, :y2 405.67706298828125, :width 873.6, :height 1135.68} {:x1 192.77342796325684, :y1 377.34375, :x2 780.1862697601318, :y2 405.67706298828125, :width 873.6, :height 1135.68} {:x1 144.63541221618652, :y1 380.44268798828125, :x2 780.1862697601318, :y2 402.109375, :width 873.6, :height 1135.68} {:x1 93.59374809265137, :y1 402.3828125, :x2 526.9140300750732, :y2 430.71612548828125, :width 873.6, :height 1135.68}), :page 401}, :content {:text "Localopenclasses should be rare; if you need one, what you’re trying to make isprobably significant enough to create a regular class."}, :properties {:color "yellow"}} {:id #uuid "62da4c7d-d694-4732-8f1f-24beedaa1ba8", :page 401, :position {:bounding {:x1 112.44791221618652, :y1 216.8359375, :x2 301.03612327575684, :y2 236.8359375, :width 873.6, :height 1135.68}, :rects ({:x1 112.44791221618652, :y1 216.8359375, :x2 301.03612327575684, :y2 236.8359375, :width 873.6, :height 1135.68}), :page 401}, :content {:text "openclassAmphibian"}, :properties {:color "yellow"}} {:id #uuid "62da4c7f-3541-4f69-a89f-b862871e7ac4", :page 401, :position {:bounding {:x1 112.44791221618652, :y1 238.125, :x2 338.7583827972412, :y2 258.125, :width 873.6, :height 1135.68}, :rects ({:x1 112.44791221618652, :y1 238.125, :x2 338.7583827972412, :y2 258.125, :width 873.6, :height 1135.68}), :page 401}, :content {:text "classFrog: Amphibian()"}, :properties {:color "yellow"}} {:id #uuid "62da4c82-e611-4ffa-9719-6188d737988f", :page 401, :position {:bounding {:x1 112.44791221618652, :y1 259.40106201171875, :x2 423.67958641052246, :y2 279.40106201171875, :width 873.6, :height 1135.68}, :rects ({:x1 112.44791221618652, :y1 259.40106201171875, :x2 423.67958641052246, :y2 279.40106201171875, :width 873.6, :height 1135.68}), :page 401}, :content {:text "valamphibian: Amphibian = Frog()"}, :properties {:color "yellow"}} {:id #uuid "62da4ccd-7850-4138-90e7-f9579d48af65", :page 401, :position {:bounding {:x1 93.59374809265137, :y1 437.4609375, :x2 780.2424297332764, :y2 515.8723754882812, :width 873.6, :height 1135.68}, :rects ({:x1 647.7633266448975, :y1 437.4609375, :x2 780.04128074646, :y2 465.79425048828125, :width 873.6, :height 1135.68} {:x1 93.59374809265137, :y1 462.5, :x2 780.2424297332764, :y2 490.83331298828125, :width 873.6, :height 1135.68} {:x1 93.59374809265137, :y1 466.6666259765625, :x2 780.2424297332764, :y2 486.6666259765625, :width 873.6, :height 1135.68} {:x1 93.59374809265137, :y1 487.5390625, :x2 482.51244163513184, :y2 515.8723754882812, :width 873.6, :height 1135.68} {:x1 93.59374809265137, :y1 491.7056884765625, :x2 376.51564598083496, :y2 511.7056884765625, :width 873.6, :height 1135.68}), :page 401}, :content {:text "ou can’t returnthem from the function. To return objects of local classes, you must upcast them toa class or interface definedoutsidethe function"}, :properties {:color "yellow"}} {:id #uuid "62da4cec-a246-4313-adc7-e2f7884b501c", :page 401, :position {:bounding {:x1 93.59374809265137, :y1 842.5130004882812, :x2 780.1326503753662, :y2 920.9244384765625, :width 873.6, :height 1135.68}, :rects ({:x1 143.89322471618652, :y1 842.5130004882812, :x2 342.45229148864746, :y2 870.8463134765625, :width 873.6, :height 1135.68} {:x1 527.4608974456787, :y1 842.5130004882812, :x2 559.21266746521, :y2 870.8463134765625, :width 873.6, :height 1135.68} {:x1 630.2343349456787, :y1 842.5130004882812, :x2 780.0401821136475, :y2 870.8463134765625, :width 873.6, :height 1135.68} {:x1 93.59374809265137, :y1 845.6119384765625, :x2 780.0401821136475, :y2 867.2786254882812, :width 873.6, :height 1135.68} {:x1 194.55728721618652, :y1 867.5520629882812, :x2 227.81371116638184, :y2 895.8853759765625, :width 873.6, :height 1135.68} {:x1 284.55727195739746, :y1 867.5520629882812, :x2 348.8179531097412, :y2 895.8853759765625, :width 873.6, :height 1135.68} {:x1 405.53383445739746, :y1 867.5520629882812, :x2 780.1326503753662, :y2 895.8853759765625, :width 873.6, :height 1135.68} {:x1 93.59374809265137, :y1 870.6510009765625, :x2 780.1326503753662, :y2 892.3176879882812, :width 873.6, :height 1135.68} {:x1 93.59374809265137, :y1 892.5911254882812, :x2 142.2008571624756, :y2 920.9244384765625, :width 873.6, :height 1135.68} {:x1 194.02342796325684, :y1 892.5911254882812, :x2 429.79201316833496, :y2 920.9244384765625, :width 873.6, :height 1135.68} {:x1 93.59374809265137, :y1 896.7578125, :x2 188.85733604431152, :y2 916.7578125, :width 873.6, :height 1135.68}), :page 401}, :content {:text "Frogis still invisible outsidecreateAmphibian()—inmain(), you cannot castamphibianto aFrogbecauseFrogisn’t available, so Kotlin reports the attemptto useFrogas an “unresolved reference.”"}, :properties {:color "yellow"}} {:id #uuid "62da4d44-1559-40d4-8a62-762e0081a1fc", :page 401, :position {:bounding {:x1 93.59374809265137, :y1 947.7083129882812, :x2 458.1873149871826, :y2 989.375, :width 873.6, :height 1135.68}, :rects ({:x1 93.59374809265137, :y1 947.7083129882812, :x2 458.1873149871826, :y2 989.375, :width 873.6, :height 1135.68}), :page 401}, :content {:text "Classes Inside Interfaces"}, :properties {:color "yellow"}} {:id #uuid "62da4e85-ff93-4a83-ade1-f1722748716d", :page 402, :position {:bounding {:x1 93.59374809265137, :y1 662.6823120117188, :x2 416.851713180542, :y2 704.3489379882812, :width 873.6, :height 1135.68}, :rects ({:x1 93.59374809265137, :y1 662.6823120117188, :x2 416.851713180542, :y2 704.3489379882812, :width 873.6, :height 1135.68}), :page 402}, :content {:text "Nested Enumerations"}, :properties {:color "yellow"}} {:id #uuid "62da4ed3-63e9-4934-8129-2cd0aeafcdf5", :page 404, :position {:bounding {:x1 93.59374809265137, :y1 222.79946899414062, :x2 780.5494976043701, :y2 276.1718444824219, :width 873.6, :height 1135.68}, :rects ({:x1 93.59374809265137, :y1 222.79946899414062, :x2 780.5494976043701, :y2 251.13278198242188, :width 873.6, :height 1135.68} {:x1 93.59374809265137, :y1 247.83853149414062, :x2 414.2710552215576, :y2 276.1718444824219, :width 873.6, :height 1135.68}), :page 404}, :content {:text "Enumerations cannot be nested within functions, and cannot inherit from otherclasses (including other enumerations)."}, :properties {:color "yellow"}} {:id #uuid "62da4f28-320c-440f-aaaf-923784415220", :page 403, :position {:bounding {:x1 93.59374809265137, :y1 981.4843444824219, :x2 780.0911464691162, :y2 1034.8567199707031, :width 873.6, :height 1135.68}, :rects ({:x1 602.4105434417725, :y1 981.4843444824219, :x2 780.0911464691162, :y2 1009.8176574707031, :width 873.6, :height 1135.68} {:x1 93.59374809265137, :y1 1006.5234069824219, :x2 404.38863945007324, :y2 1034.8567199707031, :width 873.6, :height 1135.68} {:x1 479.72655296325684, :y1 1006.5234069824219, :x2 610.8402919769287, :y2 1034.8567199707031, :width 873.6, :height 1135.68} {:x1 686.2630214691162, :y1 1006.5234069824219, :x2 780.0248622894287, :y2 1034.8567199707031, :width 873.6, :height 1135.68} {:x1 93.59374809265137, :y1 1010.6900939941406, :x2 679.66090965271, :y2 1032.3567810058594, :width 873.6, :height 1135.68}), :page 403}, :content {:text " Following functionalprogramming principles, upgrading aTicketproduces a newTicketrather than"}, :properties {:color "yellow"}} {:id #uuid "62da4f2a-2506-4c21-845e-c720aa80f10e", :page 404, :position {:bounding {:x1 93.59374809265137, :y1 127.2265625, :x2 280.3599224090576, :y2 155.55987548828125, :width 873.6, :height 1135.68}, :rects ({:x1 93.59374809265137, :y1 127.2265625, :x2 280.3599224090576, :y2 155.55987548828125, :width 873.6, :height 1135.68}), :page 404}, :content {:text "modifying the old one."}, :properties {:color "yellow"}} {:id #uuid "62da4fb4-efe0-4caf-b37d-db73586a393f", :page 404, :position {:bounding {:x1 112.44791221618652, :y1 521.4713745117188, :x2 470.77626609802246, :y2 541.4713745117188, :width 873.6, :height 1135.68}, :rects ({:x1 112.44791221618652, :y1 521.4713745117188, :x2 470.77626609802246, :y2 541.4713745117188, :width 873.6, :height 1135.68}), :page 404}, :content {:text "enumclassState{ Playing, Finished }"}, :properties {:color "yellow"}} {:id #uuid "62da4fb6-e7e1-4f58-a65b-2aed6c6f114c", :page 404, :position {:bounding {:x1 112.44791221618652, :y1 542.7604370117188, :x2 404.75172996520996, :y2 562.7604370117188, :width 873.6, :height 1135.68}, :rects ({:x1 112.44791221618652, :y1 542.7604370117188, :x2 404.75172996520996, :y2 562.7604370117188, :width 873.6, :height 1135.68}), :page 404}, :content {:text "enumclassMark{ Blank, X ,O }"}, :properties {:color "yellow"}} {:id #uuid "62da5106-4a2e-4635-86a0-509018a22be2", :page 404, :position {:bounding {:x1 131.3020839691162, :y1 734.3098754882812, :x2 442.55370140075684, :y2 754.3098754882812, :width 873.6, :height 1135.68}, :rects ({:x1 131.3020839691162, :y1 734.3098754882812, :x2 442.55370140075684, :y2 754.3098754882812, :width 873.6, :height 1135.68}), :page 404}, :content {:text "MutableList(side * side) { Blank "}, :properties {:color "yellow"}} {:id #uuid "62da5108-b77c-4f35-a054-591299a45eb6", :page 404, :position {:bounding {:x1 112.44791221618652, :y1 691.7447814941406, :x2 367.0433864593506, :y2 711.7447814941406, :width 873.6, :height 1135.68}, :rects ({:x1 112.44791221618652, :y1 691.7447814941406, :x2 367.0433864593506, :y2 711.7447814941406, :width 873.6, :height 1135.68}), :page 404}, :content {:text "privatevarstate = Playing"}, :properties {:color "yellow"}} {:id #uuid "62da5897-e5d8-40ef-9e72-d0295e6fa46d", :page 406, :position {:bounding {:x1 89.99999809265137, :y1 182.92965698242188, :x2 245.8222942352295, :y2 241.26303100585938, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 182.92965698242188, :x2 245.8222942352295, :y2 241.26303100585938, :width 839.9999999999999, :height 1092}), :page 406}, :content {:text "Objects"}, :properties {:color "yellow"}} {:id #uuid "62da59bb-74a6-4e19-b2f8-cd9d3d413000", :page 406, :position {:bounding {:x1 131.51041221618652, :y1 261.75780487060547, :x2 711.938009262085, :y2 337.42186737060547, :width 839.9999999999999, :height 1092}, :rects ({:x1 131.51041221618652, :y1 261.75780487060547, :x2 161.6874599456787, :y2 289.25780487060547, :width 839.9999999999999, :height 1092} {:x1 235.2083339691162, :y1 261.75780487060547, :x2 711.938009262085, :y2 289.25780487060547, :width 839.9999999999999, :height 1092} {:x1 168.51561546325684, :y1 264.8307113647461, :x2 711.938009262085, :y2 285.66405487060547, :width 839.9999999999999, :height 1092} {:x1 131.51041221618652, :y1 285.83333587646484, :x2 459.7635250091553, :y2 313.33333587646484, :width 839.9999999999999, :height 1092} {:x1 524.2447719573975, :y1 285.83333587646484, :x2 708.6269130706787, :y2 313.33333587646484, :width 839.9999999999999, :height 1092} {:x1 131.51041221618652, :y1 289.99999237060547, :x2 708.6269130706787, :y2 309.1666488647461, :width 839.9999999999999, :height 1092} {:x1 131.51041221618652, :y1 309.92186737060547, :x2 458.7229824066162, :y2 337.42186737060547, :width 839.9999999999999, :height 1092} {:x1 131.51041221618652, :y1 314.0885238647461, :x2 392.3260097503662, :y2 333.25521087646484, :width 839.9999999999999, :height 1092}), :page 406}, :content {:text "Theobjectkeyword defines something that looks roughly like a class.However, you can’t create instances of anobject—there’s only one. Thisis sometimes called theSingletonpattern."}, :properties {:color "yellow"}} {:id #uuid "62da5a1a-9473-43ae-9840-dde1c161eabd", :page 406, :position {:bounding {:x1 89.99999809265137, :y1 410.71614837646484, :x2 757.3567714691162, :y2 462.2916488647461, :width 839.9999999999999, :height 1092}, :rects ({:x1 401.04140281677246, :y1 410.71614837646484, :x2 673.4573574066162, :y2 438.21614837646484, :width 839.9999999999999, :height 1092} {:x1 737.4218349456787, :y1 410.71614837646484, :x2 757.3567714691162, :y2 438.21614837646484, :width 839.9999999999999, :height 1092} {:x1 677.6041469573975, :y1 413.78902435302734, :x2 757.3567714691162, :y2 434.62239837646484, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 434.7916488647461, :x2 427.0606060028076, :y2 462.2916488647461, :width 839.9999999999999, :height 1092} {:x1 496.58852195739746, :y1 434.7916488647461, :x2 634.0194301605225, :y2 462.2916488647461, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 438.95833587646484, :x2 491.6028652191162, :y2 458.12496185302734, :width 839.9999999999999, :height 1092}), :page 406}, :content {:text "You never create an instance of anobject—there’s only one and it’s available once theobjecthas been defined:"}, :properties {:color "green"}} {:id #uuid "62da5a21-5d73-44b1-b365-96771e81e861", :page 410, :position {:bounding {:x1 89.99999809265137, :y1 182.9296875, :x2 361.837064743042, :y2 241.26300048828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 182.9296875, :x2 361.837064743042, :y2 241.26300048828125, :width 839.9999999999999, :height 1092}), :page 410}, :content {:text "Inner Classes"}, :properties {:color "yellow"}} {:id #uuid "62da5a66-fa25-4e72-ba0f-778fbaf127cb", :page 406, :position {:bounding {:x1 108.12499046325684, :y1 725.2213134765625, :x2 189.7125759124756, :y2 744.3880004882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.12499046325684, :y1 725.2213134765625, :x2 189.7125759124756, :y2 744.3880004882812, :width 839.9999999999999, :height 1092}), :page 406}, :content {:text "JustOne.n"}, :properties {:color "yellow"}} {:id #uuid "62da5a7d-5217-46ec-96b6-2dfb4a329458", :page 406, :position {:bounding {:x1 89.25781059265137, :y1 874.4270629882812, :x2 750.6427211761475, :y2 926.0025634765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 134.47223472595215, :y1 874.4270629882812, :x2 484.2907772064209, :y2 901.9270629882812, :width 839.9999999999999, :height 1092} {:x1 549.0624599456787, :y1 874.4270629882812, :x2 750.6427211761475, :y2 901.9270629882812, :width 839.9999999999999, :height 1092} {:x1 489.24477195739746, :y1 877.5, :x2 750.6427211761475, :y2 898.3333129882812, :width 839.9999999999999, :height 1092} {:x1 89.25781059265137, :y1 898.5025634765625, :x2 159.21640586853027, :y2 926.0025634765625, :width 839.9999999999999, :height 1092} {:x1 228.97134971618652, :y1 898.5025634765625, :x2 639.0765132904053, :y2 926.0025634765625, :width 839.9999999999999, :height 1092} {:x1 713.5155849456787, :y1 898.5025634765625, :x2 717.8905849456787, :y2 926.0025634765625, :width 839.9999999999999, :height 1092} {:x1 89.25781059265137, :y1 902.6692504882812, :x2 713.5338954925537, :y2 923.5025634765625, :width 839.9999999999999, :height 1092}), :page 406}, :content {:text "In addition, it places the elements inside theobject’s namespace. If you onlywant theobjectto be visible within the current file, you can make itprivate."}, :properties {:color "yellow"}} {:id #uuid "62da5a97-6a91-4b4e-abe2-cac6fa8bfac4", :page 407, :position {:bounding {:x1 89.07552146911621, :y1 204.71356201171875, :x2 750.0948085784912, :y2 256.2890625, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.07552146911621, :y1 204.71356201171875, :x2 250.4389247894287, :y2 232.21356201171875, :width 839.9999999999999, :height 1092} {:x1 315.7942714691162, :y1 204.71356201171875, :x2 750.0948085784912, :y2 232.21356201171875, :width 839.9999999999999, :height 1092} {:x1 255.97655296325684, :y1 207.78643798828125, :x2 750.0948085784912, :y2 228.61981201171875, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 228.7890625, :x2 260.356595993042, :y2 256.2890625, :width 839.9999999999999, :height 1092}), :page 407}, :content {:text "When you create anobject, however, Kotlin defines the classandcreates a singleinstance of that class. "}, :properties {:color "yellow"}} {:id #uuid "62da5a9f-6d41-4842-86e3-5b30579075b4", :page 407, :position {:bounding {:x1 89.29687309265137, :y1 287.2525634765625, :x2 530.2591915130615, :y2 314.7525634765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.29687309265137, :y1 287.2525634765625, :x2 113.58336448669434, :y2 314.7525634765625, :width 839.9999999999999, :height 1092} {:x1 183.34634971618652, :y1 287.2525634765625, :x2 530.2591915130615, :y2 314.7525634765625, :width 839.9999999999999, :height 1092} {:x1 118.54166221618652, :y1 290.32550048828125, :x2 178.3737087249756, :y2 311.1588134765625, :width 839.9999999999999, :height 1092}), :page 407}, :content {:text "Anobjectcan inherit from a regular class or interface:"}, :properties {:color "yellow"}} {:id #uuid "62da5abc-ce27-420b-a10b-93c9dada84a1", :page 407, :position {:bounding {:x1 89.44009971618652, :y1 883.3854141235352, :x2 750.2486782073975, :y2 934.9609146118164, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.44009971618652, :y1 883.3854141235352, :x2 364.3493404388428, :y2 910.8854141235352, :width 839.9999999999999, :height 1092} {:x1 428.2942714691162, :y1 883.3854141235352, :x2 750.2486782073975, :y2 910.8854141235352, :width 839.9999999999999, :height 1092} {:x1 368.47655296325684, :y1 886.4452896118164, :x2 750.2486782073975, :y2 907.2786026000977, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 907.4609146118164, :x2 259.97106742858887, :y2 934.9609146118164, :width 839.9999999999999, :height 1092} {:x1 329.60936546325684, :y1 907.4609146118164, :x2 408.5935878753662, :y2 934.9609146118164, :width 839.9999999999999, :height 1092} {:x1 483.30727195739746, :y1 907.4609146118164, :x2 487.68227195739746, :y2 934.9609146118164, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 911.6276016235352, :x2 483.32558250427246, :y2 932.4609756469727, :width 839.9999999999999, :height 1092}), :page 407}, :content {:text "There’s only a single instance of anobject, so that instance is shared across all codethat uses it. Here’s anobjectin its ownpackage:"}, :properties {:color "yellow"}} {:id #uuid "62da5abf-df6d-4b35-ace6-4659b65633c0", :page 408, :position {:bounding {:x1 89.99999809265137, :y1 187.96875, :x2 235.93749046325684, :y2 248.05987548828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 187.96875, :x2 226.86197471618652, :y2 207.1353759765625, :width 839.9999999999999, :height 1092} {:x1 108.12499046325684, :y1 208.4375, :x2 235.93749046325684, :y2 227.6041259765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 228.8931884765625, :x2 99.97395896911621, :y2 248.05987548828125, :width 839.9999999999999, :height 1092}), :page 408}, :content {:text "objectShared{vari: Int =0}"}, :properties {:color "yellow"}} {:id #uuid "62da5ac2-f9f0-4475-9759-79df4d397d5c", :page 408, :position {:bounding {:x1 108.12499046325684, :y1 415.7291717529297, :x2 226.86197471618652, :y2 434.8957977294922, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.12499046325684, :y1 415.7291717529297, :x2 226.86197471618652, :y2 434.8957977294922, :width 839.9999999999999, :height 1092}), :page 408}, :content {:text "Shared.i +=5"}, :properties {:color "yellow"}} {:id #uuid "62da5acc-00bc-4cfb-8e74-2b23cf949a5e", :page 408, :position {:bounding {:x1 89.99999809265137, :y1 929.4140625, :x2 408.11730003356934, :y2 956.9140625, :width 839.9999999999999, :height 1092}, :rects ({:x1 149.8177089691162, :y1 929.4140625, :x2 408.11730003356934, :y2 956.9140625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 932.4739379882812, :x2 149.83205223083496, :y2 953.3072509765625, :width 839.9999999999999, :height 1092}), :page 408}, :content {:text "objects can’t be placed inside functions,"}, :properties {:color "yellow"}} {:id #uuid "62da5b00-378b-494a-8b27-039c18fd3c07", :page 411, :position {:bounding {:x1 89.99999809265137, :y1 357.2265434265137, :x2 286.4079189300537, :y2 397.2265434265137, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 357.2265434265137, :x2 221.508695602417, :y2 397.2265434265137, :width 839.9999999999999, :height 1092} {:x1 228.9583339691162, :y1 361.38019943237305, :x2 286.4079189300537, :y2 392.2135429382324, :width 839.9999999999999, :height 1092}), :page 411}, :content {:text "Qualifiedthis"}, :properties {:color "yellow"}} {:id #uuid "62da5b04-6d7a-47e8-963e-e555777b98d5", :page 414, :position {:bounding {:x1 89.99999809265137, :y1 204.84375, :x2 421.2521343231201, :y2 244.84371948242188, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 204.84375, :x2 421.2521343231201, :y2 244.84371948242188, :width 839.9999999999999, :height 1092}), :page 414}, :content {:text "Inner Class Inheritance"}, :properties {:color "yellow"}} {:id #uuid "62da5b06-252b-4d88-a309-b35c66899dd9", :page 415, :position {:bounding {:x1 89.99999809265137, :y1 421.58852100372314, :x2 568.0818157196045, :y2 461.58852100372314, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 421.58852100372314, :x2 568.0818157196045, :y2 461.58852100372314, :width 839.9999999999999, :height 1092}), :page 415}, :content {:text "Local & Anonymous Inner Classes"}, :properties {:color "yellow"}} {:id #uuid "62da9c44-26d5-4f1d-af29-75cc0ca13e2b", :page 410, :position {:bounding {:x1 89.99999809265137, :y1 338.48956298828125, :x2 750.0091762542725, :y2 390.0650939941406, :width 839.9999999999999, :height 1092}, :rects ({:x1 493.5061855316162, :y1 338.48956298828125, :x2 697.13258934021, :y2 365.98956298828125, :width 839.9999999999999, :height 1092} {:x1 700.1432094573975, :y1 341.5625, :x2 750.0091762542725, :y2 362.39581298828125, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 362.5650939941406, :x2 135.3612575531006, :y2 390.0650939941406, :width 839.9999999999999, :height 1092} {:x1 214.04947471618652, :y1 362.5650939941406, :x2 461.5499782562256, :y2 390.0650939941406, :width 839.9999999999999, :height 1092} {:x1 520.2864589691162, :y1 362.5650939941406, :x2 575.8761196136475, :y2 390.0650939941406, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 366.73175048828125, :x2 515.8164882659912, :y2 387.5650939941406, :width 839.9999999999999, :height 1092}), :page 410}, :content {:text ". In the following example,Hotelis likeAirportfromNested Classes, but it usesinnerclasses."}, :properties {:color "yellow"}} {:id #uuid "62da9c7c-dc85-490f-bde6-f3ec06894a3d", :page 410, :position {:bounding {:x1 198.7630214691162, :y1 537.421875, :x2 461.64784812927246, :y2 556.5885009765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 198.7630214691162, :y1 537.421875, :x2 461.64784812927246, :y2 556.5885009765625, :width 839.9999999999999, :height 1092}), :page 410}, :content {:text "privatevalreception: String"}, :properties {:color "yellow"}} {:id #uuid "62da9ca3-5208-48a4-a0ad-d69c7087ce11", :page 410, :position {:bounding {:x1 108.12499046325684, :y1 557.890625, :x2 470.6938991546631, :y2 658.9192504882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.12499046325684, :y1 557.890625, :x2 470.6938991546631, :y2 577.0572509765625, :width 839.9999999999999, :height 1092} {:x1 126.24999046325684, :y1 578.359375, :x2 461.67519187927246, :y2 597.5260009765625, :width 839.9999999999999, :height 1092} {:x1 126.24999046325684, :y1 598.8150634765625, :x2 316.59520530700684, :y2 617.9817504882812, :width 839.9999999999999, :height 1092} {:x1 144.37499046325684, :y1 619.2838134765625, :x2 407.2774257659912, :y2 638.4505004882812, :width 839.9999999999999, :height 1092} {:x1 108.12499046325684, :y1 639.7525634765625, :x2 118.09895896911621, :y2 658.9192504882812, :width 839.9999999999999, :height 1092}), :page 410}, :content {:text "openinnerclassRoom(valid: Int =0) {// Uses 'reception' from outer class:funcallReception() =\"Room $id Calling $reception\"}"}, :properties {:color "blue"}} {:id #uuid "62da9cdf-8c9d-46af-95d8-e6c8e034bd97", :page 411, :position {:bounding {:x1 89.99999809265137, :y1 146.25, :x2 467.6638698577881, :y2 173.75, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 146.25, :x2 362.2568645477295, :y2 173.75, :width 839.9999999999999, :height 1092} {:x1 421.82289695739746, :y1 146.25, :x2 467.6638698577881, :y2 173.75, :width 839.9999999999999, :height 1092} {:x1 366.99217796325684, :y1 149.32293701171875, :x2 416.85814476013184, :y2 170.15625, :width 839.9999999999999, :height 1092}), :page 411}, :content {:text "Nested classes cannot inherit frominnerclasse"}, :properties {:color "red"}} {:id #uuid "62da9d1e-de98-4c17-a563-c3ea878d0615", :page 398, :position {:bounding {:x1 126.24999046325684, :y1 571.1328125, :x2 407.27773094177246, :y2 610.7682189941406, :width 839.9999999999999, :height 1092}, :rects ({:x1 126.24999046325684, :y1 571.1328125, :x2 407.27773094177246, :y2 590.2994689941406, :width 839.9999999999999, :height 1092} {:x1 144.37499046325684, :y1 591.6015625, :x2 398.21202659606934, :y2 610.7682189941406, :width 839.9999999999999, :height 1092}), :page 398}, :content {:text "funcontact(airport: Airport) =\"Contacting ${airport.code}\""}, :properties {:color "red"}} {:id #uuid "62da9d9d-98d0-4147-ad72-aec768142aeb", :page 398, :position {:bounding {:x1 56, :y1 499.65625, :x2 529, :y2 710.65625, :width 839.9999999999999, :height 1092}, :rects (), :page 398}, :content {:text "[:span]", :image 1658494364485}, :properties {:color "blue"}} {:id #uuid "62da9e7d-f61a-4a79-8501-935b8f44a98d", :page 411, :position {:bounding {:x1 89.25781059265137, :y1 239.1015625, :x2 750.015157699585, :y2 290.67706298828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 497.13478660583496, :y1 239.1015625, :x2 654.2699794769287, :y2 266.6015625, :width 839.9999999999999, :height 1092} {:x1 702.3177089691162, :y1 239.1015625, :x2 750.015157699585, :y2 266.6015625, :width 839.9999999999999, :height 1092} {:x1 658.1770839691162, :y1 242.16143798828125, :x2 750.015157699585, :y2 262.9947509765625, :width 839.9999999999999, :height 1092} {:x1 89.25781059265137, :y1 263.17706298828125, :x2 165.5596981048584, :y2 290.67706298828125, :width 839.9999999999999, :height 1092} {:x1 225.3255214691162, :y1 263.17706298828125, :x2 404.3673610687256, :y2 290.67706298828125, :width 839.9999999999999, :height 1092} {:x1 558.7760219573975, :y1 263.17706298828125, :x2 563.1510219573975, :y2 290.67706298828125, :width 839.9999999999999, :height 1092} {:x1 89.25781059265137, :y1 267.34375, :x2 558.79176902771, :y2 288.1771240234375, :width 839.9999999999999, :height 1092}), :page 411}, :content {:text "You cannot create aRoomobjectwithout aHotelobject, as you see withnycHotel.Room()."}, :properties {:color "yellow"}} {:id #uuid "62da9e82-a621-47b1-8571-e0b6925db428", :page 411, :position {:bounding {:x1 89.99999809265137, :y1 297.5650634765625, :x2 374.4862880706787, :y2 325.0650634765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 189.68749046325684, :y1 297.5650634765625, :x2 374.4862880706787, :y2 325.0650634765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 300.625, :x2 184.7158260345459, :y2 321.45831298828125, :width 839.9999999999999, :height 1092}), :page 411}, :content {:text "inner dataclasses are not allowed."}, :properties {:color "red"}} {:id #uuid "62da9eba-2eba-4640-9f7b-4a18ee86c36f", :page 411, :position {:bounding {:x1 87.76041221618652, :y1 422.04425048828125, :x2 750.74049949646, :y2 473.6197509765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 500.1327724456787, :y1 422.04425048828125, :x2 750.74049949646, :y2 449.54425048828125, :width 839.9999999999999, :height 1092} {:x1 87.76041221618652, :y1 446.1197509765625, :x2 630.657995223999, :y2 473.6197509765625, :width 839.9999999999999, :height 1092}), :page 411}, :content {:text "You don’t have to explicitly say“the current object” when you access a property or member function"}, :properties {:color "yellow"}} {:id #uuid "62da9f8d-a4a5-4db7-8b26-d1cebf43e4e4", :page 411, :position {:bounding {:x1 89.99999809265137, :y1 528.6588134765625, :x2 750.16237449646, :y2 580.234375, :width 839.9999999999999, :height 1092}, :rects ({:x1 366.77428245544434, :y1 528.6588134765625, :x2 371.2078151702881, :y2 556.1588134765625, :width 839.9999999999999, :height 1092} {:x1 422.30467796325684, :y1 528.6588134765625, :x2 516.4762783050537, :y2 556.1588134765625, :width 839.9999999999999, :height 1092} {:x1 537.6171474456787, :y1 528.6588134765625, :x2 750.16237449646, :y2 556.1588134765625, :width 839.9999999999999, :height 1092} {:x1 376.8098964691162, :y1 531.7317504882812, :x2 750.16237449646, :y2 552.5650634765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 552.734375, :x2 131.42682456970215, :y2 580.234375, :width 839.9999999999999, :height 1092}), :page 411}, :content {:text ":thisfollowed by@and the name of the targetclass."}, :properties {:color "yellow"}} {:id #uuid "62daa01e-f3b1-4fc6-9cd4-92dbae48431b", :page 411, :position {:bounding {:x1 89.99999809265137, :y1 758.3593292236328, :x2 189.71364402770996, :y2 777.5260162353516, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 758.3593292236328, :x2 189.71364402770996, :y2 777.5260162353516, :width 839.9999999999999, :height 1092}), :page 411}, :content {:text "classFruit"}, :properties {:color "blue"}} {:id #uuid "62daa024-a26a-4936-b537-525a21046fc2", :page 411, :position {:bounding {:x1 108.12499046325684, :y1 840.2213287353516, :x2 272.18749046325684, :y2 859.3880157470703, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.12499046325684, :y1 840.2213287353516, :x2 272.18749046325684, :y2 859.3880157470703, :width 839.9999999999999, :height 1092}), :page 411}, :content {:text "innerclassSeed{"}, :properties {:color "blue"}} {:id #uuid "62daa027-630a-4488-9745-03123eb48ac4", :page 412, :position {:bounding {:x1 126.24999046325684, :y1 290.28643798828125, :x2 281.24999046325684, :y2 309.453125, :width 839.9999999999999, :height 1092}, :rects ({:x1 126.24999046325684, :y1 290.28643798828125, :x2 281.24999046325684, :y2 309.453125, :width 839.9999999999999, :height 1092}), :page 412}, :content {:text "innerclassDNA{"}, :properties {:color "blue"}} {:id #uuid "62daa1ff-5466-4b24-98a0-432de4504258", :page 413, :position {:bounding {:x1 89.99999809265137, :y1 837.5260009765625, :x2 750.0941982269287, :y2 889.1145629882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 139.84374046325684, :y1 837.5260009765625, :x2 144.21874046325684, :y2 865.0260009765625, :width 839.9999999999999, :height 1092} {:x1 201.78384971618652, :y1 837.5260009765625, :x2 231.22231101989746, :y2 865.0260009765625, :width 839.9999999999999, :height 1092} {:x1 278.78905296325684, :y1 837.5260009765625, :x2 482.24767112731934, :y2 865.0260009765625, :width 839.9999999999999, :height 1092} {:x1 620.5468349456787, :y1 837.5260009765625, :x2 750.0941982269287, :y2 865.0260009765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 840.5989379882812, :x2 750.0941982269287, :y2 861.4322509765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 861.6145629882812, :x2 479.1379680633545, :y2 889.1145629882812, :width 839.9999999999999, :height 1092}), :page 413}, :content {:text "Fruit,SeedandDNAall have functions calledchangeColor(), but there’s nooverriding—this is not an inheritance relationship"}, :properties {:color "yellow"}} {:id #uuid "62daa22b-7b98-4e35-8194-651257437870", :page 413, :position {:bounding {:x1 89.99999809265137, :y1 909.765625, :x2 750.2636318206787, :y2 961.3411254882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 520.46315574646, :y1 909.765625, :x2 750.2636318206787, :y2 937.265625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 933.8411254882812, :x2 607.8900737762451, :y2 961.3411254882812, :width 839.9999999999999, :height 1092}), :page 413}, :content {:text "either of the two outer classescan be called without qualification if there are no name collisions"}, :properties {:color "yellow"}} {:id #uuid "62daa235-85ea-42ee-8539-6f340df7126a", :page 412, :position {:bounding {:x1 144.37499046325684, :y1 310.7552185058594, :x2 434.44481468200684, :y2 329.9218444824219, :width 839.9999999999999, :height 1092}, :rects ({:x1 144.37499046325684, :y1 310.7552185058594, :x2 434.44481468200684, :y2 329.9218444824219, :width 839.9999999999999, :height 1092}), :page 412}, :content {:text "funchangeColor(color: String) {"}, :properties {:color "green"}} {:id #uuid "62daa239-16f0-4437-a701-2c09c3ee34a5", :page 411, :position {:bounding {:x1 126.24999046325684, :y1 860.6900939941406, :x2 416.31981468200684, :y2 879.8567504882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 126.24999046325684, :y1 860.6900939941406, :x2 416.31981468200684, :y2 879.8567504882812, :width 839.9999999999999, :height 1092}), :page 411}, :content {:text "funchangeColor(color: String) ="}, :properties {:color "green"}} {:id #uuid "62daa288-ddd0-42a6-ad79-ad2d3bbd6571", :page 414, :position {:bounding {:x1 89.29687309265137, :y1 269.54426074028015, :x2 750.4870204925537, :y2 321.1197917461395, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.29687309265137, :y1 269.54426074028015, :x2 706.6922817230225, :y2 297.04426074028015, :width 839.9999999999999, :height 1092} {:x1 500.2864589691162, :y1 273.7109172344208, :x2 750.4870204925537, :y2 292.8776042461395, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 293.6197917461395, :x2 105.75444602966309, :y2 321.1197917461395, :width 839.9999999999999, :height 1092} {:x1 175.50780296325684, :y1 293.6197917461395, :x2 295.65074729919434, :y2 321.1197917461395, :width 839.9999999999999, :height 1092} {:x1 345.39061546325684, :y1 293.6197917461395, :x2 361.1450710296631, :y2 321.1197917461395, :width 839.9999999999999, :height 1092} {:x1 396.01561546325684, :y1 293.6197917461395, :x2 400.39061546325684, :y2 321.1197917461395, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 297.78644824028015, :x2 396.02870750427246, :y2 318.6197917461395, :width 839.9999999999999, :height 1092}), :page 414}, :content {:text "An inner class can inherit another inner class from adifferentouter class. Here,YolkinBigEggis derived fromYolkinEgg:"}, :properties {:color "blue"}} {:id #uuid "62daa28b-b724-4b68-ab31-35ab4adab597", :page 414, :position {:bounding {:x1 108.12499046325684, :y1 460.4166667461395, :x2 317.5130214691162, :y2 479.58332324028015, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.12499046325684, :y1 460.4166667461395, :x2 317.5130214691162, :y2 479.58332324028015, :width 839.9999999999999, :height 1092}), :page 414}, :content {:text "openinnerclassYolk{"}, :properties {:color "blue"}} {:id #uuid "62daa28e-9d34-4b4d-9e25-58d168650db8", :page 414, :position {:bounding {:x1 108.12499046325684, :y1 665.0651042461395, :x2 389.12376976013184, :y2 684.231730222702, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.12499046325684, :y1 665.0651042461395, :x2 389.12376976013184, :y2 684.231730222702, :width 839.9999999999999, :height 1092}), :page 414}, :content {:text "innerclassYolk: Egg.Yolk() {"}, :properties {:color "blue"}} {:id #uuid "62daa29d-6415-4a20-a50f-b1c7cc1862d2", :page 415, :position {:bounding {:x1 89.99999809265137, :y1 207.16143798828125, :x2 751.9922695159912, :y2 258.7369384765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 207.57811546325684, :y1 207.16143798828125, :x2 339.56688499450684, :y2 234.66143798828125, :width 839.9999999999999, :height 1092} {:x1 435.03905296325684, :y1 207.16143798828125, :x2 714.3645839691162, :y2 234.66143798828125, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 210.234375, :x2 751.9922695159912, :y2 231.06768798828125, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 231.2369384765625, :x2 232.45406913757324, :y2 258.7369384765625, :width 839.9999999999999, :height 1092}), :page 415}, :content {:text "BigEgg.Yolkexplicitly namesEgg.Yolkas its base class, and overrides itsf()member function."}, :properties {:color "yellow"}} {:id #uuid "62daa2c0-604f-47cf-be32-00c25bb754b9", :page 415, :position {:bounding {:x1 89.51822471618652, :y1 303.4635009765625, :x2 750.2533168792725, :y2 355.05206298828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 487.7991542816162, :y1 303.4635009765625, :x2 750.2533168792725, :y2 330.9635009765625, :width 839.9999999999999, :height 1092} {:x1 89.51822471618652, :y1 327.55206298828125, :x2 168.2273464202881, :y2 355.05206298828125, :width 839.9999999999999, :height 1092} {:x1 209.6614589691162, :y1 327.55206298828125, :x2 312.42909812927246, :y2 355.05206298828125, :width 839.9999999999999, :height 1092} {:x1 352.2395839691162, :y1 327.55206298828125, :x2 420.47231101989746, :y2 355.05206298828125, :width 839.9999999999999, :height 1092} {:x1 89.51822471618652, :y1 331.71875, :x2 347.2657070159912, :y2 352.5521240234375, :width 839.9999999999999, :height 1092}), :page 415}, :content {:text " You can see that the overriddenversion off()is used wheng()is called."}, :properties {:color "yellow"}} {:id #uuid "62daa2dc-cf09-4ca6-8705-be5f3764b146", :page 414, :position {:bounding {:x1 108.12499046325684, :y1 869.7135009765625, :x2 216.9211025238037, :y2 888.8801879882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.12499046325684, :y1 869.7135009765625, :x2 216.9211025238037, :y2 888.8801879882812, :width 839.9999999999999, :height 1092}), :page 414}, :content {:text "BigEgg().g()"}, :properties {:color "green"}} {:id #uuid "62daa2e2-df5a-43ab-84db-83a85da66016", :page 414, :position {:bounding {:x1 108.12499046325684, :y1 583.2161254882812, :x2 289.41307640075684, :y2 602.3828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.12499046325684, :y1 583.2161254882812, :x2 289.41307640075684, :y2 602.3828125, :width 839.9999999999999, :height 1092}), :page 414}, :content {:text "fung() { yolk.f() }"}, :properties {:color "green"}} {:id #uuid "62daa2f3-8914-42b4-ab6a-ec6e83ca1ef8", :page 414, :position {:bounding {:x1 126.24999046325684, :y1 501.3541564941406, :x2 470.6938991546631, :y2 520.5208129882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 126.24999046325684, :y1 501.3541564941406, :x2 470.6938991546631, :y2 520.5208129882812, :width 839.9999999999999, :height 1092}), :page 414}, :content {:text "openfunf() { trace(\"Egg.Yolk.f()\") }"}, :properties {:color "green"}} {:id #uuid "62daa304-f5e3-48a1-bc91-839552944e8f", :page 414, :position {:bounding {:x1 108.12499046325684, :y1 787.8645324707031, :x2 352.8966579437256, :y2 807.0312194824219, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.12499046325684, :y1 787.8645324707031, :x2 352.8966579437256, :y2 807.0312194824219, :width 839.9999999999999, :height 1092}), :page 414}, :content {:text "init { insertYolk(Yolk()) }"}, :properties {:color "red"}} {:id #uuid "62daa30b-285c-4d57-a426-4961fe30cf4e", :page 414, :position {:bounding {:x1 108.12499046325684, :y1 562.7473754882812, :x2 434.4709072113037, :y2 581.9140625, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.12499046325684, :y1 562.7473754882812, :x2 434.4709072113037, :y2 581.9140625, :width 839.9999999999999, :height 1092}), :page 414}, :content {:text "funinsertYolk(y: Yolk) { yolk = y }"}, :properties {:color "red"}} {:id #uuid "62daa3c3-202f-4128-84e8-197cd24d0274", :page 415, :position {:bounding {:x1 89.99999809265137, :y1 255.31246948242188, :x2 750.0111904144287, :y2 306.8880310058594, :width 839.9999999999999, :height 1092}, :rects ({:x1 487.5042324066162, :y1 255.31246948242188, :x2 554.2547206878662, :y2 282.8124694824219, :width 839.9999999999999, :height 1092} {:x1 595.1171474456787, :y1 255.31246948242188, :x2 630.045431137085, :y2 282.8124694824219, :width 839.9999999999999, :height 1092} {:x1 715.2473964691162, :y1 255.31246948242188, :x2 750.0111904144287, :y2 282.8124694824219, :width 839.9999999999999, :height 1092} {:x1 559.7005214691162, :y1 258.3854064941406, :x2 750.0111904144287, :y2 279.2187194824219, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 279.3880310058594, :x2 261.0131206512451, :y2 306.8880310058594, :width 839.9999999999999, :height 1092} {:x1 303.59374046325684, :y1 279.3880310058594, :x2 361.54649925231934, :y2 306.8880310058594, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 283.5546569824219, :x2 298.03392601013184, :y2 302.7213439941406, :width 839.9999999999999, :height 1092}), :page 415}, :content {:text "so wheng()callsyolk.f(), theoverridden version off()is used."}, :properties {:color "green"}} {:id #uuid "62daa42f-8fc4-4acf-a25c-0a359def6ffb", :page 414, :position {:bounding {:x1 126.24999046325684, :y1 685.5338134765625, :x2 407.24339866638184, :y2 704.7005004882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 126.24999046325684, :y1 685.5338134765625, :x2 407.24339866638184, :y2 704.7005004882812, :width 839.9999999999999, :height 1092}), :page 414}, :content {:text "init { trace(\"BigEgg.Yolk()\") }"}, :properties {:color "green"}} {:id #uuid "62daa4f9-d38f-47be-af90-396cd5d7ff2b", :page 415, :position {:bounding {:x1 89.99999809265137, :y1 510.4947814941406, :x2 750.011251449585, :y2 562.0703125, :width 839.9999999999999, :height 1092}, :rects ({:x1 728.2647304534912, :y1 510.4947814941406, :x2 750.011251449585, :y2 537.9947509765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 534.5703125, :x2 188.9650936126709, :y2 562.0703125, :width 839.9999999999999, :height 1092} {:x1 248.67186546325684, :y1 534.5703125, :x2 530.0462245941162, :y2 562.0703125, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 538.7369384765625, :x2 243.69408226013184, :y2 557.9036254882812, :width 839.9999999999999, :height 1092}), :page 415}, :content {:text " Inall cases, theinnerkeyword is not used, but is implied:"}, :properties {:color "yellow"}} {:id #uuid "62daa842-0310-44f0-aa99-1057082fc537", :page 416, :position {:bounding {:x1 89.29687309265137, :y1 493.671875, :x2 750.5111064910889, :y2 569.3228759765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.29687309265137, :y1 493.671875, :x2 750.5111064910889, :y2 521.171875, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 517.7473754882812, :x2 326.53329277038574, :y2 545.2473754882812, :width 839.9999999999999, :height 1092} {:x1 362.36977195739746, :y1 517.7473754882812, :x2 366.74477195739746, :y2 545.2473754882812, :width 839.9999999999999, :height 1092} {:x1 412.7473964691162, :y1 517.7473754882812, :x2 417.1223964691162, :y2 545.2473754882812, :width 839.9999999999999, :height 1092} {:x1 489.20570945739746, :y1 517.7473754882812, :x2 518.6441860198975, :y2 545.2473754882812, :width 839.9999999999999, :height 1092} {:x1 590.6900844573975, :y1 517.7473754882812, :x2 750.1165370941162, :y2 545.2473754882812, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 521.9140625, :x2 750.1165370941162, :y2 542.7473754882812, :width 839.9999999999999, :height 1092} {:x1 159.79166221618652, :y1 541.8228759765625, :x2 164.16666221618652, :y2 569.3228759765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 544.8958129882812, :x2 159.8099880218506, :y2 565.7291259765625, :width 839.9999999999999, :height 1092}), :page 416}, :content {:text "A local inner class has access to other elements in the function as well as elementsin the outer-class object, thussay,emit,squeakandhome()are available withinspeak()."}, :properties {:color "yellow"}} {:id #uuid "62daa852-1836-4e76-b89a-681b102d1192", :page 415, :position {:bounding {:x1 108.12499046325684, :y1 784.0624694824219, :x2 461.6453456878662, :y2 946.4843444824219, :width 839.9999999999999, :height 1092}, :rects ({:x1 108.12499046325684, :y1 784.0624694824219, :x2 253.15895652770996, :y2 803.2291564941406, :width 839.9999999999999, :height 1092} {:x1 126.24999046325684, :y1 804.5312194824219, :x2 271.29201316833496, :y2 823.6979064941406, :width 839.9999999999999, :height 1092} {:x1 126.24999046325684, :y1 824.9869689941406, :x2 316.62953758239746, :y2 844.1536254882812, :width 839.9999999999999, :height 1092} {:x1 126.24999046325684, :y1 845.4557189941406, :x2 280.3407497406006, :y2 864.6223754882812, :width 839.9999999999999, :height 1092} {:x1 144.37499046325684, :y1 865.9244689941406, :x2 461.6453456878662, :y2 885.0911254882812, :width 839.9999999999999, :height 1092} {:x1 126.24999046325684, :y1 886.3932189941406, :x2 136.2239589691162, :y2 905.5598754882812, :width 839.9999999999999, :height 1092} {:x1 126.24999046325684, :y1 906.8489379882812, :x2 235.0391445159912, :y2 926.0155944824219, :width 839.9999999999999, :height 1092} {:x1 108.12499046325684, :y1 927.3176574707031, :x2 118.09895896911621, :y2 946.4843444824219, :width 839.9999999999999, :height 1092}), :page 415}, :content {:text "fundog(): Pet {valsay =\"Bark\"// Local inner class:classDog: Pet {overridefunspeak() = say + home()}returnDog()}"}, :properties {:color "red"}} {:id #uuid "62db64f2-a2e2-458a-a817-d6e67073c38e", :page 416, :position {:bounding {:x1 89.99999809265137, :y1 706.9010162353516, :x2 750.5275249481201, :y2 758.4765167236328, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.99999809265137, :y1 706.9010162353516, :x2 750.5275249481201, :y2 734.4010162353516, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 730.9765167236328, :x2 449.6508159637451, :y2 758.4765167236328, :width 839.9999999999999, :height 1092}), :page 416}, :content {:text "Because inner classes keep a reference to the outer-class object, local inner classescan access all members of the enclosing class:"}, :properties {:color "yellow"}} {:id #uuid "62db6515-6993-4a27-94ac-35a9558655b5", :page 416, :position {:bounding {:x1 89.25781059265137, :y1 576.2109375, :x2 752.6768169403076, :y2 627.7864379882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 89.41406059265137, :y1 576.2109375, :x2 752.6768169403076, :y2 603.7109375, :width 839.9999999999999, :height 1092} {:x1 89.25781059265137, :y1 600.2864379882812, :x2 229.73596000671387, :y2 627.7864379882812, :width 839.9999999999999, :height 1092} {:x1 286.6145839691162, :y1 600.2864379882812, :x2 296.18407249450684, :y2 627.7864379882812, :width 839.9999999999999, :height 1092} {:x1 89.25781059265137, :y1 604.453125, :x2 286.62376976013184, :y2 623.6197509765625, :width 839.9999999999999, :height 1092}), :page 416}, :content {:text "You can identify an anonymous inner class because it uses an object expression,which you see incat(). "}, :properties {:color "purple"}} {:id #uuid "62db6534-66b7-407e-a7ef-d9b7483b7f6b", :page 416, :position {:bounding {:x1 126.24999046325684, :y1 147.03125, :x2 470.71068382263184, :y2 207.1353759765625, :width 839.9999999999999, :height 1092}, :rects ({:x1 126.24999046325684, :y1 147.03125, :x2 307.54128074645996, :y2 166.1978759765625, :width 839.9999999999999, :height 1092} {:x1 144.37499046325684, :y1 167.5, :x2 470.71068382263184, :y2 186.6666259765625, :width 839.9999999999999, :height 1092} {:x1 126.24999046325684, :y1 187.96875, :x2 136.2239589691162, :y2 207.1353759765625, :width 839.9999999999999, :height 1092}), :page 416}, :content {:text "returnobject: Pet {overridefunspeak() = emit + home()}"}, :properties {:color "purple"}} {:id #uuid "62db6558-5b37-485d-9741-ec3a05cddb25", :page 416, :position {:bounding {:x1 89.99999809265137, :y1 624.3619384765625, :x2 750.3485317230225, :y2 675.9375, :width 839.9999999999999, :height 1092}, :rects ({:x1 246.8183193206787, :y1 624.3619384765625, :x2 750.3485317230225, :y2 651.8619384765625, :width 839.9999999999999, :height 1092} {:x1 89.99999809265137, :y1 648.4375, :x2 654.1452617645264, :y2 675.9375, :width 839.9999999999999, :height 1092}), :page 416}, :content {:text "Anonymous inner classes are smaller and more straightforwardand do not create a named class that will only be used in one place."}, :properties {:color "purple"}} {:id #uuid "62db6712-78e2-4c93-b681-d34e9f5c8e02", :page 418, :position {:bounding {:x1 80.13020324707031, :y1 507.27862548828125, :x2 625.3668823242188, :y2 532.2786254882812, :width 748.0000000000001, :height 972.4000000000002}, :rects ({:x1 80.13020324707031, :y1 507.27862548828125, :x2 527.5777740478516, :y2 532.2786254882812, :width 748.0000000000001, :height 972.4000000000002} {:x1 571.7317504882812, :y1 507.27862548828125, :x2 625.3668823242188, :y2 532.2786254882812, :width 748.0000000000001, :height 972.4000000000002} {:x1 531.7838134765625, :y1 510.28643798828125, :x2 567.3111572265625, :y2 529.453125, :width 748.0000000000001, :height 972.4000000000002}), :page 418}, :content {:text "SAM conversions are limited—for example, they do not supportinitclauses."}, :properties {:color "yellow"}} {:id #uuid "62db6733-0f4a-4c1a-b2bf-355b883774ed", :page 418, :position {:bounding {:x1 80.13020324707031, :y1 577.3958129882812, :x2 670.1903228759766, :y2 645.2734375, :width 748.0000000000001, :height 972.4000000000002}, :rects ({:x1 80.13020324707031, :y1 577.3958129882812, :x2 670.1903228759766, :y2 602.3958129882812, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 598.828125, :x2 668.1937408447266, :y2 623.828125, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 602.9947509765625, :x2 668.1937408447266, :y2 620.4947509765625, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 620.2734375, :x2 227.35203552246094, :y2 645.2734375, :width 748.0000000000001, :height 972.4000000000002}), :page 418}, :content {:text "In Kotlin, files can contain multiple top-level classes and functions. Because of this,there’s rarely a need for local classes, so if you do need them they should be basicand straightforward. "}, :properties {:color "yellow"}} {:id #uuid "62db6741-8782-452e-8ba9-9fb7f1817d67", :page 418, :position {:bounding {:x1 80.13020324707031, :y1 620.2734375, :x2 668.6466217041016, :y2 688.1510009765625, :width 748.0000000000001, :height 972.4000000000002}, :rects ({:x1 321.8609924316406, :y1 620.2734375, :x2 548.80712890625, :y2 645.2734375, :width 748.0000000000001, :height 972.4000000000002} {:x1 591.8489379882812, :y1 620.2734375, :x2 667.9290771484375, :y2 645.2734375, :width 748.0000000000001, :height 972.4000000000002} {:x1 552.421875, :y1 623.28125, :x2 667.9290771484375, :y2 642.4478759765625, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 641.7056884765625, :x2 668.6466217041016, :y2 666.7056884765625, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 645.8723754882812, :x2 668.6466217041016, :y2 663.3723754882812, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 663.1510009765625, :x2 456.01454162597656, :y2 688.1510009765625, :width 748.0000000000001, :height 972.4000000000002}), :page 418}, :content {:text "it’s reasonable to create a simpledataclass that’sonly used inside a function. If a local class becomes complex, you should probablytake it out of the function and make it a regular class."}, :properties {:color "red"}} {:id #uuid "62db6795-a0e6-4503-a571-aaeb4144954a", :page 419, :position {:bounding {:x1 80.13020324707031, :y1 163.5546875, :x2 438.6496124267578, :y2 215.2213134765625, :width 748.0000000000001, :height 972.4000000000002}, :rects ({:x1 80.13020324707031, :y1 163.5546875, :x2 438.6496124267578, :y2 215.2213134765625, :width 748.0000000000001, :height 972.4000000000002}), :page 419}, :content {:text "Companion Objects"}, :properties {:color "yellow"}} {:id #uuid "62db8e74-b44c-4533-8411-b2c3a5be3b9a", :page 419, :position {:bounding {:x1 80.13020324707031, :y1 438.7760314941406, :x2 668.6537628173828, :y2 485.2213439941406, :width 748.0000000000001, :height 972.4000000000002}, :rects ({:x1 80.13020324707031, :y1 438.7760314941406, :x2 668.6537628173828, :y2 463.7760314941406, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 460.2213439941406, :x2 235.05844116210938, :y2 485.2213439941406, :width 748.0000000000001, :height 972.4000000000002}), :page 419}, :content {:text "If you define a companion object inside a class, its elements become transparentlyavailable to that class:"}, :properties {:color "yellow"}} {:id #uuid "62db8e92-6cdc-4085-a011-56d127b4aa47", :page 419, :position {:bounding {:x1 96.27603912353516, :y1 591.5364227294922, :x2 242.36978149414062, :y2 662.8776092529297, :width 748.0000000000001, :height 972.4000000000002}, :rects ({:x1 96.27603912353516, :y1 591.5364227294922, :x2 242.36978149414062, :y2 608.2031097412109, :width 748.0000000000001, :height 972.4000000000002} {:x1 112.421875, :y1 609.7656097412109, :x2 185.8723907470703, :y2 626.4322967529297, :width 748.0000000000001, :height 972.4000000000002} {:x1 112.421875, :y1 627.9817352294922, :x2 234.3098907470703, :y2 644.6484222412109, :width 748.0000000000001, :height 972.4000000000002} {:x1 96.27603912353516, :y1 646.2109222412109, :x2 105.15625, :y2 662.8776092529297, :width 748.0000000000001, :height 972.4000000000002}), :page 419}, :content {:text "companionobject{vali =3funf() = i *3}"}, :properties {:color "yellow"}} {:id #uuid "62db8f11-cf67-441d-9e6f-161c84998291", :page 420, :position {:bounding {:x1 80.13020324707031, :y1 108.33331298828125, :x2 668.2123565673828, :y2 154.77862548828125, :width 748.0000000000001, :height 972.4000000000002}, :rects ({:x1 80.13020324707031, :y1 108.33331298828125, :x2 668.2123565673828, :y2 133.33331298828125, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 129.77862548828125, :x2 164.68789672851562, :y2 154.77862548828125, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 133.9453125, :x2 304.6432189941406, :y2 151.4453125, :width 748.0000000000001, :height 972.4000000000002}), :page 420}, :content {:text "Outside the class, you access members of the companion object using the classname, as inWithCompanion.i"}, :properties {:color "yellow"}} {:id #uuid "62db8f4e-ac68-401f-9cca-0244ad34f665", :page 419, :position {:bounding {:x1 96.27603912353516, :y1 828.4504699707031, :x2 274.66143798828125, :y2 845.1171569824219, :width 748.0000000000001, :height 972.4000000000002}, :rects ({:x1 96.27603912353516, :y1 828.4504699707031, :x2 274.66143798828125, :y2 845.1171569824219, :width 748.0000000000001, :height 972.4000000000002}), :page 419}, :content {:text "WithCompanion.f() eq9"}, :properties {:color "yellow"}} {:id #uuid "62db8f93-7f7e-42fb-aa14-0084ad08427e", :page 420, :position {:bounding {:x1 80.13020324707031, :y1 202.5, :x2 458.492431640625, :y2 227.5, :width 748.0000000000001, :height 972.4000000000002}, :rects ({:x1 111.2109375, :y1 202.5, :x2 458.492431640625, :y2 227.5, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 205.5078125, :x2 106.76979064941406, :y2 224.67449951171875, :width 748.0000000000001, :height 972.4000000000002}), :page 420}, :content {:text "h()is an extension function to the companion object."}, :properties {:color "yellow"}} {:id #uuid "62db8fc6-08ee-4f03-babe-de1d476a1b9c", :page 420, :position {:bounding {:x1 80.13020324707031, :y1 283.64581298828125, :x2 668.1604766845703, :y2 330.078125, :width 748.0000000000001, :height 972.4000000000002}, :rects ({:x1 80.13020324707031, :y1 283.64581298828125, :x2 668.1604766845703, :y2 308.64581298828125, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 305.078125, :x2 265.0686950683594, :y2 330.078125, :width 748.0000000000001, :height 972.4000000000002}), :page 420}, :content {:text "Only one companion object is allowed per class. For clarity, you can give thecompanion object a name:"}, :properties {:color "yellow"}} {:id #uuid "62db90cc-3f51-4782-8e84-619f80f534fc", :page 420, :position {:bounding {:x1 96.27603912353516, :y1 431.015625, :x2 290.8072814941406, :y2 484.1275634765625, :width 748.0000000000001, :height 972.4000000000002}, :rects ({:x1 96.27603912353516, :y1 431.015625, :x2 290.8072814941406, :y2 447.6822509765625, :width 748.0000000000001, :height 972.4000000000002} {:x1 112.421875, :y1 449.2447509765625, :x2 290.0224609375, :y2 465.91143798828125, :width 748.0000000000001, :height 972.4000000000002} {:x1 96.27603912353516, :y1 467.4609375, :x2 105.15625, :y2 484.1275634765625, :width 748.0000000000001, :height 972.4000000000002}), :page 420}, :content {:text "companionobjectNamed{funs() =\"from Named\"}"}, :properties {:color "blue"}} {:id #uuid "62db90e5-7b94-418f-9606-1b1748ae3dc9", :page 420, :position {:bounding {:x1 80.13020324707031, :y1 770.4687042236328, :x2 668.2091827392578, :y2 838.3463287353516, :width 748.0000000000001, :height 972.4000000000002}, :rects ({:x1 80.13020324707031, :y1 770.4687042236328, :x2 668.1888580322266, :y2 795.4687042236328, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 791.9140167236328, :x2 668.2091827392578, :y2 816.9140167236328, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 796.0807037353516, :x2 668.2091827392578, :y2 813.5807037353516, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 813.3463287353516, :x2 118.87310791015625, :y2 838.3463287353516, :width 748.0000000000001, :height 972.4000000000002} {:x1 203.203125, :y1 813.3463287353516, :x2 207.09634399414062, :y2 838.3463287353516, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 817.5130157470703, :x2 203.2130126953125, :y2 835.0130157470703, :width 748.0000000000001, :height 972.4000000000002}), :page 420}, :content {:text "Even when you name the companion object you can still access its elements withoutusing the name. If you don’t give the companion object a name, Kotlin assigns it thenameCompanion."}, :properties {:color "yellow"}} {:id #uuid "62db90eb-a87a-419a-8d02-54b242352895", :page 420, :position {:bounding {:x1 96.27603912353516, :y1 722.5911407470703, :x2 443.38983154296875, :y2 739.2577667236328, :width 748.0000000000001, :height 972.4000000000002}, :rects ({:x1 96.27603912353516, :y1 722.5911407470703, :x2 443.38983154296875, :y2 739.2577667236328, :width 748.0000000000001, :height 972.4000000000002}), :page 420}, :content {:text "WithDefault.Companion.s() eq\"from Default\""}, :properties {:color "yellow"}} {:id #uuid "62db91c3-222f-40a9-81a8-c1bcd1097491", :page 421, :position {:bounding {:x1 79.63541412353516, :y1 457.36981201171875, :x2 668.7264404296875, :y2 525.2473754882812, :width 748.0000000000001, :height 972.4000000000002}, :rects ({:x1 79.63541412353516, :y1 457.36981201171875, :x2 162.52915954589844, :y2 482.36981201171875, :width 748.0000000000001, :height 972.4000000000002} {:x1 226.47134399414062, :y1 457.36981201171875, :x2 297.0325012207031, :y2 482.36981201171875, :width 748.0000000000001, :height 972.4000000000002} {:x1 316.57550048828125, :y1 457.36981201171875, :x2 668.7264404296875, :y2 482.36981201171875, :width 748.0000000000001, :height 972.4000000000002} {:x1 167.83853149414062, :y1 460.37762451171875, :x2 668.7264404296875, :y2 479.54425048828125, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 478.81512451171875, :x2 207.8467254638672, :y2 503.81512451171875, :width 748.0000000000001, :height 972.4000000000002} {:x1 378.0078125, :y1 478.81512451171875, :x2 459.3714294433594, :y2 503.81512451171875, :width 748.0000000000001, :height 972.4000000000002} {:x1 477.16143798828125, :y1 478.81512451171875, :x2 503.37060546875, :y2 503.81512451171875, :width 748.0000000000001, :height 972.4000000000002} {:x1 521.1978759765625, :y1 478.81512451171875, :x2 667.951904296875, :y2 503.81512451171875, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 482.98175048828125, :x2 667.951904296875, :y2 502.14837646484375, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 500.24737548828125, :x2 164.2633056640625, :y2 525.2473754882812, :width 748.0000000000001, :height 972.4000000000002} {:x1 177.5520782470703, :y1 500.24737548828125, :x2 181.4453125, :y2 525.2473754882812, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 504.4140625, :x2 178.4375, :y2 521.9140625, :width 748.0000000000001, :height 972.4000000000002}), :page 421}, :content {:text "The tests inmain()show thatnhas only a single piece of storage, no matter howmany instances ofWithObjectPropertyare created.aandbboth access the samememory forn."}, :properties {:color "yellow"}} {:id #uuid "62db920b-a46c-4708-8dba-81e4c3990658", :page 421, :position {:bounding {:x1 79.32291412353516, :y1 582.9296875, :x2 668.1189575195312, :y2 629.3619689941406, :width 748.0000000000001, :height 972.4000000000002}, :rects ({:x1 79.32291412353516, :y1 582.9296875, :x2 668.1189575195312, :y2 607.9296875, :width 748.0000000000001, :height 972.4000000000002} {:x1 214.98696899414062, :y1 587.0963439941406, :x2 668.1189575195312, :y2 604.5963439941406, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 604.3619689941406, :x2 439.63856506347656, :y2 629.3619689941406, :width 748.0000000000001, :height 972.4000000000002}), :page 421}, :content {:text "When a function isonlyaccessing properties in the companion object, it makes senseto move that function inside the companion object:"}, :properties {:color "yellow"}} {:id #uuid "62db984d-4f02-4357-951f-6d0f736b0bb2", :page 422, :position {:bounding {:x1 79.62239074707031, :y1 165.79425048828125, :x2 652.7213134765625, :y2 190.79425048828125, :width 748.0000000000001, :height 972.4000000000002}, :rects ({:x1 79.62239074707031, :y1 165.79425048828125, :x2 228.27796936035156, :y2 190.79425048828125, :width 748.0000000000001, :height 972.4000000000002} {:x1 441.2890625, :y1 165.79425048828125, :x2 546.7982177734375, :y2 190.79425048828125, :width 748.0000000000001, :height 972.4000000000002} {:x1 648.828125, :y1 165.79425048828125, :x2 652.7213134765625, :y2 190.79425048828125, :width 748.0000000000001, :height 972.4000000000002} {:x1 232.64321899414062, :y1 168.80206298828125, :x2 648.84130859375, :y2 187.96875, :width 748.0000000000001, :height 972.4000000000002}), :page 422}, :content {:text "You no longer need aCompanionObjectFunctioninstance to callincrement()."}, :properties {:color "yellow"}} {:id #uuid "62db9858-560d-4277-96dd-be96724e9771", :page 422, :position {:bounding {:x1 79.51822662353516, :y1 548.2291564941406, :x2 559.2780838012695, :y2 573.2291564941406, :width 748.0000000000001, :height 972.4000000000002}, :rects ({:x1 79.51822662353516, :y1 548.2291564941406, :x2 559.2780838012695, :y2 573.2291564941406, :width 748.0000000000001, :height 972.4000000000002}), :page 422}, :content {:text "A companion object can be an instance of a class defined elsewhere:"}, :properties {:color "yellow"}} {:id #uuid "62db98ab-9b89-467c-91e3-b79bf2183c65", :page 423, :position {:bounding {:x1 96.27603912353516, :y1 349.4270935058594, :x2 370.7633056640625, :y2 420.7682189941406, :width 748.0000000000001, :height 972.4000000000002}, :rects ({:x1 96.27603912353516, :y1 349.4270935058594, :x2 273.864501953125, :y2 366.0937194824219, :width 748.0000000000001, :height 972.4000000000002} {:x1 112.421875, :y1 367.6562194824219, :x2 370.7633056640625, :y2 384.3229064941406, :width 748.0000000000001, :height 972.4000000000002} {:x1 112.421875, :y1 385.8854064941406, :x2 370.7633056640625, :y2 402.5520935058594, :width 748.0000000000001, :height 972.4000000000002} {:x1 96.27603912353516, :y1 404.1015319824219, :x2 105.15625, :y2 420.7682189941406, :width 748.0000000000001, :height 972.4000000000002}), :page 423}, :content {:text "companionobject: ZI {overridefunf() =\"ZIClass.f()\"overridefung() =\"ZIClass.g()\"}"}, :properties {:color "yellow"}} {:id #uuid "62db98ae-9c0d-475c-b5d4-ef5c8a6d6d97", :page 423, :position {:bounding {:x1 96.27603912353516, :y1 185.41668701171875, :x2 419.2441101074219, :y2 274.98699951171875, :width 748.0000000000001, :height 972.4000000000002}, :rects ({:x1 96.27603912353516, :y1 185.41668701171875, :x2 322.3141174316406, :y2 202.0833740234375, :width 748.0000000000001, :height 972.4000000000002} {:x1 112.421875, :y1 203.6458740234375, :x2 257.7225341796875, :y2 220.3125, :width 748.0000000000001, :height 972.4000000000002} {:x1 128.5677032470703, :y1 221.86199951171875, :x2 354.6737976074219, :y2 238.5286865234375, :width 748.0000000000001, :height 972.4000000000002} {:x1 112.421875, :y1 240.0911865234375, :x2 419.2441101074219, :y2 256.7578125, :width 748.0000000000001, :height 972.4000000000002} {:x1 96.27603912353516, :y1 258.3203125, :x2 105.15625, :y2 274.98699951171875, :width 748.0000000000001, :height 972.4000000000002}), :page 423}, :content {:text "companionobject: ZIOpen() {overridefung() =\"ZICompanionInheritance.g()\"funh() =\"ZICompanionInheritance.h()\"}"}, :properties {:color "yellow"}} {:id #uuid "62db98d6-30e1-4f2e-a19d-70fc5c5e8d24", :page 423, :position {:bounding {:x1 80.13020324707031, :y1 842.7734222412109, :x2 672.2906494140625, :y2 886.2109222412109, :width 748.0000000000001, :height 972.4000000000002}, :rects ({:x1 645.6510009765625, :y1 842.7734222412109, :x2 672.2906494140625, :y2 861.9401092529297, :width 748.0000000000001, :height 972.4000000000002} {:x1 130.80728149414062, :y1 861.2109222412109, :x2 668.1677551269531, :y2 886.2109222412109, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 864.2187347412109, :x2 124.53346252441406, :y2 883.3854217529297, :width 748.0000000000001, :height 972.4000000000002}), :page 423}, :content {:text "ZI-Classshows that you can implement an interface while creating the companion"}, :properties {:color "yellow"}} {:id #uuid "62db98d9-71e5-46c5-9afd-3c6c075d7d6c", :page 424, :position {:bounding {:x1 80.13020324707031, :y1 108.333251953125, :x2 126.50410461425781, :y2 133.333251953125, :width 748.0000000000001, :height 972.4000000000002}, :rects ({:x1 80.13020324707031, :y1 108.333251953125, :x2 126.50410461425781, :y2 133.333251953125, :width 748.0000000000001, :height 972.4000000000002}), :page 424}, :content {:text "object."}, :properties {:color "yellow"}} {:id #uuid "62db996f-6f73-4926-be04-d1ba121cc194", :page 424, :position {:bounding {:x1 80.13020324707031, :y1 138.95834350585938, :x2 668.2032623291016, :y2 206.83590698242188, :width 748.0000000000001, :height 972.4000000000002}, :rects ({:x1 80.13020324707031, :y1 138.95834350585938, :x2 492.21339416503906, :y2 163.95834350585938, :width 748.0000000000001, :height 972.4000000000002} {:x1 533.2421875, :y1 138.95834350585938, :x2 667.9349975585938, :y2 163.95834350585938, :width 748.0000000000001, :height 972.4000000000002} {:x1 497.7213439941406, :y1 141.96615600585938, :x2 667.9349975585938, :y2 161.13278198242188, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 160.39059448242188, :x2 668.2032623291016, :y2 185.39059448242188, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 164.55728149414062, :x2 668.2032623291016, :y2 182.05728149414062, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 181.83590698242188, :x2 270.01300048828125, :y2 206.83590698242188, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 186.00259399414062, :x2 266.23236083984375, :y2 203.50259399414062, :width 748.0000000000001, :height 972.4000000000002}), :page 424}, :content {:text "If the class you want to use as a companion object is notopen, you cannot use itdirectly as we did above. However, if that class implements an interface you can stilluse it viaClass Delegation:"}, :properties {:color "yellow"}} {:id #uuid "62db9a53-2c58-4f00-86bb-429f642feda2", :page 424, :position {:bounding {:x1 96.27603912353516, :y1 495.3905944824219, :x2 386.8844299316406, :y2 512.0572814941406, :width 748.0000000000001, :height 972.4000000000002}, :rects ({:x1 96.27603912353516, :y1 495.3905944824219, :x2 386.8844299316406, :y2 512.0572814941406, :width 748.0000000000001, :height 972.4000000000002}), :page 424}, :content {:text "companionobject: ZIbyZIClosed() {"}, :properties {:color "red"}} {:id #uuid "62db9a59-6b29-45e5-811a-6cf0d440299b", :page 424, :position {:bounding {:x1 96.27603912353516, :y1 404.2708435058594, :x2 370.75726318359375, :y2 420.9374694824219, :width 748.0000000000001, :height 972.4000000000002}, :rects ({:x1 96.27603912353516, :y1 404.2708435058594, :x2 370.75726318359375, :y2 420.9374694824219, :width 748.0000000000001, :height 972.4000000000002}), :page 424}, :content {:text "companionobject: ZIbyZIClosed()"}, :properties {:color "red"}} {:id #uuid "62db9ad3-675f-4f52-8be2-bb97f8b6d07d", :page 425, :position {:bounding {:x1 80.13020324707031, :y1 208.671875, :x2 668.2034301757812, :y2 276.5494384765625, :width 748.0000000000001, :height 972.4000000000002}, :rects ({:x1 541.357177734375, :y1 208.671875, :x2 668.2034301757812, :y2 233.671875, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 230.1171875, :x2 208.0757293701172, :y2 255.1171875, :width 748.0000000000001, :height 972.4000000000002} {:x1 257.9166564941406, :y1 230.1171875, :x2 668.087890625, :y2 255.1171875, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 234.2838134765625, :x2 668.087890625, :y2 251.7838134765625, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 251.5494384765625, :x2 139.03268432617188, :y2 276.5494384765625, :width 748.0000000000001, :height 972.4000000000002}), :page 425}, :content {:text ". Even if the classof that instance isfinal, we can still override and add methods to the delegationreceiver."}, :properties {:color "blue"}} {:id #uuid "62db9aeb-9a93-4926-b089-a068853ec240", :page 425, :position {:bounding {:x1 191.32969665527344, :y1 187.23956298828125, :x2 427.2666320800781, :y2 212.23956298828125, :width 748.0000000000001, :height 972.4000000000002}, :rects ({:x1 191.32969665527344, :y1 187.23956298828125, :x2 427.2666320800781, :y2 212.23956298828125, :width 748.0000000000001, :height 972.4000000000002} {:x1 337.34375, :y1 191.40625, :x2 427.2666320800781, :y2 208.90625, :width 748.0000000000001, :height 972.4000000000002}), :page 425}, :content {:text " override and extendthat delegate"}, :properties {:color "blue"}} {:id #uuid "62db9b42-bb97-420c-bbc6-2f1349dd184b", :page 426, :position {:bounding {:x1 68, :y1 231.65625, :x2 438, :y2 587.65625, :width 748.0000000000001, :height 972.4000000000002}, :rects (), :page 426}, :content {:text "[:span]", :image 1658559297688}, :properties {:color "blue"}} {:id #uuid "62db9eed-117e-4c3f-bb6d-e8f08606f615", :page 426, :position {:bounding {:x1 79.63541412353516, :y1 588.3203125, :x2 668.0716552734375, :y2 656.1978759765625, :width 748.0000000000001, :height 972.4000000000002}, :rects ({:x1 79.63541412353516, :y1 588.3203125, :x2 106.50262451171875, :y2 613.3203125, :width 748.0000000000001, :height 972.4000000000002} {:x1 196.1458282470703, :y1 588.3203125, :x2 292.4458923339844, :y2 613.3203125, :width 748.0000000000001, :height 972.4000000000002} {:x1 359.42706298828125, :y1 588.3203125, :x2 668.01611328125, :y2 613.3203125, :width 748.0000000000001, :height 972.4000000000002} {:x1 111.3671875, :y1 591.328125, :x2 668.01611328125, :y2 610.4947509765625, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 609.765625, :x2 222.33731079101562, :y2 634.765625, :width 748.0000000000001, :height 972.4000000000002} {:x1 303.3854064941406, :y1 609.765625, :x2 668.0716552734375, :y2 634.765625, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 613.9322509765625, :x2 668.0716552734375, :y2 631.4322509765625, :width 748.0000000000001, :height 972.4000000000002} {:x1 80.13020324707031, :y1 631.1978759765625, :x2 419.7139434814453, :y2 656.1978759765625, :width 748.0000000000001, :height 972.4000000000002}), :page 426}, :content {:text "TheNumbered2constructor isprivate. This means there’s only one way to createan instance—via thecreate()factory function. A factory function can sometimessolve problems that regular constructors cannot."}, :properties {:color "yellow"}} {:id #uuid "630860b7-13af-43b3-aca4-f3387391aac4", :page 67, :position {:bounding {:x1 90, :y1 183.09375, :x2 453.9171142578125, :y2 241.09375, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 183.09375, :x2 453.9171142578125, :y2 241.09375, :width 839.9999999999999, :height 1092}), :page 67}, :content {:text "Looping & Ranges"}, :properties {:color "yellow"}} {:id #uuid "63086271-7f27-46d0-80bf-0e2323d3417f", :page 258, :position {:bounding {:x1 90, :y1 182.92968368530273, :x2 502.7330322265625, :y2 241.2630157470703, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 182.92968368530273, :x2 502.7330322265625, :y2 241.2630157470703, :width 839.9999999999999, :height 1092}), :page 258}, :content {:text "Member References"}, :properties {:color "yellow"}} {:id #uuid "63086281-3013-4585-9b9a-3c108de0b3a4", :page 259, :position {:bounding {:x1 90, :y1 666.4973754882812, :x2 382.2323303222656, :y2 706.4973754882812, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 666.4973754882812, :x2 382.2323303222656, :y2 706.4973754882812, :width 839.9999999999999, :height 1092}), :page 259}, :content {:text "Function References"}, :properties {:color "yellow"}} {:id #uuid "63086289-df05-48bd-8a68-53efc09e8819", :page 261, :position {:bounding {:x1 90, :y1 539.4140319824219, :x2 427.67364501953125, :y2 579.4140319824219, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 539.4140319824219, :x2 427.67364501953125, :y2 579.4140319824219, :width 839.9999999999999, :height 1092}), :page 261}, :content {:text "Constructor References"}, :properties {:color "yellow"}} {:id #uuid "63086292-21d6-4410-be51-8f9c93f7311b", :page 262, :position {:bounding {:x1 90, :y1 397.7734270095825, :x2 530.2238159179688, :y2 437.7734270095825, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 397.7734270095825, :x2 530.2238159179688, :y2 437.7734270095825, :width 839.9999999999999, :height 1092}), :page 262}, :content {:text "Extension Function References"}, :properties {:color "yellow"}} {:id #uuid "630862a0-5734-40c2-9ca5-6059d3d6cb3c", :page 263, :position {:bounding {:x1 90, :y1 182.9296875, :x2 575.011474609375, :y2 241.26300048828125, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 182.9296875, :x2 575.011474609375, :y2 241.26300048828125, :width 839.9999999999999, :height 1092}), :page 263}, :content {:text "Higher-Order Functions"}, :properties {:color "yellow"}} {:id #uuid "630862bb-4309-4cb0-8448-58a1e7ce4939", :page 289, :position {:bounding {:x1 90, :y1 182.92967987060547, :x2 410.52142333984375, :y2 241.2630157470703, :width 839.9999999999999, :height 1092}, :rects ({:x1 90, :y1 182.92967987060547, :x2 410.52142333984375, :y2 241.2630157470703, :width 839.9999999999999, :height 1092}), :page 289}, :content {:text "Local Functions"}, :properties {:color "yellow"}} {:id #uuid "633a94e2-6845-4e1b-b865-d1b1a392f087", :page 428, :position {:bounding {:x1 0, :y1 -1.666666030883789, :x2 387.42818197607994, :y2 224.1276035308838, :width 516, :height 670.8}, :rects ({:x1 0, :y1 -1.666666030883789, :x2 0, :y2 17.5, :width 516, :height 670.8} {:x1 216.65099081397057, :y1 144.6484317779541, :x2 387.42818197607994, :y2 187.1484317779541, :width 516, :height 670.8} {:x1 55.27994665503502, :y1 181.6276035308838, :x2 160.79963049292564, :y2 224.1276035308838, :width 516, :height 670.8}), :page 428}, :content {:text " Preventing Failure"}, :properties {:color "red"}} {:id #uuid "633a9514-d422-445f-aca6-fde911fec607", :page 430, :position {:bounding {:x1 60.84649786353111, :y1 153.37237548828125, :x2 250.2811597287655, :y2 165.0390625, :width 516, :height 670.8}, :rects ({:x1 60.84649786353111, :y1 153.37237548828125, :x2 250.2811597287655, :y2 165.0390625, :width 516, :height 670.8}), :page 430}, :content {:text ": Exception(\"wrong value: $value\")"}, :properties {:color "red"}} {:id #uuid "633a9556-6a8f-4d41-8664-40d3f81b62c0", :page 430, :position {:bounding {:x1 0, :y1 238.37239456176758, :x2 188.96736654639244, :y2 315.8919258117676, :width 516, :height 670.8}, :rects ({:x1 0, :y1 238.37239456176758, :x2 0, :y2 257.5390510559082, :width 516, :height 670.8} {:x1 77.55208334326744, :y1 304.2252388000488, :x2 188.96736654639244, :y2 315.8919258117676, :width 516, :height 670.8}), :page 430}, :content {:text "throw Exception1(13)"}, :properties {:color "red"}} {:id #uuid "633a95dc-5e5e-4ae5-b1b6-f053f8d07803", :page 432, :position {:bounding {:x1 0, :y1 414.4010314941406, :x2 467.0580342710018, :y2 479.70050048828125, :width 523, :height 679.9000000000001}, :rects ({:x1 0, :y1 414.4010314941406, :x2 0, :y2 433.56768798828125, :width 523, :height 679.9000000000001} {:x1 55.46223959326744, :y1 447.20703125, :x2 467.0580342710018, :y2 464.70703125, :width 523, :height 679.9000000000001} {:x1 129.74608358740807, :y1 450.1236877441406, :x2 467.0580342710018, :y2 462.53253173828125, :width 523, :height 679.9000000000001} {:x1 56.0351537168026, :y1 462.20050048828125, :x2 374.5758946835995, :y2 479.70050048828125, :width 523, :height 679.9000000000001}), :page 432}, :content {:text "When you call toss() you must catch all relevant toss() exceptions, allowing non-relevant exceptions to “bubble up” and be caught elsewhere."}, :properties {:color "red"}} {:id #uuid "633a95f2-98b7-4eb1-9157-ee6a31325108", :page 433, :position {:bounding {:x1 56.0351537168026, :y1 379.07550048828125, :x2 200.69964346289635, :y2 399.9088439941406, :width 523, :height 679.9000000000001}, :rects ({:x1 56.0351537168026, :y1 379.07550048828125, :x2 200.69964346289635, :y2 399.9088439941406, :width 523, :height 679.9000000000001}), :page 433}, :content {:text "Exception Subtypes"}, :properties {:color "red"}} {:id #uuid "633a95f7-ce36-4067-a4f9-6578656f76f2", :page 435, :position {:bounding {:x1 56.0351537168026, :y1 306.59503173828125, :x2 215.5185521543026, :y2 331.59503173828125, :width 523, :height 679.9000000000001}, :rects ({:x1 56.0351537168026, :y1 306.59503173828125, :x2 215.5185521543026, :y2 331.59503173828125, :width 523, :height 679.9000000000001}), :page 435}, :content {:text "Resource Cleanup"}, :properties {:color "red"}} {:id #uuid "633a960b-9917-4ebe-8d19-85b89da85836", :page 435, :position {:bounding {:x1 56.0351537168026, :y1 385.16925048828125, :x2 372.4129613339901, :y2 398.5025939941406, :width 523, :height 679.9000000000001}, :rects ({:x1 56.0351537168026, :y1 385.16925048828125, :x2 372.4129613339901, :y2 398.5025939941406, :width 523, :height 679.9000000000001}), :page 435}, :content {:text "finally ensures resource cleanup during exception handling."}, :properties {:color "red"}} {:id #uuid "633a961c-12d6-4f6c-8ef8-3a914b6f0ad7", :page 438, :position {:bounding {:x1 56.0351537168026, :y1 319.9413948059082, :x2 150.10571798682213, :y2 344.9413948059082, :width 523, :height 679.9000000000001}, :rects ({:x1 56.0351537168026, :y1 319.9413948059082, :x2 150.10571798682213, :y2 344.9413948059082, :width 523, :height 679.9000000000001}), :page 438}, :content {:text "Guidelines"}, :properties {:color "red"}} {:id #uuid "633a9622-4610-4ec2-af17-42a54c0f1ced", :page 438, :position {:bounding {:x1 76.7075169980526, :y1 447.3763008117676, :x2 149.414525359869, :y2 464.8763008117676, :width 523, :height 679.9000000000001}, :rects ({:x1 76.7075169980526, :y1 447.3763008117676, :x2 149.414525359869, :y2 464.8763008117676, :width 523, :height 679.9000000000001} {:x1 76.71223959326744, :y1 450.2929573059082, :x2 146.81157431006432, :y2 462.7018013000488, :width 523, :height 679.9000000000001}), :page 438}, :content {:text " Logic Errors:"}, :properties {:color "red"}} {:id #uuid "633a962a-f1c9-4997-9dc9-d103aa45380c", :page 438, :position {:bounding {:x1 79.81119284033775, :y1 493.4439888000488, :x2 145.39954122900963, :y2 510.9439888000488, :width 523, :height 679.9000000000001}, :rects ({:x1 79.81119284033775, :y1 493.4439888000488, :x2 145.39954122900963, :y2 510.9439888000488, :width 523, :height 679.9000000000001}), :page 438}, :content {:text "Data Errors"}, :properties {:color "red"}} {:id #uuid "633a963b-4f24-4092-a396-60fd12f63415", :page 439, :position {:bounding {:x1 81.88150534033775, :y1 153.61978149414062, :x2 190.30513510107994, :y2 171.11978149414062, :width 523, :height 679.9000000000001}, :rects ({:x1 81.88150534033775, :y1 153.61978149414062, :x2 190.30513510107994, :y2 171.11978149414062, :width 523, :height 679.9000000000001}), :page 439}, :content {:text "Input/Output Errors:"}, :properties {:color "red"}} {:id #uuid "633a9660-514a-407a-b8c5-2eb9c84b447c", :page 440, :position {:bounding {:x1 56.0351537168026, :y1 114.18620300292969, :x2 296.28643545508385, :y2 150.01951599121094, :width 523, :height 679.9000000000001}, :rects ({:x1 56.0351537168026, :y1 114.18620300292969, :x2 296.28643545508385, :y2 150.01951599121094, :width 523, :height 679.9000000000001}), :page 440}, :content {:text "Check Instructions"}, :properties {:color "red"}} {:id #uuid "633a969c-ba19-4620-91a9-7d1d4b74007f", :page 441, :position {:bounding {:x1 0, :y1 270.3775939941406, :x2 470.07445272803307, :y2 350.1366882324219, :width 523, :height 679.9000000000001}, :rects ({:x1 0, :y1 270.3775939941406, :x2 0, :y2 289.5442810058594, :width 523, :height 679.9000000000001} {:x1 55.46223959326744, :y1 319.7916564941406, :x2 470.07445272803307, :y2 337.2916564941406, :width 523, :height 679.9000000000001} {:x1 137.22655233740807, :y1 322.7083435058594, :x2 470.07445272803307, :y2 335.1171569824219, :width 523, :height 679.9000000000001} {:x1 56.0351537168026, :y1 336.8033752441406, :x2 342.41466268897057, :y2 350.1366882324219, :width 523, :height 679.9000000000001}), :page 441}, :content {:text "We perform the require() inside the constructor. require() throws an IllegalArgumentException if its condition isn’t satisfied. "}, :properties {:color "red"}} {:id #uuid "633a96c5-cbe9-4d3c-a0a9-5805e9644a57", :page 441, :position {:bounding {:x1 0, :y1 94.34893798828125, :x2 281.94749960303307, :y2 192.61065673828125, :width 523, :height 679.9000000000001}, :rects ({:x1 0, :y1 94.34893798828125, :x2 0, :y2 113.515625, :width 523, :height 679.9000000000001} {:x1 0, :y1 110.3515625, :x2 0, :y2 129.51821899414062, :width 523, :height 679.9000000000001} {:x1 78.60677084326744, :y1 155.04556274414062, :x2 253.58672079443932, :y2 167.12890625, :width 523, :height 679.9000000000001} {:x1 89.89583334326744, :y1 167.78643798828125, :x2 281.94749960303307, :y2 179.86978149414062, :width 523, :height 679.9000000000001} {:x1 78.60677084326744, :y1 180.52734375, :x2 84.81119284033775, :y2 192.61065673828125, :width 523, :height 679.9000000000001}), :page 441}, :content {:text "require(monthNumber in 1..12) {\"Month out of range: $monthNumber\"}"}, :properties {:color "red"}} {:id #uuid "633a96f1-39c0-4851-8867-cc68fa7bcf5b", :page 441, :position {:bounding {:x1 0, :y1 318.3854179382324, :x2 466.9950154721737, :y2 405.6901054382324, :width 523, :height 679.9000000000001}, :rects ({:x1 0, :y1 318.3854179382324, :x2 0, :y2 337.55207443237305, :width 523, :height 679.9000000000001} {:x1 55.6835912168026, :y1 371.1783866882324, :x2 466.9950154721737, :y2 388.6783866882324, :width 523, :height 679.9000000000001} {:x1 185.72264608740807, :y1 374.09504318237305, :x2 466.9950154721737, :y2 386.5038871765137, :width 523, :height 679.9000000000001} {:x1 56.0351537168026, :y1 388.1901054382324, :x2 462.3933309018612, :y2 405.6901054382324, :width 523, :height 679.9000000000001} {:x1 56.0351537168026, :y1 389.4401054382324, :x2 439.1613057553768, :y2 400.81379318237305, :width 523, :height 679.9000000000001}), :page 441}, :content {:text "The second parameter for require() is a lambda that produces a String. If the String requires construction, that overhead doesn’t occur unless require() fails."}, :properties {:color "red"}} {:id #uuid "633a9765-59bd-4432-a3ce-46ca044d49d4", :page 442, :position {:bounding {:x1 0, :y1 78.34637451171875, :x2 293.25081381201744, :y2 167.12890625, :width 523, :height 679.9000000000001}, :rects ({:x1 0, :y1 78.34637451171875, :x2 0, :y2 97.51303100585938, :width 523, :height 679.9000000000001} {:x1 0, :y1 94.34896850585938, :x2 0, :y2 113.515625, :width 523, :height 679.9000000000001} {:x1 67.31770834326744, :y1 129.56381225585938, :x2 225.45239767432213, :y2 141.64715576171875, :width 523, :height 679.9000000000001} {:x1 78.60677084326744, :y1 142.3046875, :x2 293.25081381201744, :y2 154.38803100585938, :width 523, :height 679.9000000000001} {:x1 67.31770834326744, :y1 155.04559326171875, :x2 73.52213034033775, :y2 167.12890625, :width 523, :height 679.9000000000001}), :page 442}, :content {:text "require(underRadical >= 0) {\"Negative underRadical: $underRadical\"}"}, :properties {:color "red"}} {:id #uuid "633a979d-a74c-4912-a92e-e4050639a373", :page 444, :position {:bounding {:x1 0, :y1 30.338531494140625, :x2 467.14684042334557, :y2 123.22915649414062, :width 523, :height 679.9000000000001}, :rects ({:x1 0, :y1 30.338531494140625, :x2 0, :y2 49.50518798828125, :width 523, :height 679.9000000000001} {:x1 167.32207235693932, :y1 90.73565673828125, :x2 467.14684042334557, :y2 108.23565673828125, :width 523, :height 679.9000000000001} {:x1 198.70442709326744, :y1 93.65234375, :x2 467.14684042334557, :y2 106.06118774414062, :width 523, :height 679.9000000000001} {:x1 56.0351537168026, :y1 105.72915649414062, :x2 229.50362905859947, :y2 123.22915649414062, :width 523, :height 679.9000000000001}), :page 444}, :content {:text " Using require(), we verify that the file name is correct and that the file exists and is not empty"}, :properties {:color "red"}} {:id #uuid "633a97c6-340d-49e8-ac14-1ba8a748b4cc", :page 444, :position {:bounding {:x1 0, :y1 254.375, :x2 231.12146505713463, :y2 336.7643127441406, :width 523, :height 679.9000000000001}, :rects ({:x1 0, :y1 254.375, :x2 0, :y2 273.5416564941406, :width 523, :height 679.9000000000001} {:x1 0, :y1 270.3775939941406, :x2 0, :y2 289.54425048828125, :width 523, :height 679.9000000000001} {:x1 67.31770834326744, :y1 299.19921875, :x2 231.12146505713463, :y2 311.28253173828125, :width 523, :height 679.9000000000001} {:x1 78.60677084326744, :y1 311.9400939941406, :x2 191.57616171240807, :y2 324.0234375, :width 523, :height 679.9000000000001} {:x1 67.31770834326744, :y1 324.68096923828125, :x2 73.52213034033775, :y2 336.7643127441406, :width 523, :height 679.9000000000001}), :page 444}, :content {:text "require(lines.isNotEmpty()) {\"$fileName is empty\"}"}, :properties {:color "red"}} {:id #uuid "633a980a-2f55-4644-b626-a9e3e45d50d8", :page 440, :position {:bounding {:x1 236.66670736670494, :y1 429.2643127441406, :x2 469.25133261084557, :y2 446.7643127441406, :width 523, :height 679.9000000000001}, :rects ({:x1 236.66670736670494, :y1 429.2643127441406, :x2 469.25133261084557, :y2 446.7643127441406, :width 523, :height 679.9000000000001}), :page 440}, :content {:text "These tests cannot be checked at compile time."}, :properties {:color "red"}} {:id #uuid "633a981e-e52e-4d87-8a5b-5a2f46d9f4d2", :page 440, :position {:bounding {:x1 0, :y1 238.37238311767578, :x2 467.29461416602135, :y2 476.7447814941406, :width 523, :height 679.9000000000001}, :rects ({:x1 0, :y1 238.37238311767578, :x2 0, :y2 257.53904724121094, :width 523, :height 679.9000000000001} {:x1 56.0351537168026, :y1 444.2577819824219, :x2 467.29461416602135, :y2 461.7577819824219, :width 523, :height 679.9000000000001} {:x1 56.0351537168026, :y1 459.2447814941406, :x2 162.11722311377525, :y2 476.7447814941406, :width 523, :height 679.9000000000001}), :page 440}, :content {:text "Preconditions are relatively easy to include in your code, but sometimes they can be turned into unit tests."}, :properties {:color "red"}} {:id #uuid "633a98b9-bce8-494c-ad72-f8c52296e827", :page 445, :position {:bounding {:x1 215.95052084326744, :y1 443.9908752441406, :x2 367.6627400815487, :y2 461.4908752441406, :width 523, :height 679.9000000000001}, :rects ({:x1 215.95052084326744, :y1 443.9908752441406, :x2 367.6627400815487, :y2 461.4908752441406, :width 523, :height 679.9000000000001}), :page 445}, :content {:text "IllegalArgumentException."}, :properties {:color "red"}} {:id #uuid "633a98f3-0611-4c4d-950c-0176340bd3c9", :page 447, :position {:bounding {:x1 56.0351537168026, :y1 77.76692199707031, :x2 468.86717733740807, :y2 95.26692199707031, :width 523, :height 679.9000000000001}, :rects ({:x1 56.0351537168026, :y1 77.76692199707031, :x2 468.86717733740807, :y2 95.26692199707031, :width 523, :height 679.9000000000001} {:x1 99.49869284033775, :y1 79.01692199707031, :x2 466.18184408545494, :y2 91.42578125, :width 523, :height 679.9000000000001}), :page 447}, :content {:text "check() is identical to require() except that it throws IllegalStateException."}, :properties {:color "red"}} {:id #uuid "633a9915-dfd5-4951-9d7a-122d791409a8", :page 447, :position {:bounding {:x1 0, :y1 30.338546752929688, :x2 469.251553863287, :y2 123.22917175292969, :width 523, :height 679.9000000000001}, :rects ({:x1 0, :y1 30.338546752929688, :x2 0, :y2 49.50520324707031, :width 523, :height 679.9000000000001} {:x1 56.0351537168026, :y1 90.73567199707031, :x2 467.19839987158775, :y2 108.23567199707031, :width 523, :height 679.9000000000001} {:x1 177.11588034033775, :y1 93.65234375, :x2 467.19839987158775, :y2 106.06120300292969, :width 523, :height 679.9000000000001} {:x1 56.0351537168026, :y1 105.72917175292969, :x2 469.251553863287, :y2 123.22917175292969, :width 523, :height 679.9000000000001}), :page 447}, :content {:text "It is typically used at the end of a function, to verify that the results (or the fields in the function’s object) are valid—that things haven’t somehow gotten into a bad state."}, :properties {:color "blue"}} {:id #uuid "633a9933-2e89-4433-a04b-303dac6c1d15", :page 447, :position {:bounding {:x1 0, :y1 430.4036407470703, :x2 467.3180135190487, :y2 522.5455474853516, :width 523, :height 679.9000000000001}, :rects ({:x1 0, :y1 430.4036407470703, :x2 0, :y2 449.57029724121094, :width 523, :height 679.9000000000001} {:x1 55.59895834326744, :y1 490.0520782470703, :x2 467.3180135190487, :y2 507.5520782470703, :width 523, :height 679.9000000000001} {:x1 56.0351537168026, :y1 505.04554748535156, :x2 257.7918675839901, :y2 522.5455474853516, :width 523, :height 679.9000000000001}), :page 447}, :content {:text "Assuming your preconditions ensure valid arguments, a postcondition failure almost always indicates a programming error. "}, :properties {:color "red"}} {:id #uuid "633a994d-61ce-4556-bf10-5019fe123963", :page 448, :position {:bounding {:x1 56.0351537168026, :y1 78.75, :x2 127.58704885840416, :y2 97.91665649414062, :width 523, :height 679.9000000000001}, :rects ({:x1 56.0351537168026, :y1 78.75, :x2 127.58704885840416, :y2 97.91665649414062, :width 523, :height 679.9000000000001}), :page 448}, :content {:text "assert()"}, :properties {:color "red"}} {:id #uuid "633a9975-37f9-4496-8676-52fc99eb2535", :page 448, :position {:bounding {:x1 0, :y1 62.34375, :x2 467.5846150815487, :y2 185.20184326171875, :width 523, :height 679.9000000000001}, :rects ({:x1 0, :y1 62.34375, :x2 0, :y2 81.51043701171875, :width 523, :height 679.9000000000001} {:x1 56.0351537168026, :y1 154.73309326171875, :x2 467.2537129819393, :y2 168.06640625, :width 523, :height 679.9000000000001} {:x1 56.0351537168026, :y1 167.70184326171875, :x2 467.5846150815487, :y2 185.20184326171875, :width 523, :height 679.9000000000001} {:x1 56.0351537168026, :y1 170.61849975585938, :x2 464.87645468115807, :y2 183.02734375, :width 523, :height 679.9000000000001}), :page 448}, :content {:text "assert() comes from Java. Assertions are disabled by default, and are only engaged if you explicitly turn them on using a command-line flag. In Kotlin, this flag is -ea."}, :properties {:color "red"}} {:id #uuid "633a9979-c0d7-43b4-a79e-91abcc398832", :page 448, :position {:bounding {:x1 0, :y1 94.34896850585938, :x2 467.13216146826744, :y2 221.6015625, :width 523, :height 679.9000000000001}, :rects ({:x1 0, :y1 94.34896850585938, :x2 0, :y2 113.515625, :width 523, :height 679.9000000000001} {:x1 55.46223959326744, :y1 189.10809326171875, :x2 467.13216146826744, :y2 206.60809326171875, :width 523, :height 679.9000000000001} {:x1 162.06380209326744, :y1 192.02474975585938, :x2 467.13216146826744, :y2 204.43359375, :width 523, :height 679.9000000000001} {:x1 56.0351537168026, :y1 204.1015625, :x2 161.96033224463463, :y2 221.6015625, :width 523, :height 679.9000000000001}), :page 448}, :content {:text "We recommend using require() and check(), which are always available without special configuration."}, :properties {:color "red"}} {:id #uuid "633a9998-7665-4a9c-accd-e736ae44cec6", :page 449, :position {:bounding {:x1 56.0351537168026, :y1 108.73699951171875, :x2 267.59117636084557, :y2 144.5703125, :width 523, :height 679.9000000000001}, :rects ({:x1 56.0351537168026, :y1 108.73699951171875, :x2 109.73524221777916, :y2 144.5703125, :width 523, :height 679.9000000000001} {:x1 206.53645834326744, :y1 108.73699951171875, :x2 267.59117636084557, :y2 144.5703125, :width 523, :height 679.9000000000001} {:x1 103.04036459326744, :y1 114.15365600585938, :x2 214.02342733740807, :y2 141.65365600585938, :width 523, :height 679.9000000000001}), :page 449}, :content {:text "The Nothing Type"}, :properties {:color "red"}} {:id #uuid "633a99ac-9141-4639-96e9-9f05144ab95c", :page 449, :position {:bounding {:x1 81.88150534033775, :y1 156.60809326171875, :x2 387.06636556982994, :y2 174.10809326171875, :width 523, :height 679.9000000000001}, :rects ({:x1 81.88150534033775, :y1 156.60809326171875, :x2 387.06636556982994, :y2 174.10809326171875, :width 523, :height 679.9000000000001} {:x1 90.50130209326744, :y1 159.52471923828125, :x2 143.89322409033775, :y2 171.93359375, :width 523, :height 679.9000000000001}), :page 449}, :content {:text "A Nothing return type indicates a function that never returns"}, :properties {:color "red"}} {:id #uuid "633a99ff-7169-4d3e-9e0d-4e520f179c34", :page 449, :position {:bounding {:x1 56.0351537168026, :y1 330.82030487060547, :x2 306.8430379331112, :y2 344.15364837646484, :width 523, :height 679.9000000000001}, :rects ({:x1 56.0351537168026, :y1 330.82030487060547, :x2 306.8430379331112, :y2 344.15364837646484, :width 523, :height 679.9000000000001}), :page 449}, :content {:text "Nothing is a built-in Kotlin type with no instances"}, :properties {:color "red"}} {:id #uuid "633a9a5f-916f-4e4d-9607-e950e354f5df", :page 449, :position {:bounding {:x1 43, :y1 423.8125, :x2 360, :y2 624.8125, :width 523, :height 679.9000000000001}, :rects (), :page 449}, :content {:text "[:span]", :image 1664784990646}, :properties {:color "red"}} {:id #uuid "633a9aec-225c-4110-868e-7be8abaad1da", :page 450, :position {:bounding {:x1 0, :y1 350.39060974121094, :x2 469.24187979102135, :y2 457.0051727294922, :width 523, :height 679.9000000000001}, :rects ({:x1 0, :y1 350.39060974121094, :x2 0, :y2 369.5572967529297, :width 523, :height 679.9000000000001} {:x1 56.0351537168026, :y1 426.5364227294922, :x2 467.2829564511776, :y2 439.8697967529297, :width 523, :height 679.9000000000001} {:x1 56.0351537168026, :y1 439.5051727294922, :x2 469.24187979102135, :y2 457.0051727294922, :width 523, :height 679.9000000000001}), :page 450}, :content {:text "fail() allows you to easily change the error-handling strategy. For example, you can change the exception type or log an additional message before throwing an exception."}, :properties {:color "red"}} {:id #uuid "633a9b00-519d-47da-b0e1-509c265ce7f8", :page 450, :position {:bounding {:x1 45, :y1 210.5, :x2 258, :y2 420.5, :width 523, :height 679.9000000000001}, :rects (), :page 450}, :content {:text "[:span]", :image 1664785151236}, :properties {:color "red"}} {:id #uuid "633a9bf1-8d1a-4dfc-8099-1f59f451c121", :page 452, :position {:bounding {:x1 67.31770834326744, :y1 167.78646850585938, :x2 293.2223103940487, :y2 179.86978149414062, :width 523, :height 679.9000000000001}, :rects ({:x1 67.31770834326744, :y1 167.78646850585938, :x2 293.2223103940487, :y2 179.86978149414062, :width 523, :height 679.9000000000001}), :page 452}, :content {:text "(obj as? String) ?: failWithBadData(obj)"}, :properties {:color "red"}} {:id #uuid "633a9c09-31cd-46e3-acf8-85b5f9194b24", :page 452, :position {:bounding {:x1 0, :y1 46.34114456176758, :x2 287.5859883725643, :y2 141.64713668823242, :width 523, :height 679.9000000000001}, :rects ({:x1 0, :y1 46.34114456176758, :x2 0, :y2 65.50780868530273, :width 523, :height 679.9000000000001} {:x1 56.0351537168026, :y1 116.82291793823242, :x2 287.5859883725643, :y2 128.90624618530273, :width 523, :height 679.9000000000001} {:x1 67.31770834326744, :y1 129.56379318237305, :x2 287.56456503272057, :y2 141.64713668823242, :width 523, :height 679.9000000000001}), :page 452}, :content {:text "fun failWithBadData(obj: Any?): Nothing = throw BadData(\"Needs String, got $obj\")"}, :properties {:color "red"}} {:id #uuid "633a9c10-b3fd-451c-8f77-eec5447caf60", :page 451, :position {:bounding {:x1 0, :y1 78.34635162353516, :x2 298.84712728857994, :y2 218.09895706176758, :width 523, :height 679.9000000000001}, :rects ({:x1 0, :y1 78.34635162353516, :x2 0, :y2 97.51301956176758, :width 523, :height 679.9000000000001} {:x1 0, :y1 94.34895706176758, :x2 0, :y2 113.51562118530273, :width 523, :height 679.9000000000001} {:x1 0, :y1 110.35155868530273, :x2 0, :y2 129.5182228088379, :width 523, :height 679.9000000000001} {:x1 0, :y1 126.35416030883789, :x2 0, :y2 145.52083206176758, :width 523, :height 679.9000000000001} {:x1 56.0351537168026, :y1 155.0455665588379, :x2 259.34850057959557, :y2 167.1288948059082, :width 523, :height 679.9000000000001} {:x1 67.31770834326744, :y1 167.78645706176758, :x2 168.9480946958065, :y2 179.8697853088379, :width 523, :height 679.9000000000001} {:x1 78.60677084326744, :y1 180.5273323059082, :x2 95.55550894141197, :y2 192.61067581176758, :width 523, :height 679.9000000000001} {:x1 67.31770834326744, :y1 193.27473831176758, :x2 89.91602835059166, :y2 205.3580665588379, :width 523, :height 679.9000000000001} {:x1 78.60677084326744, :y1 206.0156135559082, :x2 298.84712728857994, :y2 218.09895706176758, :width 523, :height 679.9000000000001}), :page 451}, :content {:text "fun checkObject(obj: Any?): String = if (obj is String) obj else throw BadData(\"Needs String, got $obj\")"}, :properties {:color "red"}} {:id #uuid "633a9e7e-c1b3-413b-b8e0-e19171e778d2", :page 454, :position {:bounding {:x1 63.10546746850014, :y1 128.44403076171875, :x2 321.79943719506264, :y2 169.27734375, :width 589, :height 765.7}, :rects ({:x1 63.10546746850014, :y1 128.44403076171875, :x2 321.79943719506264, :y2 169.27734375, :width 589, :height 765.7}), :page 454}, :content {:text "Resource Cleanup"}, :properties {:color "red"}}]}